<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SAKURA</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.leezy.top/"/>
  <updated>2020-02-04T10:19:09.918Z</updated>
  <id>https://www.leezy.top/</id>
  
  <author>
    <name>LEEZY</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker常用命令</title>
    <link href="https://www.leezy.top/2020/02/04/Ubuntu%E8%AE%BE%E7%BD%AESSH%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95/"/>
    <id>https://www.leezy.top/2020/02/04/Ubuntu设置SSH免密码登录/</id>
    <published>2020-02-04T02:04:21.000Z</published>
    <updated>2020-02-04T10:19:09.918Z</updated>
    
    <content type="html"><![CDATA[<p>通过SSH公钥（锁🔒）和密钥（钥匙🔑）来实现Putty免输入密码登录操作。</p><a id="more"></a><h3 id="生成公钥和私钥"><a href="#生成公钥和私钥" class="headerlink" title="生成公钥和私钥"></a>生成公钥和私钥</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p><img src="/assets/blogImg/SSH_%E7%94%9F%E6%88%90%E5%85%AC%E9%92%A5_%E7%A7%81%E9%92%A5.png" alt="SSH_生成公钥_私钥"> </p><p>用WinSCP打开文件保存路径<code>/root/.ssh/</code></p><p><em>注意 设置/etc/ssh/sshd_config 文件下的 PermitRootLogin yes<br>PasswordAuthentication yes 才可以root登录，并重启ssh服务 systemctl restart ssh.service</em></p><p>将<code>/root/.ssh/</code>路径下的<code>id_rsa</code>导入到PuTTYgen (Conversions -&gt; Import key)，并生成及保存私钥。<br>在PuTTY SSH -&gt; Auth 中添加私钥文件。</p><p>再次修改SSH配置文件<code>/etc/ssh/sshd_config</code>，取消下面几项配置的注释</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#PubkeyAuthentication yes</span><br><span class="line">#AuthorizedKeysFile     .ssh/authorized_keys .ssh/authorized_keys2</span><br></pre></td></tr></table></figure><p>执行下面这条命令，将公钥添加到<code>.ssh/authorized_keys</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>至此完成Ubuntu SSH 免密码登录设置。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过SSH公钥（锁🔒）和密钥（钥匙🔑）来实现Putty免输入密码登录操作。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://www.leezy.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Docker常用命令</title>
    <link href="https://www.leezy.top/2020/01/11/Docker%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://www.leezy.top/2020/01/11/Docker 常用命令/</id>
    <published>2020-01-11T08:22:21.000Z</published>
    <updated>2020-01-11T09:38:49.608Z</updated>
    
    <content type="html"><![CDATA[<h3 id="启动docker镜像"><a href="#启动docker镜像" class="headerlink" title="启动docker镜像"></a>启动docker镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 查看已经安装的镜像</span><br><span class="line">docker images</span><br><span class="line"><span class="meta">#</span> 查看容器ID</span><br><span class="line">doker ps</span><br><span class="line"><span class="meta">#</span> 启动容器</span><br><span class="line">docker start &lt;容器id&gt;</span><br><span class="line"><span class="meta">#</span> 开启一个容器内部的交互式终端</span><br><span class="line">docker exec -it &lt;容器id&gt;</span><br></pre></td></tr></table></figure><h3 id="Docker安装MySQL"><a href="#Docker安装MySQL" class="headerlink" title="Docker安装MySQL"></a>Docker安装MySQL</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql</span><br><span class="line"><span class="meta">#</span> 将容器的 3306 端口映射到主机的 3306 端口, 容器conf目录和logs目录、data目录都挂载在本地，并设置root密码 root</span><br><span class="line">docker run -p 3306:3306 --name mymysql -v $PWD/conf:/etc/mysql/conf.d -v $PWD/logs:/logs -v $PWD/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=root -d mysql</span><br><span class="line"><span class="meta">#</span> 这里会输出容器ID</span><br><span class="line"><span class="meta">#</span> 进入容器</span><br><span class="line">docker exec -it &lt;容器ID&gt; /bin/bash</span><br><span class="line"><span class="meta">#</span> 登录Mysql</span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="meta">#</span> 授权远程登录</span><br><span class="line">GRANT ALL ON *.* TO 'root'@'%';</span><br><span class="line"><span class="meta">#</span> 刷新权限</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h3 id="Docker安装Tomcat"><a href="#Docker安装Tomcat" class="headerlink" title="Docker安装Tomcat"></a>Docker安装Tomcat</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 安装Tomcat</span><br><span class="line">docker pull tomcat</span><br><span class="line"><span class="meta">#</span> 运行容器</span><br><span class="line"><span class="meta">#</span> 命令说明</span><br><span class="line"><span class="meta">#</span> -p 8080:8080：将容器的 8080 端口映射到主机的 8080 端口。</span><br><span class="line"><span class="meta">#</span> -v $PWD/test:/usr/local/tomcat/webapps/test：将主机中当前目录下的 test 挂载到容器的 /test。</span><br><span class="line">docker run --name tomcat -p 8080:8080 -v $PWD/test:/usr/local/tomcat/webapps/test -d tomcat</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;启动docker镜像&quot;&gt;&lt;a href=&quot;#启动docker镜像&quot; class=&quot;headerlink&quot; title=&quot;启动docker镜像&quot;&gt;&lt;/a&gt;启动docker镜像&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
    
    
      <category term="Docker" scheme="https://www.leezy.top/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Java基础知识-并发编程</title>
    <link href="https://www.leezy.top/2019/11/30/JAVA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    <id>https://www.leezy.top/2019/11/30/JAVA基础知识-并发编程/</id>
    <published>2019-11-29T16:00:00.000Z</published>
    <updated>2019-12-26T15:41:11.860Z</updated>
    
    <content type="html"><![CDATA[<p>并发编程的基础、并发模拟工具及代码。</p><a id="more"></a><h3 id="并发编程的基础"><a href="#并发编程的基础" class="headerlink" title="并发编程的基础"></a>并发编程的基础</h3><blockquote><p>CPU多级缓存</p></blockquote><p>时间局部性 空间局部性<br>缓存一致性： M E S I 用于保证多个CPU Cache之间共享数据的一致<br>M 修改状态<br>E 独享状态<br>S 共享状态<br>I 无效状态</p><blockquote><p>乱序执行优化</p></blockquote><p>为了提高运算速度而做出违背代码原有顺序的优化</p><blockquote><p>JAVA内存模型 (Java Memory Model - JMM)</p></blockquote><p>Heap 堆<br>可动态分配内存大小，生存期不需事先告诉编译器，存取速度慢，常用于存放对象<br>Thread Stack 栈<br>存取速度快，仅次于寄存器，数据大小和生存期必须确定，常用于存取基本类型变量，本地变量</p><p>栈上的引用变量数据可以访问引用的堆对象，如果两个线程同时调用了同一个对象，都会访问成员变量，但是这两个线程会有自己变量的私有拷贝。</p><p>每个线程都有自己的“本地内存”，Java中线程的“本地内存”指的是CPU寄存器和高速缓存的抽象描述。两个线程之间的变量共享是要通过主内存的。</p><blockquote><p>Java内存模型-同步八种操作</p></blockquote><ul><li><p>lock（锁定）：作用于主内存的变量，把一个变量标识为一条线程独占状态</p></li><li><p>unlock（解锁）：作用于主内存的变量，把一个处于锁定状态的变量释放出来，释放后的变量才可以被其他线程锁定。</p></li><li><p>read（读取）：作用于主内存的变量，把一个变量值从主内存传输到线程的工作内存中以便随后的load动作使用。</p></li><li><p>load（载入）: 作用于工作内存的变量,它把read操作从主内存中得到的变量值放入工作内存的变量副本中</p></li><li><p>use（使用）：作用于工作内存的变量,把工作内存中的一个变量值传递给执行引擎</p></li><li><p>assign（赋值）：作用于工作内存的变量,它把一个从执行引擎接收到的值赋值给工作内存的变量</p></li><li><p>store（存储）：作用于工作内存的变量，把工作内存中的一个变量的值传送到主内存中,以便随后的write的操作</p></li><li><p>write（写入）：作用于主内存的变量,它把store操作从工作内存中一个变量的值传送到主内存的变量中</p></li></ul><p>工作规则：</p><ul><li><p>如果要把一个变量从主内存中复制到工作内存,就需要按顺序地执行read和load操作,如果把变量从工作内存中同步回主内存中,就要按顺序地执行store和write操作。但Java内存模型只要求上述操作必须按顺序执行,而没有保证必须是连续执行。</p></li><li><p>不允许read和load、store和write操作之一单独出现</p></li><li><p>不允许一个线程丢弃它的最近assign的操作,即变量在工作内存中改变了之后必须同步到主内存中</p></li><li><p>不允许—个线程无原因地(没有发生过任何assign操作)把数据从工作内存同步回主内存中</p></li><li><p>一个新的变量只能在主内存中诞生,不允许在工作内存中直接使用一个未被初始化(load或assign )的变量。即就是对一个变量实施use和store操作之前,必须先执行过了assign和load操作</p></li><li><p>一个变量在同_时刻只允许一条线程对其进行lock操作，但lock操作可以被同一条线程重复执行多次,多次执行lock后,只有执行相同次数的unlock操作,变量才会被解锁。lock和unlock必须成对出现</p></li><li><p>如果对一个变量执行lock操作,将会清空工作内存中此变量的值,在执行引擎使用这个变量前需要重新执行load或assign操作初始化变量的值</p></li><li><p>不允许一个线程无原因地（没有发生过任何assign操作）把数据从工作内存同步回主内存中</p></li><li><p>一个新的变量只能在主内存中诞生/不允许在工作内存中直接使用一个未被初始化（load或assign ）的变量。即就是对一个变量实施use和store操作之前, 必须先执行过了assign和load操作</p></li></ul><h3 id="并发模拟工具及代码"><a href="#并发模拟工具及代码" class="headerlink" title="并发模拟工具及代码:"></a>并发模拟工具及代码:</h3><p>工具：</p><blockquote><p>PostMan</p></blockquote><blockquote><p>Apache Bench</p></blockquote><blockquote><p>Apache JMeter</p></blockquote><p>代码：</p><blockquote><p>CountDownLatch - 闭锁：1. await() 2. countDown() 阻塞线程，满足某种特定的条件继续执行，常与与线程池一同使用。</p></blockquote><blockquote><p>Semaphore - 信号量：可以阻塞线程，控制同一时间请求的并发量</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leezy.concurrency;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.leezy.concurrency.annoations.NotThreadSafe;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CountDownLatch;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Semaphore;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: spring-cloud-leezy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 测试并发</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: LEEZY</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2019-11-30 16:03</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@NotThreadSafe</span></span><br><span class="line"><span class="comment">// count:4962 结果不准确，线程不安全</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConcurrencyTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 请求总数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> clientTotal = <span class="number">5000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 同时并发执行的线程数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> threadTotal = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        <span class="comment">// 线程池</span></span><br><span class="line">        ExecutorService executorService = Executors.newCachedThreadPool();</span><br><span class="line">        <span class="comment">// 信号量以及并发线程数</span></span><br><span class="line">        <span class="keyword">final</span> Semaphore semaphore = <span class="keyword">new</span> Semaphore(threadTotal);</span><br><span class="line">        <span class="comment">// 计数器-闭锁 放入请求总数</span></span><br><span class="line">        <span class="keyword">final</span> CountDownLatch countDownLatch = <span class="keyword">new</span> CountDownLatch(clientTotal);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; clientTotal; i++) &#123;</span><br><span class="line">            executorService.execute(() -&gt; &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">// 根据并发的限制数量, 判断当前线程是否允许被执行</span></span><br><span class="line">                    semaphore.acquire();</span><br><span class="line">                    add();</span><br><span class="line">                    <span class="comment">// 释放线程</span></span><br><span class="line">                    semaphore.release();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    log.error(<span class="string">"exception"</span>, e);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 执行一次就进行releaseShared</span></span><br><span class="line">                countDownLatch.countDown();</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 这个方法可以保证 countDown 减为0</span></span><br><span class="line">        countDownLatch.await();</span><br><span class="line">        <span class="comment">// 关闭线程池</span></span><br><span class="line">        executorService.shutdown();</span><br><span class="line">        log.info(<span class="string">"count:"</span> + count);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="线程安全性"><a href="#线程安全性" class="headerlink" title="线程安全性"></a>线程安全性</h3><blockquote><p>原子性：提供了互斥访问，同一时刻只能有一个线程来对它进行操作。 - Atomic包</p></blockquote><h3 id="ThreadLocal的使用"><a href="#ThreadLocal的使用" class="headerlink" title="ThreadLocal的使用"></a>ThreadLocal的使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.logging.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadLocalTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Logger logger = Logger.getLogger(<span class="string">"logger"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ThreadLocal&lt;String&gt; mThreadLocal = <span class="keyword">new</span> ThreadLocal&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">testThreadLocal</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        mThreadLocal.set(<span class="string">"main-thread"</span>);</span><br><span class="line">        logger.info(<span class="string">"result1: "</span> + mThreadLocal.get());</span><br><span class="line">        Thread thread1 = <span class="keyword">new</span> Thread() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">super</span>.run();</span><br><span class="line">                <span class="comment">// thread1内部设置的值只有thead1内部可以得到，所以result3为空</span></span><br><span class="line">                mThreadLocal.set(<span class="string">"thread_one"</span>);</span><br><span class="line">                logger.info(<span class="string">"result2: "</span> + mThreadLocal.get());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        thread1.start();</span><br><span class="line">        thread1.join();</span><br><span class="line">        Thread thread2 = <span class="keyword">new</span> Thread() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">super</span>.run();</span><br><span class="line">                logger.info(<span class="string">"result3: "</span> + mThreadLocal.get());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        thread2.start();</span><br><span class="line">        thread2.join();</span><br><span class="line">        logger.info(<span class="string">"result4: "</span> + mThreadLocal.get());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ThreadLocalTest threadLocalTest = <span class="keyword">new</span> ThreadLocalTest();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            threadLocalTest.testThreadLocal();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 十二月 15, 2019 4:36:21 下午 ThreadLocalTest testThreadLocal</span><br><span class="line">信息: result1: main-thread</span><br><span class="line"><span class="meta">#</span> 十二月 15, 2019 4:36:21 下午 ThreadLocalTest$1 run</span><br><span class="line">信息: result2: thread_one</span><br><span class="line"><span class="meta">#</span> 十二月 15, 2019 4:36:21 下午 ThreadLocalTest$2 run</span><br><span class="line">信息: result3: null</span><br><span class="line"><span class="meta">#</span> 十二月 15, 2019 4:36:21 下午 ThreadLocalTest testThreadLocal</span><br><span class="line">信息: result4: main-thread</span><br></pre></td></tr></table></figure><h3 id="ThreadLocal详解"><a href="#ThreadLocal详解" class="headerlink" title="ThreadLocal详解"></a>ThreadLocal详解</h3><p>四个接口：</p><ul><li><p>public void set(T value) { }<br>设置当前线程的ThreadLocal值为指定的Value</p></li><li><p>public T get() { }<br>获取当前线程所对应的ThreadLocal值，如果当前线程下没有值，就调用initialValue函数对其进行初始化</p></li><li><p>public void remove() { }<br>删除当前线程ThreadLocal对应的值，当前线程结束时，系统会自动回收线程局部变量值。P.S. remove方法调用后再调用get方法会使<br>initialValue()重新被调用，从而使ThreadLocal的值被重新被初始化。</p></li><li><p>protected T initilValue() { }<br>当前线程通过get()方法第一次对ThreadLocal进行访问时，会调用该方法。</p></li></ul><p>如果我们希望ThreadLocal拥有一个不为null的初始值，则应该为ThreadLocal定义一个子类，并重写initialValue()方法。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;并发编程的基础、并发模拟工具及代码。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Java" scheme="https://www.leezy.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>JAVA8 常用的日期时间方法</title>
    <link href="https://www.leezy.top/2019/11/07/JAVA8%E5%B8%B8%E7%94%A8%E7%9A%84%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%E6%96%B9%E6%B3%95/"/>
    <id>https://www.leezy.top/2019/11/07/JAVA8常用的日期时间方法/</id>
    <published>2019-11-07T08:27:03.000Z</published>
    <updated>2019-12-21T08:38:22.798Z</updated>
    
    <content type="html"><![CDATA[<p>JAVA8 更新了原本线程不安全的SimpleDateFormat, 新的DateTimeFormatter则是线程安全的。</p><a id="more"></a><p>下面列出JAVA8开发中常用的时间操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.DayOfWeek;</span><br><span class="line"><span class="keyword">import</span> java.time.Instant;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalTime;</span><br><span class="line"><span class="keyword">import</span> java.time.Month;</span><br><span class="line"><span class="keyword">import</span> java.time.ZoneId;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"><span class="keyword">import</span> java.time.temporal.ChronoField;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TimeTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取当前年月日 - 2019-11-06</span></span><br><span class="line">        LocalDate nowDate = LocalDate.now();</span><br><span class="line">        <span class="comment">// 2019</span></span><br><span class="line">        <span class="keyword">int</span> nowYear = nowDate.getYear();</span><br><span class="line">        <span class="comment">// 2019</span></span><br><span class="line">        <span class="keyword">int</span> nowYear1 = nowDate.get(ChronoField.YEAR);</span><br><span class="line">        <span class="comment">// NOVEMBER</span></span><br><span class="line">        Month nowMonth = nowDate.getMonth();</span><br><span class="line">        <span class="comment">// 11</span></span><br><span class="line">        <span class="keyword">int</span> nowMonth1 = nowDate.get(ChronoField.MONTH_OF_YEAR);</span><br><span class="line">        <span class="comment">// 6</span></span><br><span class="line">        <span class="keyword">int</span> nowDay = nowDate.getDayOfMonth();</span><br><span class="line">        <span class="comment">// 6</span></span><br><span class="line">        <span class="keyword">int</span> nowDay1 = nowDate.get(ChronoField.DAY_OF_MONTH);</span><br><span class="line">        <span class="comment">// WEDNESDAY</span></span><br><span class="line">        DayOfWeek dayOfWeek = nowDate.getDayOfWeek();</span><br><span class="line">        <span class="comment">// 3</span></span><br><span class="line">        <span class="keyword">int</span> dayOfWeek1 = nowDate.get(ChronoField.DAY_OF_WEEK);</span><br><span class="line">        <span class="comment">// 获取当前时分秒 - 15:16:24.401</span></span><br><span class="line">        LocalTime nowTime = LocalTime.now();</span><br><span class="line">        <span class="comment">// 指定时分秒 - 12:51:10</span></span><br><span class="line">        LocalTime nowTime1 = LocalTime.of(<span class="number">12</span>, <span class="number">51</span>, <span class="number">10</span>);</span><br><span class="line">        <span class="comment">// 指定时间 - 2019-11-06</span></span><br><span class="line">        LocalDate specificTime = LocalDate.of(<span class="number">2019</span>, <span class="number">11</span>, <span class="number">6</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// LocalDateTime 获取年月日时分秒</span></span><br><span class="line">        LocalDateTime localDateTime = LocalDateTime.now();</span><br><span class="line">        <span class="comment">// 指定时间 2019-11-11T16:14:20</span></span><br><span class="line">        LocalDateTime localDateTime1 = LocalDateTime.of(<span class="number">2019</span>, Month.NOVEMBER, <span class="number">11</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">20</span>);</span><br><span class="line">        <span class="comment">// 2019-11-06T16:19:51.506</span></span><br><span class="line">        LocalDateTime localDateTime2 = LocalDateTime.of(nowDate, nowTime);</span><br><span class="line">        <span class="comment">// LocalDateTime localDateTime3 = LocalDat</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取毫秒数</span></span><br><span class="line">        <span class="comment">// 获取当前时间 2019-11-06T07:18:39.956Z</span></span><br><span class="line">        Instant instant = Instant.now();</span><br><span class="line">        <span class="comment">// 1573028684 得到的是秒数</span></span><br><span class="line">        <span class="keyword">long</span> currentSecond = instant.getEpochSecond();</span><br><span class="line">        <span class="comment">// 1573028779924 得到毫秒数</span></span><br><span class="line">        <span class="keyword">long</span> currentMilli = instant.toEpochMilli();</span><br><span class="line">        <span class="comment">// 获取当前年月日 - 2019-11-06</span></span><br><span class="line">        LocalDate date = Instant.ofEpochMilli(instant.toEpochMilli()).atZone(ZoneId.systemDefault()).toLocalDate();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 格式化时间</span></span><br><span class="line">        <span class="comment">// 2019-11-06</span></span><br><span class="line">        LocalDate localDate = LocalDate.of(<span class="number">2019</span>, <span class="number">11</span>, <span class="number">6</span>);</span><br><span class="line">        <span class="comment">// 20191106</span></span><br><span class="line">        String str1 = localDate.format(DateTimeFormatter.BASIC_ISO_DATE);</span><br><span class="line">        <span class="comment">// 2019-11-06</span></span><br><span class="line">        String str2 = localDate.format(DateTimeFormatter.ISO_LOCAL_DATE);</span><br><span class="line">        <span class="comment">// 自定义格式化</span></span><br><span class="line">        DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">        <span class="comment">// 2019-11-06 16:41:10</span></span><br><span class="line">        String str3 = localDateTime.format(dateTimeFormatter);</span><br><span class="line">        System.out.println(str3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JAVA8 更新了原本线程不安全的SimpleDateFormat, 新的DateTimeFormatter则是线程安全的。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Java" scheme="https://www.leezy.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>MySQL优化</title>
    <link href="https://www.leezy.top/2019/10/08/MySQL%E4%BC%98%E5%8C%96/"/>
    <id>https://www.leezy.top/2019/10/08/MySQL优化/</id>
    <published>2019-10-08T08:40:55.000Z</published>
    <updated>2019-12-16T07:59:22.802Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL的优化方法。</p><a id="more"></a><h3 id="MySQL的标准执行顺序"><a href="#MySQL的标准执行顺序" class="headerlink" title="MySQL的标准执行顺序"></a>MySQL的标准执行顺序</h3><p>从上到下：</p><blockquote><p><code>FROM</code></p></blockquote><blockquote><p><code>ON</code><join_condition></join_condition></p></blockquote><blockquote><p><join_type><code>JOIN</code><right_table></right_table></join_type></p></blockquote><blockquote><p><code>WHERE</code><where_condition></where_condition></p></blockquote><blockquote><p><code>GROUP BY</code><group_by_list></group_by_list></p></blockquote><blockquote><p><code>WITH</code> {CUBE|ROLLUP}</p></blockquote><blockquote><p><code>HAVING</code><having_condition></having_condition></p></blockquote><blockquote><p><code>SELECT</code></p></blockquote><blockquote><p><code>DISTINCT</code><select_list></select_list></p></blockquote><blockquote><p><code>ORDER BY</code><order_by_list></order_by_list></p></blockquote><blockquote><p><code>LIMIT</code><limit_number></limit_number></p></blockquote><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><p>场景：含有GroupBy的语句里如何显示查询Count()为0的字段。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MySQL的优化方法。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="MySQL" scheme="https://www.leezy.top/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Git-从入门到精通</title>
    <link href="https://www.leezy.top/2019/09/29/Git-%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <id>https://www.leezy.top/2019/09/29/Git-从入门到精通/</id>
    <published>2019-09-29T09:43:03.000Z</published>
    <updated>2019-12-18T13:50:14.337Z</updated>
    
    <content type="html"><![CDATA[<p>Git Bash的简单使用方法。</p><a id="more"></a><p>git 可以分三个区：</p><blockquote><p>工作区(注解编辑页面)，就是本地文件夹。<br>暂存区(数据暂时存放的位置，可以在工作区和版本库之间进行数据的友好交流)，git add 命令将他们添加到暂存区。<br>版本库/本地仓库(存放已经提交的数据，push的时候，就是将这个区的数据push到远程仓库了)，git commit 命令则将暂存区中的文件提交到本地仓库中。</p></blockquote><p>首先连接到国际互联网:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 不需要的就不用了</span><br><span class="line">export http_proxy="http://127.0.0.1:1080/"</span><br><span class="line">export https_proxy="http://127.0.0.1:1080/"</span><br></pre></td></tr></table></figure><h3 id="创建代码仓库"><a href="#创建代码仓库" class="headerlink" title="创建代码仓库"></a>创建代码仓库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "SAKURA"</span><br><span class="line">git config --global user.email "xxx@gmail.com"</span><br><span class="line"><span class="meta">#</span> 建立代码仓库(在指定目录建立.git文件夹)</span><br><span class="line">git init</span><br><span class="line"><span class="meta">#</span> 查看代码仓库状态</span><br><span class="line">git status</span><br></pre></td></tr></table></figure><h3 id="提交本地代码"><a href="#提交本地代码" class="headerlink" title="提交本地代码"></a>提交本地代码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git add READEME.txt</span><br><span class="line"><span class="meta">#</span> 全部更新到暂存区</span><br><span class="line">git add .</span><br><span class="line"><span class="meta">#</span> 在 -m 后面加上声明, 将代码提交到本地仓库</span><br><span class="line">git commit -m "Wrote a READEME file"</span><br><span class="line"><span class="meta">#</span> 如果要求的提交备注特别多,可以打开一个vi编辑器</span><br><span class="line">git commit</span><br><span class="line"><span class="meta">#</span> 从本地仓库提交到远程仓库master分支</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p><strong>注释</strong><br>可以在代码仓库的根目录下创建一个名为.gitignore的文件，然后编辑里面的内容，把不需提交的文件忽略掉！</p><h3 id="commit前的文件状态"><a href="#commit前的文件状态" class="headerlink" title="commit前的文件状态"></a>commit前的文件状态</h3><p><code>git status</code>查看文件状态，Git在未进行commit操作之前，存在三种状态：</p><blockquote><p>Untracked files</p></blockquote><blockquote><p>Changes not staged for commit</p></blockquote><blockquote><p>Changes to be committed</p></blockquote><h3 id="分支的建立"><a href="#分支的建立" class="headerlink" title="分支的建立"></a>分支的建立</h3><p>早建分支, 多用分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 建立分支</span><br><span class="line">git branch newImage</span><br><span class="line"><span class="meta">#</span> 切换到新分支 newImage</span><br><span class="line">git checkout newImage;</span><br><span class="line"><span class="meta">#</span> 新分支代码提交</span><br><span class="line">git commit</span><br></pre></td></tr></table></figure><p>上面的操作可以简化为下面两步</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 创建新的分支并切换到新分支</span><br><span class="line">git checkout -b newImage</span><br><span class="line"><span class="meta">#</span> 新分支代码提交</span><br><span class="line">git commit</span><br></pre></td></tr></table></figure><h3 id="分支的合并"><a href="#分支的合并" class="headerlink" title="分支的合并"></a>分支的合并</h3><p>方法一：<code>Merge</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 建立新的分支bugFix</span><br><span class="line">git branch bugFix</span><br><span class="line"><span class="meta">#</span> 切换到bugFix分支</span><br><span class="line">git checkout bugFix</span><br><span class="line"><span class="meta">#</span> bugFix代码提交</span><br><span class="line">git commit</span><br><span class="line"><span class="meta">#</span> 切换到master分支</span><br><span class="line">git checkout master</span><br><span class="line"><span class="meta">#</span> master分支代码提交</span><br><span class="line">git commit</span><br><span class="line"><span class="meta">#</span> 分支合并 - 现在master分支上有了bugFix的提交</span><br><span class="line">git merge bugFix</span><br></pre></td></tr></table></figure><p>方法二：<code>Rebase</code><br>简单来说Rebase就是取出一系列的提交记录，“复制”它们，然后在另外一个地方逐个将修改放下去，这样的好处是会使代码库的提交历史变得清晰。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 假设当前是在bugFix分支下，将bugFix分支的工作直接移动到master分支上</span><br><span class="line">git rebase master</span><br><span class="line"><span class="meta">#</span> 切换到master分支</span><br><span class="line">git checkout master</span><br><span class="line"><span class="meta">#</span> 将master分支的引用向前移动，即rebase到bugFix</span><br><span class="line">git rebase bugFix</span><br></pre></td></tr></table></figure><h3 id="在提交树上移动"><a href="#在提交树上移动" class="headerlink" title="在提交树上移动"></a>在提交树上移动</h3><p>HEAD 总是指向当前分支上最近一次提交记录，<strong>HEAD通常是指向分支名的,但是可以通过<code>git checkout &lt;哈希值&gt;</code>来将HEAD指向一个具体的提交记录</strong>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 查看HEAD指向的两种方式</span><br><span class="line">cat .git/HEAD</span><br><span class="line"><span class="meta">#</span> 如若HEAD指向的是一个引用</span><br><span class="line">git symbolic-ref HEAD </span><br><span class="line"><span class="meta">#</span> 分离的HEAD，为了让其指向某个具体的提交记录而不是分支名 注：这里的Hash值并不需要全部40位，</span><br><span class="line"><span class="meta">#</span> 能表示出唯一标识的前7位字符就可以</span><br><span class="line">git checkout &lt;提交记录的哈希值&gt;</span><br><span class="line">`</span><br></pre></td></tr></table></figure><p>为了避免使用<code>git log</code>命令查看Hash值，再通过<code>git checkout</code>命令分离HEAD，所以有了<strong>相对引用</strong></p><blockquote><p><code>^</code> 表示向上移动一个提交记录</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git checkout HEAD^</span><br><span class="line"><span class="meta">#</span> 或者</span><br><span class="line">git checkout master^</span><br></pre></td></tr></table></figure><blockquote><p><code>~&lt;num&gt;</code>表示向上移动<strong>多个</strong>提交记录, num为1时等价与<code>^</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 寻找指定提交记录的父提交</span><br><span class="line">git checkout HEAD~3</span><br><span class="line"><span class="meta">#</span> 或者</span><br><span class="line">git checkout master~3</span><br></pre></td></tr></table></figure><p>相对引用最常见的地方就是用来移动分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 将master分支移到HEAD所指分支位置前三个节点</span><br><span class="line">git branch -f master HEAD~3</span><br></pre></td></tr></table></figure><h3 id="撤销变更"><a href="#撤销变更" class="headerlink" title="撤销变更"></a>撤销变更</h3><p>方法一：<code>git reset</code> - 仅限在本地分支中使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 把分支记录回退几个提交记录来实现撤销改动,最新的提交变成了未加入暂存区状态(git reset 缺省为 git reset --soft)即文件没有更改</span><br><span class="line"><span class="meta">#</span> 只是将git commit 的信息给回退了。推荐直接使用 git reset --hard HEAD^, --hard参数会将文件直接修改回去。</span><br><span class="line">git reset HEAD~1</span><br></pre></td></tr></table></figure><p>方法二：<code>git revert</code> - 适用于提交到了远程分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 会在远程添加一个新的提交记录，用来抵消掉远程仓库最新的更改</span><br><span class="line">git revert HEAD</span><br></pre></td></tr></table></figure><p>但是如果你后悔了怎么办。这个时候需要</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 查看所有版本号</span><br><span class="line">git reflog</span><br><span class="line"><span class="meta">#</span> 退回到指定版本 包括已经删除了的修改</span><br><span class="line">git reset --hard XXX&lt;版本号&gt;</span><br></pre></td></tr></table></figure><h3 id="提交记录的整理"><a href="#提交记录的整理" class="headerlink" title="提交记录的整理"></a>提交记录的整理</h3><blockquote><p>将一些提交复制到当前所在的位置（HEAD）的下面，cherry-pick 可以将提交树上任何地方的提交记录取过来追加到 HEAD上（只要不是HEAD上游的提交就没有问题）</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> git cherry-pick &lt;提交号&gt;...</span><br><span class="line">git cherry-pick d4b052 4aa0aa</span><br></pre></td></tr></table></figure><blockquote><p>交互式的rebase</p></blockquote><p>你可以通过给<code>git rebase</code>增加<code>-i</code>选项来以交互方式地运行rebase。你必须通过告诉命令衍合到哪次提交，来指明你需要重写的提交的回溯深度。</p><p><img src="/assets/blogImg/Git_git_log.png" alt="Git_git_log"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 这是一个衍合命令——HEAD~2..HEAD范围内的每一次提交都会被重写，无论你是否修改说明。</span><br><span class="line">git rebase -i HEAD~2</span><br></pre></td></tr></table></figure><p>上述命令会打开一个交互窗口：</p><p><img src="/assets/blogImg/Git_git_rebase_i.png" alt="Git-从入门到精通_git_rebase_-i"></p><p>很重要的一点是你得注意这些提交的顺序与你通常通过log命令看到的是相反的。</p><p>通过rebase UI界面, 你能做3件事:</p><ul><li>调整提交记录的顺序</li><li>删除你不想要的提交</li><li>合并提交, 把多个提交记录合并成一个。</li></ul><p>详情请看<a href="https://git-scm.com/book/zh/v1/Git-%E5%B7%A5%E5%85%B7-%E9%87%8D%E5%86%99%E5%8E%86%E5%8F%B2" title="Git-工具-重写历史" target="_blank" rel="noopener">这里</a></p><h3 id="查看修改的内容"><a href="#查看修改的内容" class="headerlink" title="查看修改的内容"></a>查看修改的内容</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> "+"号表示新增内容， "-"号表示删除的内容</span><br><span class="line">git diff</span><br><span class="line"><span class="meta">#</span> 可视化的查看方法</span><br><span class="line">git difftool</span><br></pre></td></tr></table></figure><h3 id="查看提交记录"><a href="#查看提交记录" class="headerlink" title="查看提交记录"></a>查看提交记录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></table></figure><blockquote><ul><li>此次提交对应的版本号</li><li>提交人：姓名 邮箱</li><li>提交的时间</li><li>提交版本修改的内容：就是我们commit -m  “xxx”里的xxx</li></ul></blockquote><h3 id="记住密码"><a href="#记住密码" class="headerlink" title="记住密码"></a>记住密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure><h3 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h3><p>提交后回退到上一个版本</p><blockquote><ul><li>需要版本号</li><li>HEAD代表当前版本, HEAD^表示上一个版本, 以此类推</li></ul></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 查看版本号</span><br><span class="line">git log </span><br><span class="line">git reset --hard f37911a60ca123c86c712ff0539619902a7375e8(目标版本号)</span><br><span class="line"></span><br><span class="line">git reset --hard HEAD</span><br><span class="line">git reset --hard HEAD^</span><br><span class="line">git log</span><br></pre></td></tr></table></figure><p>如果你又后悔了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reflog</span><br></pre></td></tr></table></figure><p>键入版本号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard 版本号(你要回退的版本号)</span><br></pre></td></tr></table></figure><p>又会回到你期望的版本！</p><h3 id="GitHub-初始化提交"><a href="#GitHub-初始化提交" class="headerlink" title="GitHub 初始化提交"></a>GitHub 初始化提交</h3><ul><li><p>create a new repository on the command line</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">echo "# NOTES" &gt;&gt; README.md</span><br><span class="line">git init</span><br><span class="line"><span class="meta">#</span> git add .</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m "first commit"</span><br><span class="line">git remote add origin https://github.com/XXX/NOTES.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure></li><li><p>push an existing repository from the command line</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/XXX/NOTES.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure></li></ul><h3 id="自动上传脚本"><a href="#自动上传脚本" class="headerlink" title="自动上传脚本:"></a>自动上传脚本:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>! /bin/bash</span><br><span class="line">echo 'start autodeployment...:)'</span><br><span class="line">hexo clean</span><br><span class="line">echo 'hexo clean over...'</span><br><span class="line">hexo generate</span><br><span class="line">echo 'hexo generate over...'</span><br><span class="line">hexo deploy</span><br><span class="line">echo 'hexo deploy over...'</span><br><span class="line">echo 'run success!:)'</span><br></pre></td></tr></table></figure><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><p>场景：本地新建了一个新的文件夹，想拉取远程的一个项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin https://github.com/XXX/NOTES.git</span><br><span class="line"><span class="meta">#</span> git pull &lt;remote&gt; &lt;branch&gt; 直接指定远程master</span><br><span class="line">git pull origin master</span><br><span class="line"><span class="meta">#</span> 先指定本地master到远程的master，然后再去pull</span><br><span class="line">git branch --set-upstream-to=origin/master master</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><p>场景：将本地的<code>.git</code>文件删除了，本地文件也更新了，新建git仓库和远程合并</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin https://github.com/XXX/NOTES.git</span><br><span class="line"><span class="meta">#</span> 会报错，failed to push some refs to ...</span><br><span class="line">git push origin master</span><br><span class="line"><span class="meta">#</span> 这个时候需要先拉取远程的项目</span><br><span class="line">git pull origin master</span><br><span class="line"><span class="meta">#</span> 然后会报错，fatal: refusing to merge unrelated histories</span><br><span class="line">git pull origin master --allow-unrelated-histories</span><br><span class="line"><span class="meta">#</span> 然后按照要求解决冲突就好，再commit一下</span><br><span class="line">git add .</span><br><span class="line">git commit -m "fix conflicts"</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>场景：远程仓库里提交了一些不需要的文件，本地添加到<code>.gitignore</code>文件后不起作用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git rm -r --cached .</span><br><span class="line">git add .</span><br><span class="line">git commit -m 'update .gitignore'</span><br></pre></td></tr></table></figure><p>场景：远程仓库有两个分支<code>master</code>和<code>dev</code>，比较二者的版本差异</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 查看远程dev有但是远程master没有的</span><br><span class="line">git log origin/dev ^origin/master</span><br><span class="line"><span class="meta">#</span> 查看远程master有但是远程dev没有的</span><br><span class="line">git log origin/dev..origin/master</span><br><span class="line"><span class="meta">#</span> 查看远程master有但是远程dev没有的</span><br><span class="line">git log origin/master ^origin/dev</span><br><span class="line"><span class="meta">#</span> 查看远程dev有但是远程master没有的</span><br><span class="line">git log origin/master..origin/dev</span><br><span class="line"><span class="meta">#</span> 单纯想比较两者之间的区别</span><br><span class="line">git log origin/dev...origin/master</span><br><span class="line"><span class="meta">#</span> 或者</span><br><span class="line">git log --left-right dev...master</span><br></pre></td></tr></table></figure><p>上述命令可以加上<code>--pretty=oneline</code>让结果输出更简洁。</p><p>场景：处理完冲突后将文件查看分支的更改情况</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --graph --pretty=oneline --abbrev-commit</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Git Bash的简单使用方法。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Git" scheme="https://www.leezy.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>JAVA基础知识-Map</title>
    <link href="https://www.leezy.top/2019/09/09/JAVA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-Map/"/>
    <id>https://www.leezy.top/2019/09/09/JAVA基础知识-Map/</id>
    <published>2019-09-09T03:06:00.000Z</published>
    <updated>2019-12-18T14:56:13.629Z</updated>
    
    <content type="html"><![CDATA[<p>JAVA基础知识-Map 相关知识。</p><a id="more"></a><h3 id="遍历Map"><a href="#遍历Map" class="headerlink" title="遍历Map"></a>遍历Map</h3><blockquote><p>方法一：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SlowMap</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">"A"</span>, <span class="string">"01"</span>);</span><br><span class="line">        map.put(<span class="string">"B"</span>, <span class="string">"02"</span>);</span><br><span class="line">        map.put(<span class="string">"C"</span>, <span class="string">"03"</span>);</span><br><span class="line">        <span class="comment">// 获取键的集合</span></span><br><span class="line">        Set&lt;String&gt; keySet = map.keySet();</span><br><span class="line">        <span class="comment">// 利用set集合的迭代器</span></span><br><span class="line">        Iterator&lt;String&gt; iterator = keySet.iterator();</span><br><span class="line">        <span class="keyword">while</span>(iterator.hasNext()) &#123;</span><br><span class="line">            String key = iterator.next();</span><br><span class="line">            String value = map.get(key);</span><br><span class="line">            System.out.println(<span class="string">"MAP INFO KEY:"</span> + key + <span class="string">" VALUE:"</span> + value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">&gt; 方法二：</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickMap</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">"A"</span>, <span class="string">"01"</span>);</span><br><span class="line">        map.put(<span class="string">"B"</span>, <span class="string">"02"</span>);</span><br><span class="line">        map.put(<span class="string">"C"</span>, <span class="string">"03"</span>);</span><br><span class="line">        <span class="comment">// 通过entrySet()方法将map集合中的映射关系取出</span></span><br><span class="line">        Set&lt;Map.Entry&lt;String, String&gt;&gt; entry = map.entrySet();</span><br><span class="line">        <span class="comment">// 利用关系集合entrySet的迭代器</span></span><br><span class="line">        Iterator&lt;Map.Entry&lt;String, String&gt;&gt; iterator = entry.iterator();</span><br><span class="line">        <span class="keyword">while</span>(iterator.hasNext()) &#123;</span><br><span class="line">            <span class="comment">// 获取Map.Entry的关系对象me</span></span><br><span class="line">            Map.Entry&lt;String, String&gt; me = iterator.next();</span><br><span class="line">            <span class="comment">// 通过关系对象获取key</span></span><br><span class="line">            String key = me.getKey();</span><br><span class="line">            <span class="comment">// 通过关系对象获取value</span></span><br><span class="line">            String value = me.getValue();</span><br><span class="line">            System.out.println(<span class="string">"Key :"</span> + key + <span class="string">" value :"</span> + value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>方法三：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CollectionMap</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">"A"</span>, <span class="string">"01"</span>);</span><br><span class="line">        map.put(<span class="string">"B"</span>, <span class="string">"02"</span>);</span><br><span class="line">        map.put(<span class="string">"C"</span>, <span class="string">"03"</span>);</span><br><span class="line">        <span class="comment">// Collection集合存放Map的value值</span></span><br><span class="line">        Collection&lt;String&gt; collection = map.values();</span><br><span class="line">        <span class="comment">// 遍历Collection</span></span><br><span class="line">        Iterator&lt;String&gt; it = collection.iterator();</span><br><span class="line">        <span class="comment">// 只能遍历value值，不能遍历key值</span></span><br><span class="line">        <span class="keyword">while</span>(it.hasNext()) &#123;</span><br><span class="line">            Object value = it.next();</span><br><span class="line">            System.out.println(value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>最佳实践：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BestMap</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">"A"</span>, <span class="string">"01"</span>);</span><br><span class="line">        map.put(<span class="string">"B"</span>, <span class="string">"02"</span>);</span><br><span class="line">        map.put(<span class="string">"C"</span>, <span class="string">"03"</span>);</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; entry : map.entrySet()) &#123;</span><br><span class="line">            System.out.println(<span class="string">"key= "</span> + entry.getKey() + <span class="string">" and value= "</span> + entry.getValue());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JAVA基础知识-Map 相关知识。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Java" scheme="https://www.leezy.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>JAVA基础知识-HashMap</title>
    <link href="https://www.leezy.top/2019/09/05/JAVA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-HashMap/"/>
    <id>https://www.leezy.top/2019/09/05/JAVA基础知识-HashMap/</id>
    <published>2019-09-05T03:06:00.000Z</published>
    <updated>2019-12-16T06:38:24.356Z</updated>
    
    <content type="html"><![CDATA[<p>JAVA基础知识-HashMap 相关知识。</p><a id="more"></a><h3 id="常用的通配符"><a href="#常用的通配符" class="headerlink" title="常用的通配符"></a>常用的通配符</h3><p><strong>T</strong>, <strong>E</strong>, <strong>K</strong>, <strong>V</strong>, <strong>?</strong></p><p>本质上没有任何区别，但是为了维持可读性，常这样约定：</p><p>？表示不确定的JAVA类型</p><p>T (type) 表示一个具体的JAVA类型</p><p>K V (key value) 分别表示JAVA键值对 key - value</p><p>E (element) 代表Element</p><h3 id="RBT-红黑树"><a href="#RBT-红黑树" class="headerlink" title="RBT(红黑树)"></a>RBT(红黑树)</h3><ul><li>每个节点是红色或者黑色</li><li>根节点是黑色</li><li>每个叶节点是黑色的</li><li>如果一个节点是红色的，则它的两个儿子都是黑色的</li><li>对于每个节点，从该结点到其叶子节点构成的所有路径上的黑色结点个数相同</li></ul><p><strong>插入过程：</strong></p><p>默认插入节点为红色</p><h3 id="AVL-自平衡二叉查找树"><a href="#AVL-自平衡二叉查找树" class="headerlink" title="AVL(自平衡二叉查找树)"></a>AVL(自平衡二叉查找树)</h3><ul><li><p>首先是一棵二叉查找树</p><p><em>某节点的左子树节点值仅包含小于该节点值</em></p><p><em>某节点的右子树节点值仅包含大于该节点值</em></p><p><em>左右子树每个也必须是二叉查找树</em></p></li><li><p>带有平衡条件，每个结点的左右子树的高度之差的绝对值（平衡因子）最多为1</p></li></ul><h3 id="RBT和AVL"><a href="#RBT和AVL" class="headerlink" title="RBT和AVL"></a>RBT和AVL</h3><p>查找远远多于插入删除，选择AVL树</p><p>如果查找、插入、删除频率差不多，那么选择红黑树</p><h3 id="JAVA-中红黑树的实现"><a href="#JAVA-中红黑树的实现" class="headerlink" title="JAVA 中红黑树的实现"></a>JAVA 中红黑树的实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">TreeNode</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; <span class="keyword">extends</span> <span class="title">LinkedHashMap</span>.<span class="title">Entry</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; </span>&#123;</span><br><span class="line">        TreeNode&lt;K,V&gt; parent;  <span class="comment">// red-black tree links</span></span><br><span class="line">        TreeNode&lt;K,V&gt; left;</span><br><span class="line">        TreeNode&lt;K,V&gt; right;</span><br><span class="line">        TreeNode&lt;K,V&gt; prev;    <span class="comment">// needed to unlink next upon deletion</span></span><br><span class="line">        <span class="keyword">boolean</span> red;</span><br><span class="line">        TreeNode(<span class="keyword">int</span> hash, K key, V val, Node&lt;K,V&gt; next) &#123;</span><br><span class="line">            <span class="keyword">super</span>(hash, key, val, next);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>红黑树的插入过程：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> &lt;K,V&gt; <span class="function">TreeNode&lt;K,V&gt; <span class="title">balanceInsertion</span><span class="params">(TreeNode&lt;K,V&gt; root, TreeNode&lt;K,V&gt; x)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 初始染色为红</span></span><br><span class="line">    x.red = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (TreeNode&lt;K,V&gt; xp, xpp, xppl, xppr;;) &#123;</span><br><span class="line">        <span class="comment">// 插入的为根节点（父节点为空），则直接把颜色改为黑色</span></span><br><span class="line">        <span class="keyword">if</span> ((xp = x.parent) == <span class="keyword">null</span>) &#123;</span><br><span class="line">            x.red = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">return</span> x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 父节点为黑色节点或者插入节点的祖父节点为空，则直接返回</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (!xp.red || (xpp = xp.parent) == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> root;</span><br><span class="line">        <span class="comment">// I. 父节点和祖父节点都存在且父节点是祖父节点的左节点</span></span><br><span class="line">        <span class="keyword">if</span> (xp == (xppl = xpp.left)) &#123;</span><br><span class="line">            <span class="comment">// 1. 祖父节点的右节点（叔叔节点）不是空且为红色</span></span><br><span class="line">            <span class="keyword">if</span> ((xppr = xpp.right) != <span class="keyword">null</span> &amp;&amp; xppr.red) &#123;</span><br><span class="line">                <span class="comment">// 将叔叔节点改为黑色</span></span><br><span class="line">                xppr.red = <span class="keyword">false</span>;</span><br><span class="line">                <span class="comment">// 将父亲节点改为黑色</span></span><br><span class="line">                xp.red = <span class="keyword">false</span>;</span><br><span class="line">                <span class="comment">// 将祖父节点改为红色</span></span><br><span class="line">                xpp.red = <span class="keyword">true</span>;</span><br><span class="line">                x = xpp;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 2. 祖父节点的右节点（叔叔节点）是空或者为黑色</span></span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 插入节点是父节点的右孩子，将父节点左旋</span></span><br><span class="line">                <span class="keyword">if</span> (x == xp.right) &#123;</span><br><span class="line">                    root = rotateLeft(root, x = xp);</span><br><span class="line">                    xpp = (xp = x.parent) == <span class="keyword">null</span> ? <span class="keyword">null</span> : xp.parent;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 插入节点是父节点的左孩子</span></span><br><span class="line">                <span class="keyword">if</span> (xp != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="comment">// 将父节点变成黑色节点</span></span><br><span class="line">                    xp.red = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">if</span> (xpp != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="comment">// 祖父节点变成红色节点，然后将祖父节点右旋</span></span><br><span class="line">                        xpp.red = <span class="keyword">true</span>;</span><br><span class="line">                        root = rotateRight(root, xpp);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// II. 父节点和祖父节点都存在且父节点是祖父节点的右节点</span></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 1. 祖父节点的左节点（叔叔节点）不为空且为红色</span></span><br><span class="line">            <span class="keyword">if</span> (xppl != <span class="keyword">null</span> &amp;&amp; xppl.red) &#123;</span><br><span class="line">                <span class="comment">// 将叔叔节点改为黑色</span></span><br><span class="line">                xppl.red = <span class="keyword">false</span>;</span><br><span class="line">                <span class="comment">// 将父亲节点改为黑色</span></span><br><span class="line">                xp.red = <span class="keyword">false</span>;</span><br><span class="line">                <span class="comment">// 将祖父节点改为红色</span></span><br><span class="line">                xpp.red = <span class="keyword">true</span>;</span><br><span class="line">                x = xpp;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 2. 祖父节点的左节点（叔叔节点）是空或者为黑色</span></span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 插入节点是父节点的左孩子，将父节点右旋</span></span><br><span class="line">                <span class="keyword">if</span> (x == xp.left) &#123;</span><br><span class="line">                    root = rotateRight(root, x = xp);</span><br><span class="line">                    xpp = (xp = x.parent) == <span class="keyword">null</span> ? <span class="keyword">null</span> : xp.parent;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 插入节点是父节点的右孩子</span></span><br><span class="line">                <span class="keyword">if</span> (xp != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="comment">// 将父节点变成黑色节点</span></span><br><span class="line">                    xp.red = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">if</span> (xpp != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="comment">// 祖父节点变成红色节点，然后将祖父节点左旋</span></span><br><span class="line">                        xpp.red = <span class="keyword">true</span>;</span><br><span class="line">                        root = rotateLeft(root, xpp);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>左旋右旋方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> &lt;K,V&gt; <span class="function">TreeNode&lt;K,V&gt; <span class="title">rotateLeft</span><span class="params">(TreeNode&lt;K,V&gt; root, TreeNode&lt;K,V&gt; p)</span> </span>&#123;</span><br><span class="line">    TreeNode&lt;K,V&gt; r, pp, rl;</span><br><span class="line">    <span class="keyword">if</span> (p != <span class="keyword">null</span> &amp;&amp; (r = p.right) != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((rl = p.right = r.left) != <span class="keyword">null</span>)</span><br><span class="line">            rl.parent = p;</span><br><span class="line">        <span class="keyword">if</span> ((pp = r.parent = p.parent) == <span class="keyword">null</span>)</span><br><span class="line">            (root = r).red = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (pp.left == p)</span><br><span class="line">            pp.left = r;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            pp.right = r;</span><br><span class="line">        r.left = p;</span><br><span class="line">        p.parent = r;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> &lt;K,V&gt; <span class="function">TreeNode&lt;K,V&gt; <span class="title">rotateRight</span><span class="params">(TreeNode&lt;K,V&gt; root, TreeNode&lt;K,V&gt; p)</span> </span>&#123;</span><br><span class="line">    TreeNode&lt;K,V&gt; l, pp, lr;</span><br><span class="line">    <span class="keyword">if</span> (p != <span class="keyword">null</span> &amp;&amp; (l = p.left) != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((lr = p.left = l.right) != <span class="keyword">null</span>)</span><br><span class="line">            lr.parent = p;</span><br><span class="line">        <span class="keyword">if</span> ((pp = l.parent = p.parent) == <span class="keyword">null</span>)</span><br><span class="line">            (root = l).red = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (pp.right == p)</span><br><span class="line">            pp.right = l;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            pp.left = l;</span><br><span class="line">        l.right = p;</span><br><span class="line">        p.parent = l;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>红黑树的删除过程：</p><ol><li>先进行二叉搜索树的删除</li><li>然后进行红黑树的调整</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// p是待删除节点，replacement用于后续的红黑树调整，指向的是p或者p的继承者。</span></span><br><span class="line"><span class="keyword">if</span> (pl != <span class="keyword">null</span> &amp;&amp; pr != <span class="keyword">null</span>) &#123;</span><br><span class="line">    TreeNode&lt;K,V&gt; s = pr, sl;</span><br><span class="line">    <span class="keyword">while</span> ((sl = s.left) != <span class="keyword">null</span>) <span class="comment">// find successor</span></span><br><span class="line">        s = sl;</span><br><span class="line">    <span class="keyword">boolean</span> c = s.red; s.red = p.red; p.red = c; <span class="comment">// swap colors</span></span><br><span class="line">    TreeNode&lt;K,V&gt; sr = s.right;</span><br><span class="line">    TreeNode&lt;K,V&gt; pp = p.parent;</span><br><span class="line">    <span class="keyword">if</span> (s == pr) &#123; <span class="comment">// p was s's direct parent</span></span><br><span class="line">        p.parent = s;</span><br><span class="line">        s.right = p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        TreeNode&lt;K,V&gt; sp = s.parent;</span><br><span class="line">        <span class="keyword">if</span> ((p.parent = sp) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s == sp.left)</span><br><span class="line">                sp.left = p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                sp.right = p;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ((s.right = pr) != <span class="keyword">null</span>)</span><br><span class="line">            pr.parent = s;</span><br><span class="line">    &#125;</span><br><span class="line">    p.left = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> ((p.right = sr) != <span class="keyword">null</span>)</span><br><span class="line">        sr.parent = p;</span><br><span class="line">    <span class="keyword">if</span> ((s.left = pl) != <span class="keyword">null</span>)</span><br><span class="line">        pl.parent = s;</span><br><span class="line">    <span class="keyword">if</span> ((s.parent = pp) == <span class="keyword">null</span>)</span><br><span class="line">        root = s;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (p == pp.left)</span><br><span class="line">        pp.left = s;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        pp.right = s;</span><br><span class="line">    <span class="keyword">if</span> (sr != <span class="keyword">null</span>)</span><br><span class="line">        replacement = sr;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        replacement = p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (pl != <span class="keyword">null</span>)</span><br><span class="line">    replacement = pl;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (pr != <span class="keyword">null</span>)</span><br><span class="line">    replacement = pr;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    replacement = p;</span><br><span class="line"><span class="keyword">if</span> (replacement != p) &#123;</span><br><span class="line">    TreeNode&lt;K,V&gt; pp = replacement.parent = p.parent;</span><br><span class="line">    <span class="keyword">if</span> (pp == <span class="keyword">null</span>)</span><br><span class="line">        root = replacement;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (p == pp.left)</span><br><span class="line">        pp.left = replacement;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        pp.right = replacement;</span><br><span class="line">    p.left = p.right = p.parent = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果删除时的节点p是红色，则树平衡不会被破坏，无需调整。 </span></span><br><span class="line">TreeNode&lt;K,V&gt; r = p.red ? root : balanceDeletion(root, replacement);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (replacement == p) &#123;  <span class="comment">// detach</span></span><br><span class="line">    TreeNode&lt;K,V&gt; pp = p.parent;</span><br><span class="line">    p.parent = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (pp != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p == pp.left)</span><br><span class="line">            pp.left = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (p == pp.right)</span><br><span class="line">            pp.right = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (movable)</span><br><span class="line">    moveRootToFront(tab, r);</span><br></pre></td></tr></table></figure><p>删除后的调整</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// root : 根节点 | x : 根节点的继承者</span></span><br><span class="line"><span class="keyword">static</span> &lt;K,V&gt; <span class="function">TreeNode&lt;K,V&gt; <span class="title">balanceDeletion</span><span class="params">(TreeNode&lt;K,V&gt; root, TreeNode&lt;K,V&gt; x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (TreeNode&lt;K,V&gt; xp, xpl, xpr;;) &#123;</span><br><span class="line">        <span class="comment">// 如果x为空或x为根节点，直接返回</span></span><br><span class="line">        <span class="keyword">if</span> (x == <span class="keyword">null</span> || x == root)</span><br><span class="line">            <span class="keyword">return</span> root;</span><br><span class="line">        <span class="comment">// x为根节点，染成黑色，直接返回(删除的为根节点，则扶植继承者x为新的根节点)</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ((xp = x.parent) == <span class="keyword">null</span>) &#123;</span><br><span class="line">            x.red = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">return</span> x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// x为红色，则无需调整，直接返回根节点</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (x.red) &#123;</span><br><span class="line">            x.red = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">return</span> root;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// x为其父节点的左孩子</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ((xpl = xp.left) == x) &#123;</span><br><span class="line">            <span class="comment">// 如果x有红色兄弟节点xpr, 则它的父节点xp一定是黑色节点</span></span><br><span class="line">            <span class="keyword">if</span> ((xpr = xp.right) != <span class="keyword">null</span> &amp;&amp; xpr.red) &#123;</span><br><span class="line">                xpr.red = <span class="keyword">false</span>;</span><br><span class="line">                xp.red = <span class="keyword">true</span>;</span><br><span class="line">                <span class="comment">// 将父节点左旋</span></span><br><span class="line">                root = rotateLeft(root, xp);</span><br><span class="line">                <span class="comment">// 重新将xp指向x的父节点，xpr指向xp新的右孩子</span></span><br><span class="line">                xpr = (xp = x.parent) == <span class="keyword">null</span> ? <span class="keyword">null</span> : xp.right;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果xpr为空，则向上继续调整，将x的父节点xp作为新的x继续循环</span></span><br><span class="line">            <span class="keyword">if</span> (xpr == <span class="keyword">null</span>)</span><br><span class="line">                x = xp;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// sl和sr分别为其近侄子和远侄子</span></span><br><span class="line">                TreeNode&lt;K,V&gt; sl = xpr.left, sr = xpr.right;</span><br><span class="line">                <span class="comment">// 若s1和s2都为黑色或者不存在，即xpr没有红色孩子，则将xpr染红</span></span><br><span class="line">                <span class="keyword">if</span> ((sr == <span class="keyword">null</span> || !sr.red) &amp;&amp; (sl == <span class="keyword">null</span> || !sl.red)) &#123;</span><br><span class="line">                    xpr.red = <span class="keyword">true</span>;</span><br><span class="line">                    <span class="comment">// 继续向上循环</span></span><br><span class="line">                    x = xp;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 右孩子为空或者为黑色</span></span><br><span class="line">                    <span class="keyword">if</span> (sr == <span class="keyword">null</span> || !sr.red) &#123;</span><br><span class="line">                        <span class="comment">// 有左孩子则染黑</span></span><br><span class="line">                        <span class="keyword">if</span> (sl != <span class="keyword">null</span>)</span><br><span class="line">                            sl.red = <span class="keyword">false</span>;</span><br><span class="line">                        <span class="comment">// 将xpr染红</span></span><br><span class="line">                        xpr.red = <span class="keyword">true</span>;</span><br><span class="line">                        <span class="comment">// xpr右旋</span></span><br><span class="line">                        root = rotateRight(root, xpr);</span><br><span class="line">                        <span class="comment">// 右旋后xpr指向xp的新右孩子，即上面的s1</span></span><br><span class="line">                        xpr = (xp = x.parent) == <span class="keyword">null</span> ?</span><br><span class="line">                            <span class="keyword">null</span> : xp.right;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (xpr != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="comment">// xpr染成跟父节点一致的颜色，为后面父节点xp的左旋做准备</span></span><br><span class="line">                        <span class="keyword">if</span> ((sr = xpr.right) != <span class="keyword">null</span>)</span><br><span class="line">                        xpr.red = (xp == <span class="keyword">null</span>) ? <span class="keyword">false</span> : xp.red;</span><br><span class="line">                        <span class="keyword">if</span> ((sr = xpr.right) != <span class="keyword">null</span>)</span><br><span class="line">                            <span class="comment">// xpr新的右孩子染黑，防止出现两个红色相连</span></span><br><span class="line">                            sr.red = <span class="keyword">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (xp != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="comment">// 将xp染黑，并对其左旋，这样就能保证被删除的X所在的路径又多了一个黑色节点，从而达到恢复平衡的目的</span></span><br><span class="line">                        xp.red = <span class="keyword">false</span>;</span><br><span class="line">                        root = rotateLeft(root, xp);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 到此调整已经完毕，进入下一次循环后将直接退出</span></span><br><span class="line">                    x = root;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// x为其父节点的右孩子...</span></span><br><span class="line">        <span class="keyword">else</span> &#123; <span class="comment">// symmetric</span></span><br><span class="line">            <span class="keyword">if</span> (xpl != <span class="keyword">null</span> &amp;&amp; xpl.red) &#123;</span><br><span class="line">                xpl.red = <span class="keyword">false</span>;</span><br><span class="line">                xp.red = <span class="keyword">true</span>;</span><br><span class="line">                root = rotateRight(root, xp);</span><br><span class="line">                xpl = (xp = x.parent) == <span class="keyword">null</span> ? <span class="keyword">null</span> : xp.left;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (xpl == <span class="keyword">null</span>)</span><br><span class="line">                x = xp;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                TreeNode&lt;K,V&gt; sl = xpl.left, sr = xpl.right;</span><br><span class="line">                <span class="keyword">if</span> ((sl == <span class="keyword">null</span> || !sl.red) &amp;&amp;</span><br><span class="line">                    (sr == <span class="keyword">null</span> || !sr.red)) &#123;</span><br><span class="line">                    xpl.red = <span class="keyword">true</span>;</span><br><span class="line">                    x = xp;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (sl == <span class="keyword">null</span> || !sl.red) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (sr != <span class="keyword">null</span>)</span><br><span class="line">                            sr.red = <span class="keyword">false</span>;</span><br><span class="line">                        xpl.red = <span class="keyword">true</span>;</span><br><span class="line">                        root = rotateLeft(root, xpl);</span><br><span class="line">                        xpl = (xp = x.parent) == <span class="keyword">null</span> ?</span><br><span class="line">                            <span class="keyword">null</span> : xp.left;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (xpl != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        xpl.red = (xp == <span class="keyword">null</span>) ? <span class="keyword">false</span> : xp.red;</span><br><span class="line">                        <span class="keyword">if</span> ((sl = xpl.left) != <span class="keyword">null</span>)</span><br><span class="line">                            sl.red = <span class="keyword">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (xp != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        xp.red = <span class="keyword">false</span>;</span><br><span class="line">                        root = rotateRight(root, xp);</span><br><span class="line">                    &#125;</span><br><span class="line">                    x = root;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="重写HashCode-方法和Equals-方法"><a href="#重写HashCode-方法和Equals-方法" class="headerlink" title="重写HashCode()方法和Equals()方法"></a>重写HashCode()方法和Equals()方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Prediction.java</span></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Prediction</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Random rand = <span class="keyword">new</span> Random(<span class="number">47</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> shadow = rand.nextDouble() &gt; <span class="number">0.5</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (shadow) &#123; </span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Six more weeks of Winner!"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Early Spring"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Groundhog.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Groundhog</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> number;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Groundhog</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        number = n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Groundhog #"</span> + number;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SpringDetector.java</span></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringDetector</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 利用反射机制获取构造函数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T extends Groundhog&gt;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">detectSpring</span><span class="params">(Class&lt;T&gt; type)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Constructor&lt;T&gt; ghog = type.getConstructor(<span class="keyword">int</span>.class);</span><br><span class="line"></span><br><span class="line">        Map&lt;Groundhog, Prediction&gt; map = <span class="keyword">new</span> HashMap&lt;Groundhog, Prediction&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            map.put(ghog.newInstance(i), <span class="keyword">new</span> Prediction());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"MAP"</span> + map);</span><br><span class="line"></span><br><span class="line">        Groundhog groundhog = ghog.newInstance(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Looking up prediction for"</span> + groundhog);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (map.containsKey(groundhog)) &#123;</span><br><span class="line">            System.out.println(map.get(groundhog));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Key not found:"</span> + groundhog);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        detectSpring(Groundhog.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MAP&#123;Groundhog #1=Six more weeks of Winner!, Groundhog #4=Six more weeks of Winner!, Groundhog #5=Early Spring, Groundhog #3=Early Spring, Groundhog #8=Six more weeks of Winner!, Groundhog #7=Early Spring, Groundhog #0=Six more weeks of Winner!, Groundhog #2=Early Spring, Groundhog #9=Six more weeks of Winner!, Groundhog #6=Early Spring&#125;</span><br><span class="line">Looking up prediction forGroundhog #3</span><br><span class="line">Key not found:Groundhog #3</span><br></pre></td></tr></table></figure><p>Groundhog默认调用的是基类Object的hashCode方法，默认使用的是对象的地址计算的散列码。同时只重写hashCode()方法是不够的，还需要重写equals()方法。</p><blockquote><p><em>补充一句，hashCode()是基类Object的方法，所有Java对象都能产生散列码。</em></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Groundhog2.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Groundhog2</span> <span class="keyword">extends</span> <span class="title">Groundhog</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Groundhog2</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> number;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object object)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> object <span class="keyword">instanceof</span> Groundhog2 &amp;&amp; (number == ((Groundhog2)object).number);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SpringDetector2.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringDetector2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        SpringDetector.detectSpring(Groundhog2.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MAP&#123;Groundhog #0=Six more weeks of Winner!, Groundhog #1=Six more weeks of Winner!, Groundhog #2=Early Spring, Groundhog #3=Early Spring, Groundhog #4=Six more weeks of Winner!, Groundhog #5=Early Spring, Groundhog #6=Early Spring, Groundhog #7=Early Spring, Groundhog #8=Six more weeks of Winner!, Groundhog #9=Six more weeks of Winner!&#125;</span><br><span class="line">Looking up prediction forGroundhog #3</span><br><span class="line">Early Spring</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JAVA基础知识-HashMap 相关知识。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Java" scheme="https://www.leezy.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>データとの絆</title>
    <link href="https://www.leezy.top/2019/08/15/THE_DATA_ANALYSIS/"/>
    <id>https://www.leezy.top/2019/08/15/THE_DATA_ANALYSIS/</id>
    <published>2019-08-15T11:56:02.000Z</published>
    <updated>2019-12-16T06:40:32.587Z</updated>
    
    <content type="html"><![CDATA[<p>もう一回もう一回行こうぜ 僕らの声</p><p>アイムアルーザー ずっと前から聞こえてた</p><a id="more"></a><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">init_woody</span><br></pre></td></tr></table></figure><pre><code>Matplotlib env init complete.Warnings off.</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不省略行的查看数据</span></span><br><span class="line">pd.set_option(<span class="string">'display.max_columns'</span>, <span class="number">200</span>)</span><br></pre></td></tr></table></figure><h3 id="数据源准备"><a href="#数据源准备" class="headerlink" title="数据源准备"></a>数据源准备</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入train数据</span></span><br><span class="line">train_idv_td = pd.read_csv(<span class="string">"../data/2/train/IDV_TD.csv"</span>, encoding=<span class="string">'utf-8'</span>) <span class="comment"># 个人定期存款账户信息（IDV_TD）</span></span><br><span class="line">train_idv_dpsa = pd.read_csv(<span class="string">"../data/2/train/IDV_DPSA.csv"</span>, encoding=<span class="string">'utf-8'</span>) <span class="comment"># 个人活期存款账户信息（IDV_DPSA）</span></span><br><span class="line">train_loan = pd.read_csv(<span class="string">"../data/2/train/LOAN.csv"</span>, encoding=<span class="string">'utf-8'</span>) <span class="comment"># 贷款账户信息（LOAN）</span></span><br><span class="line">train_bond = pd.read_csv(<span class="string">"../data/2/train/BOND.csv"</span>, encoding=<span class="string">'utf-8'</span>) <span class="comment"># 国债账户信息（BOND）</span></span><br><span class="line">train_fund = pd.read_csv(<span class="string">"../data/2/train/FUND.csv"</span>, encoding=<span class="string">'utf-8'</span>) <span class="comment"># 基金账户信息（FUND）</span></span><br><span class="line">train_prec_metal = pd.read_csv(<span class="string">"../data/2/train/PREC_METAL.csv"</span>, encoding=<span class="string">'utf-8'</span>) <span class="comment"># 贵金属账户信息（PREC_METAL）</span></span><br><span class="line">train_aget_insr = pd.read_csv(<span class="string">"../data/2/train/AGET_INSR.csv"</span>, encoding=<span class="string">'utf-8'</span>) <span class="comment"># 代理保险账户信息（AGET_INSR）</span></span><br><span class="line">train_thr_pty_cstd = pd.read_csv(<span class="string">"../data/2/train/THR_PTY_CSTD.csv"</span>, encoding=<span class="string">'utf-8'</span>) <span class="comment"># 第三方存管账户信息（THR_PTY_CSTD）</span></span><br><span class="line">train_idv_cust_basic = pd.read_csv(<span class="string">"../data/2/train/IDV_CUST_BASIC.csv"</span>, encoding=<span class="string">'utf-8'</span>) <span class="comment"># 个人客户基本信息（IDV_CUST_BASIC）</span></span><br><span class="line">train_tr_dc = pd.read_csv(<span class="string">"../data/2/train/TR_DC.csv"</span>, encoding=<span class="string">'utf-8'</span>) <span class="comment"># 交易信息（TR_DC）</span></span><br><span class="line">train_base_excg = pd.read_csv(<span class="string">"../data/2/train/BASE_EXCG.csv"</span>, encoding=<span class="string">'utf-8'</span>) <span class="comment"># 汇率表（BASE_EXCG）</span></span><br><span class="line">train_cust_result = pd.read_csv(<span class="string">"../data/2/train/CUST_RESULT.csv"</span>, encoding=<span class="string">'utf-8'</span>) <span class="comment"># 客户标记（CUST_RESULT）</span></span><br><span class="line"><span class="comment"># A榜</span></span><br><span class="line"><span class="comment"># BASE_EXCG.csv 无</span></span><br><span class="line">A_idv_td = pd.read_csv(<span class="string">"../data/2/A/IDV_TD.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">A_idv_dpsa = pd.read_csv(<span class="string">"../data/2/A/IDV_DPSA.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">A_loan = pd.read_csv(<span class="string">"../data/2/A/LOAN.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">A_bond = pd.read_csv(<span class="string">"../data/2/A/BOND.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">A_fund = pd.read_csv(<span class="string">"../data/2/A/FUND.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">A_prec_metal = pd.read_csv(<span class="string">"../data/2/A/PREC_METAL.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">A_aget_insr = pd.read_csv(<span class="string">"../data/2/A/AGET_INSR.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">A_thr_pty_cstd = pd.read_csv(<span class="string">"../data/2/A/THR_PTY_CSTD.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">A_idv_cust_basic = pd.read_csv(<span class="string">"../data/2/A/IDV_CUST_BASIC.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">A_tr_dc = pd.read_csv(<span class="string">"../data/2/A/TR_DC.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">A_customid = pd.read_csv(<span class="string">"../data/2/A/CUSTOMID.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line"><span class="comment"># B榜</span></span><br><span class="line">B_idv_td = pd.read_csv(<span class="string">"../data/2/B/IDV_TD.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">B_idv_dpsa = pd.read_csv(<span class="string">"../data/2/B/IDV_DPSA.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">B_loan = pd.read_csv(<span class="string">"../data/2/B/LOAN.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">B_bond = pd.read_csv(<span class="string">"../data/2/B/BOND.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">B_fund = pd.read_csv(<span class="string">"../data/2/B/FUND.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">B_prec_metal = pd.read_csv(<span class="string">"../data/2/B/PREC_METAL.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">B_aget_insr = pd.read_csv(<span class="string">"../data/2/B/AGET_INSR.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">B_thr_pty_cstd = pd.read_csv(<span class="string">"../data/2/B/THR_PTY_CSTD.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">B_idv_cust_basic = pd.read_csv(<span class="string">"../data/2/B/IDV_CUST_BASIC.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">B_tr_dc = pd.read_csv(<span class="string">"../data/2/B/TR_DC.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">B_customid = pd.read_csv(<span class="string">"../data/2/B/CUSTOMID.csv"</span>, encoding=<span class="string">'utf-8'</span>)</span><br></pre></td></tr></table></figure><pre><code>/root/anaconda3/lib/python3.6/site-packages/IPython/core/interactiveshell.py:2728: DtypeWarning: Columns (12) have mixed types. Specify dtype option on import or set low_memory=False.  interactivity=interactivity, compiler=compiler, result=result)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 把汇率表中的CCY_LETE_CD字段转化为CCY_CD字段</span></span><br><span class="line">train_base_excg = pd.read_csv(<span class="string">"../data/2/train/BASE_EXCG.csv"</span>, encoding=<span class="string">'utf-8'</span>) <span class="comment"># 汇率表（BASE_EXCG）</span></span><br><span class="line">train_base_excg[<span class="string">'CCY_CD'</span>] = train_base_excg[<span class="string">'CCY_LETE_CD'</span>]</span><br><span class="line">train_base_excg = train_base_excg.drop([<span class="string">'CCY_LETE_CD'</span>], axis=<span class="number">1</span>)</span><br><span class="line">train_base_excg[<span class="string">'RMB_MID_PRIC'</span>].apply(<span class="keyword">lambda</span> x: float(x))</span><br><span class="line"><span class="comment"># 把汇率表中的CCY_LETE_CD字段转化为CCY_CD字段</span></span><br><span class="line">train_tr_dc[<span class="string">'TR_DAT'</span>].apply(<span class="keyword">lambda</span> x: int(x))</span><br></pre></td></tr></table></figure><h3 id="公用函数"><a href="#公用函数" class="headerlink" title="公用函数"></a>公用函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按汇率计算价值（传入2个参数返回计算结果）</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">compute_REAL_MONEY</span><span class="params">(train_IDV_DPSA_SAMPLE, A, B)</span>:</span></span><br><span class="line">    NEED = train_IDV_DPSA_SAMPLE[A]</span><br><span class="line">    RMB_MID_PRIC = train_IDV_DPSA_SAMPLE[B]</span><br><span class="line">    <span class="keyword">return</span> NEED * float(RMB_MID_PRIC)</span><br><span class="line"></span><br><span class="line"><span class="comment"># one-hot 处理函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地评价</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">evaluate</span><span class="params">(test_y, y_pred)</span>:</span></span><br><span class="line">    <span class="keyword">from</span> sklearn <span class="keyword">import</span> metrics</span><br><span class="line">    test_pct_1 = test_y.sum()/test_y.shape[<span class="number">0</span>]</span><br><span class="line">    pred_pct_1 = y_pred.sum()/y_pred.shape[<span class="number">0</span>]</span><br><span class="line">    </span><br><span class="line">    roc_auc = metrics.roc_auc_score(test_y,y_pred)</span><br><span class="line">    acc = metrics.accuracy_score(test_y,y_pred)</span><br><span class="line">    Recall = metrics.recall_score(test_y,y_pred)</span><br><span class="line">    F1 = metrics.f1_score(test_y,y_pred)</span><br><span class="line">    Precision = metrics.precision_score(test_y,y_pred)</span><br><span class="line">    Confusion = metrics.confusion_matrix(test_y,y_pred)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'test_pct_1: %.4f'</span> %  test_pct_1)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'pred_pct_1: %.4f'</span> %  pred_pct_1)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'Precesion: %.4f'</span> % Precision)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'Recall: %.4f'</span> %  Recall)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'F1-score: %.4f'</span> % F1)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'confusion matrix:'</span>)</span><br><span class="line">    <span class="keyword">print</span> (metrics.confusion_matrix(test_y,y_pred))</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">'test_pct_1'</span>:test_pct_1,<span class="string">'pred_pct_1'</span>:pred_pct_1,<span class="string">'roc_auc'</span>:roc_auc,<span class="string">'acc'</span>:acc,<span class="string">'recall'</span>:Recall,<span class="string">'F1'</span>:F1,<span class="string">'Precision'</span>:Precision,<span class="string">'Confusuion'</span>:Confusion&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">feature_rank</span><span class="params">(model,num)</span>:</span></span><br><span class="line">    <span class="comment">##计算特征得分</span></span><br><span class="line">    feature_score = model.get_fscore()</span><br><span class="line">    df_feature_score = pd.DataFrame(&#123;<span class="string">"feature_name"</span>:list(feature_score.keys()),<span class="string">"feature_score"</span>:list(feature_score.values())&#125;)</span><br><span class="line">    df_feature_score_sort = df_feature_score.sort_values(ascending=<span class="number">0</span>,by=[<span class="string">'feature_score'</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment">#result_name = "feature_score_1_A_%s_%s_%s_%6f.csv"%(time_str,feature_num,train_steps,F1_score)</span></span><br><span class="line">    <span class="comment">#result_name_full = datas_dir_e + "out/" + result_name</span></span><br><span class="line">    <span class="comment">#df_feature_score_sort.to_csv(result_name_full,index=None)</span></span><br><span class="line">    <span class="keyword">return</span> df_feature_score_sort.head(num)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">stat_df</span><span class="params">(df)</span>:</span></span><br><span class="line">    stats = []</span><br><span class="line">    <span class="keyword">for</span> col <span class="keyword">in</span> df.columns:</span><br><span class="line">        stats.append((col, df[col].nunique(),df[col].isnull().sum()*<span class="number">100</span>/df.shape[<span class="number">0</span>],</span><br><span class="line">                     df[col].value_counts(normalize=<span class="keyword">True</span>,dropna=<span class="keyword">False</span>).values[<span class="number">0</span>]*<span class="number">100</span>,df[col].dtype))</span><br><span class="line">    stats_df = pd.DataFrame(stats, columns=[<span class="string">'特征'</span>,<span class="string">'唯一数数量'</span>,<span class="string">'缺失值占比'</span>,<span class="string">'最多数占比'</span>,<span class="string">'类型'</span>])</span><br><span class="line">    stats_df.sort_values(<span class="string">'缺失值占比'</span>,ascending=<span class="keyword">False</span>)</span><br><span class="line">    <span class="keyword">return</span> stats_df</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_feature_distribution</span><span class="params">(df1,df2,label1,label2,features,width=<span class="number">6</span>,height=<span class="number">6</span>)</span>:</span></span><br><span class="line">    i=<span class="number">0</span></span><br><span class="line">    sns.set_style(<span class="string">'whitegrid'</span>)</span><br><span class="line">    plt.figure()</span><br><span class="line">    fig,ax = plt.subplots(width,height,figsize=(<span class="number">20</span>,<span class="number">12</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> feature <span class="keyword">in</span> features:</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">        plt.subplot(width,height,i)</span><br><span class="line">        sns.kdeplot(df1[feature],bw=<span class="number">0.5</span>,label=label1)</span><br><span class="line">        sns.kdeplot(df2[feature],bw=<span class="number">0.5</span>,label=label2)</span><br><span class="line">        plt.xlabel(feature,fontsize=<span class="number">9</span>)</span><br><span class="line">        locs, labels = plt.xticks()</span><br><span class="line">        plt.tick_params(axis=<span class="string">'x'</span>,which=<span class="string">'major'</span>,labelsize=<span class="number">6</span>,pad=<span class="number">-6</span>)</span><br><span class="line">        plt.tick_params(axis=<span class="string">'y'</span>,which=<span class="string">'major'</span>,labelsize=<span class="number">6</span>)</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure><h3 id="特征工程"><a href="#特征工程" class="headerlink" title="特征工程"></a>特征工程</h3><h4 id="个人客户基本信息表-IDV-CUST-BASIC-处理"><a href="#个人客户基本信息表-IDV-CUST-BASIC-处理" class="headerlink" title="个人客户基本信息表(IDV_CUST_BASIC) - 处理"></a>个人客户基本信息表(IDV_CUST_BASIC) - 处理</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除没用的字段</span></span><br><span class="line">train_idv_cust_basic_SAMPLE = train_idv_cust_basic.drop([<span class="string">'DATA_DAT'</span>, <span class="string">'PROV_CD'</span>, <span class="string">'CUST_SEX_CD'</span>, <span class="string">'RES_CD'</span>, <span class="string">'RES_STA_CD'</span>, <span class="string">'NATY_CD'</span>,</span><br><span class="line">       <span class="string">'NATN_CD'</span>, <span class="string">'CULT_DGR_CD'</span>, <span class="string">'DGR_CD'</span>, <span class="string">'PLC_STS_CD'</span>, <span class="string">'PRFN'</span>, <span class="string">'ADMI_POS_CD'</span>,</span><br><span class="line">       <span class="string">'SPEC_TECH_PRFN_QUA_CD'</span>, <span class="string">'TITLE_RANK_CD'</span>, <span class="string">'WORK_TYP_CD'</span>, <span class="string">'GC_BRTH'</span>,</span><br><span class="line">       <span class="string">'UNIT_PROP_CD'</span>, <span class="string">'WORK_YEAR'</span>, <span class="string">'OCP_CD'</span>], axis=<span class="number">1</span>)</span><br><span class="line"><span class="comment"># 将个人客户基本信息表与结果整合</span></span><br><span class="line">train_idv_cust_basic_SAMPLE = pd.merge(train_idv_cust_basic_SAMPLE, train_cust_result, on=<span class="string">'CUST_NO'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">features = [x <span class="keyword">for</span> x <span class="keyword">in</span> train_idv_cust_basic_SAMPLE.columns <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">'CUST_NO'</span>,<span class="string">'FLAG'</span>]]</span><br><span class="line">df0 = train_idv_cust_basic_SAMPLE[train_idv_cust_basic_SAMPLE.FLAG==<span class="number">0</span>]</span><br><span class="line">df1 = train_idv_cust_basic_SAMPLE[train_idv_cust_basic_SAMPLE.FLAG==<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">plot_feature_distribution(df0,df1,<span class="string">'0'</span>,<span class="string">'1'</span>,features,<span class="number">2</span>,<span class="number">2</span>)</span><br></pre></td></tr></table></figure><pre><code>/root/anaconda3/lib/python3.6/site-packages/statsmodels/nonparametric/kde.py:454: RuntimeWarning: invalid value encountered in greater  X = X[np.logical_and(X&gt;clip[0], X&lt;clip[1])] # won&apos;t work for two columns./root/anaconda3/lib/python3.6/site-packages/statsmodels/nonparametric/kde.py:454: RuntimeWarning: invalid value encountered in less  X = X[np.logical_and(X&gt;clip[0], X&lt;clip[1])] # won&apos;t work for two columns.&lt;matplotlib.figure.Figure at 0x7f0167e93dd8&gt;</code></pre><p><img src="/assets/blogImg/OUTPUT_FEATURE.png" alt="FEATURE"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 声明函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">IDV_CUST_BASIC_PARSE</span><span class="params">(dataset_IDV_CUST_BASIC)</span>:</span></span><br><span class="line">    <span class="comment"># 删除个人用户信息表中无关元素</span></span><br><span class="line">    dataset_IDV_CUST_BASIC = dataset_IDV_CUST_BASIC.drop([<span class="string">'DATA_DAT'</span>, <span class="string">'PROV_CD'</span>, <span class="string">'CUST_SEX_CD'</span>, <span class="string">'RES_CD'</span>, <span class="string">'RES_STA_CD'</span>, <span class="string">'NATY_CD'</span>,</span><br><span class="line">       <span class="string">'NATN_CD'</span>, <span class="string">'CULT_DGR_CD'</span>, <span class="string">'DGR_CD'</span>, <span class="string">'PLC_STS_CD'</span>, <span class="string">'PRFN'</span>, <span class="string">'ADMI_POS_CD'</span>,</span><br><span class="line">       <span class="string">'SPEC_TECH_PRFN_QUA_CD'</span>, <span class="string">'TITLE_RANK_CD'</span>, <span class="string">'WORK_TYP_CD'</span>, <span class="string">'GC_BRTH'</span>,</span><br><span class="line">       <span class="string">'UNIT_PROP_CD'</span>, <span class="string">'WORK_YEAR'</span>, <span class="string">'OCP_CD'</span>], axis=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> dataset_IDV_CUST_BASIC</span><br></pre></td></tr></table></figure><h4 id="个人定期存款账户信息（IDV-TD）-处理"><a href="#个人定期存款账户信息（IDV-TD）-处理" class="headerlink" title="个人定期存款账户信息（IDV_TD）- 处理"></a>个人定期存款账户信息（IDV_TD）- 处理</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看数据比例</span></span><br><span class="line">stat_df(train_idv_td)</span><br></pre></td></tr></table></figure><p><img src="/assets/blogImg/OUTPUT_CUST_INFO.png" alt="客户表信息情况"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编成函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">IDV_TD_PARSE</span><span class="params">(dataset_IDV_TD)</span>:</span></span><br><span class="line">    train_idv_td_3 = dataset_IDV_TD[dataset_IDV_TD[<span class="string">'DATA_DAT'</span>]==<span class="number">3734035200</span>]</span><br><span class="line">    <span class="comment"># 简化IDV_TD表</span></span><br><span class="line">    train_idv_td_3 = train_idv_td_3.drop([<span class="string">'DATA_DAT'</span>, <span class="string">'ARG_CRT_DAT'</span>, <span class="string">'DATA_DAT'</span>, <span class="string">'CLS_ACCT_DAT'</span>, <span class="string">'MATU_DAT'</span>, <span class="string">'LAC'</span>, <span class="string">'ACCT_STS_CD'</span>,<span class="string">'DP_DAY_CD'</span>, <span class="string">'RDEP_IND_CD'</span>, <span class="string">'RDEP_DP_DAY_CD'</span>, <span class="string">'RAT_CTG'</span>,<span class="string">'FXDI_SA_ACCM'</span>, <span class="string">'MTH_ACT_DAYS_TOT'</span>], axis=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 去重</span></span><br><span class="line">    train_idv_td_3.drop_duplicates(subset=<span class="keyword">None</span>, keep=<span class="string">'first'</span>, inplace=<span class="keyword">True</span>)</span><br><span class="line">    <span class="comment"># 将train_idv_td和train_base_excg合并</span></span><br><span class="line">    train_IDV_TD_SAMPLE_3 = pd.merge(train_idv_td_3, train_base_excg, on = <span class="string">'CCY_CD'</span>)</span><br><span class="line">    <span class="comment"># 执行汇率计算函数</span></span><br><span class="line">    train_IDV_TD_SAMPLE_3[<span class="string">'CRBAL'</span>] = train_IDV_TD_SAMPLE_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'CRBAL'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_IDV_TD_SAMPLE_3[<span class="string">'REG_CAP'</span>] = train_IDV_TD_SAMPLE_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'REG_CAP'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_IDV_TD_SAMPLE_3[<span class="string">'FXDI_T_ACCM'</span>] = train_IDV_TD_SAMPLE_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'FXDI_T_ACCM'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_IDV_TD_SAMPLE_3[<span class="string">'TDOP_SHD_PAY_INTS'</span>] = train_IDV_TD_SAMPLE_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'TDOP_SHD_PAY_INTS'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_IDV_TD_SAMPLE_3[<span class="string">'MOTH_CR_ACCM'</span>] = train_IDV_TD_SAMPLE_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'MOTH_CR_ACCM'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_IDV_TD_SAMPLE_3[<span class="string">'IDV_TD_SUM'</span>] = train_IDV_TD_SAMPLE_3[<span class="string">'TDOP_SHD_PAY_INTS'</span>] +  train_IDV_TD_SAMPLE_3[<span class="string">'REG_CAP'</span>]</span><br><span class="line">    <span class="comment"># 再次精简表</span></span><br><span class="line">    train_IDV_TD_SAMPLE_3 = train_IDV_TD_SAMPLE_3.drop([<span class="string">'CCY_CD'</span>, <span class="string">'RMB_MID_PRIC'</span>], axis=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 数据去重</span></span><br><span class="line">    train_IDV_TD_SAMPLE_3.drop_duplicates(subset=<span class="keyword">None</span>, keep=<span class="string">'first'</span>, inplace=<span class="keyword">True</span>)</span><br><span class="line">    <span class="comment"># 将个人账户里的数据合并即金额加起来</span></span><br><span class="line">    train_IDV_TD_SAMPLE_SUM_3 = train_IDV_TD_SAMPLE_3[[<span class="string">'CUST_NO'</span>, <span class="string">'CRBAL'</span>, <span class="string">'REG_CAP'</span>, <span class="string">'FXDI_T_ACCM'</span>, <span class="string">'TDOP_SHD_PAY_INTS'</span>, <span class="string">'MOTH_CR_ACCM'</span>, <span class="string">'IDV_TD_SUM'</span>]].groupby(<span class="string">'CUST_NO'</span>).sum().reset_index()</span><br><span class="line">    <span class="comment"># 区分字段</span></span><br><span class="line">    train_IDV_TD_SAMPLE_SUM_3 = train_IDV_TD_SAMPLE_SUM_3.rename(columns=&#123;<span class="string">'CRBAL'</span>:<span class="string">'IDV_TD_CRBAL'</span>, <span class="string">'MOTH_CR_ACCM'</span>:<span class="string">'IDV_TD_MOTH_CR_ACCM'</span>&#125;)</span><br><span class="line">    <span class="comment"># @ 去除过分关联的特征</span></span><br><span class="line">    train_IDV_TD_SAMPLE_SUM_3 = train_IDV_TD_SAMPLE_SUM_3.drop([<span class="string">'TDOP_SHD_PAY_INTS'</span>, <span class="string">'REG_CAP'</span>], axis=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 返回第三个时间段的数据</span></span><br><span class="line">    <span class="keyword">return</span> train_IDV_TD_SAMPLE_SUM_3</span><br></pre></td></tr></table></figure><h4 id="个人活期存款账户信息（IDV-DPSA）-处理"><a href="#个人活期存款账户信息（IDV-DPSA）-处理" class="headerlink" title="个人活期存款账户信息（IDV_DPSA）-  处理"></a>个人活期存款账户信息（IDV_DPSA）-  处理</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编成函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">IDV_DPSA_PARSE</span><span class="params">(dataset_IDV_DPSA)</span>:</span></span><br><span class="line">    <span class="comment"># 划分三张表</span></span><br><span class="line">    train_idv_dpsa_1 = dataset_IDV_DPSA[dataset_IDV_DPSA[<span class="string">'DATA_DAT'</span>]==<span class="number">3728764800</span>].reset_index()</span><br><span class="line">    train_idv_dpsa_2 = dataset_IDV_DPSA[dataset_IDV_DPSA[<span class="string">'DATA_DAT'</span>]==<span class="number">3731443200</span>].reset_index()</span><br><span class="line">    train_idv_dpsa_3 = dataset_IDV_DPSA[dataset_IDV_DPSA[<span class="string">'DATA_DAT'</span>]==<span class="number">3734035200</span>].reset_index()</span><br><span class="line">    <span class="comment"># 精简字段</span></span><br><span class="line">    train_idv_dpsa_3 = train_idv_dpsa_3.drop([<span class="string">'DATA_DAT'</span>, <span class="string">'ARG_CRT_DAT'</span>, <span class="string">'CLS_ACCT_DAT'</span>, <span class="string">'MATU_DAT'</span>, <span class="string">'LAC'</span>, <span class="string">'ACCT_STS_CD'</span>, <span class="string">'RAT_CTG'</span>, <span class="string">'CUST_RANK_CD'</span>, <span class="string">'DAY_TFO_SUM'</span>, <span class="string">'MTH_ACT_DAYS_TOT'</span>], axis=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 将IDV_DPSA表与汇率表整合</span></span><br><span class="line">    train_IDV_DPSA_SAMPLE_3 = pd.merge(train_idv_dpsa_3, train_base_excg, on = <span class="string">'CCY_CD'</span>)</span><br><span class="line">    <span class="comment"># 去重</span></span><br><span class="line">    train_IDV_DPSA_SAMPLE_3.drop_duplicates(subset=<span class="keyword">None</span>, keep=<span class="string">'first'</span>, inplace=<span class="keyword">True</span>)</span><br><span class="line">    <span class="comment"># 执行汇率计算函数</span></span><br><span class="line">    train_IDV_DPSA_SAMPLE_3[<span class="string">'FRZ_TOT_AMT'</span>] = train_IDV_DPSA_SAMPLE_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'FRZ_TOT_AMT'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_IDV_DPSA_SAMPLE_3[<span class="string">'DAY_WD_ACT_AMT'</span>] = train_IDV_DPSA_SAMPLE_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'DAY_WD_ACT_AMT'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_IDV_DPSA_SAMPLE_3[<span class="string">'DAY_CSH_DP_SUM'</span>] = train_IDV_DPSA_SAMPLE_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'DAY_CSH_DP_SUM'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_IDV_DPSA_SAMPLE_3[<span class="string">'DAY_CSH_WD_SUM'</span>] = train_IDV_DPSA_SAMPLE_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'DAY_CSH_WD_SUM'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_IDV_DPSA_SAMPLE_3[<span class="string">'DAY_TFI_SUM'</span>] = train_IDV_DPSA_SAMPLE_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'DAY_TFI_SUM'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_IDV_DPSA_SAMPLE_3[<span class="string">'MOTH_CR_ACCM'</span>] = train_IDV_DPSA_SAMPLE_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'MOTH_CR_ACCM'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_IDV_DPSA_SAMPLE_3[<span class="string">'BEG_MOTH_CRBAL'</span>] = train_IDV_DPSA_SAMPLE_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'BEG_MOTH_CRBAL'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    <span class="comment"># 再次精简表</span></span><br><span class="line">    train_IDV_DPSA_SAMPLE_3 = train_IDV_DPSA_SAMPLE_3.drop([<span class="string">'CCY_CD'</span>, <span class="string">'RMB_MID_PRIC'</span>, <span class="string">'index'</span>], axis=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 避免重复字段</span></span><br><span class="line">    train_IDV_DPSA_SAMPLE_3 = train_IDV_DPSA_SAMPLE_3.rename(columns=&#123;<span class="string">'CRBAL'</span>:<span class="string">'IDV_DPSA_CRBAL'</span>, <span class="string">'MOTH_CR_ACCM'</span>:<span class="string">'IDV_DPSA_MOTH_CR_ACCM'</span>&#125;)</span><br><span class="line">    <span class="comment"># 按 CUST_NO 求和</span></span><br><span class="line">    train_IDV_DPSA_SAMPLE_3 = train_IDV_DPSA_SAMPLE_3[[<span class="string">'CUST_NO'</span>, <span class="string">'IDV_DPSA_CRBAL'</span>, <span class="string">'ITST_BRNG_ACCM'</span>, <span class="string">'FRZ_TOT_AMT'</span>, <span class="string">'DAY_WD_ACT_AMT'</span>, <span class="string">'DAY_CSH_DP_SUM'</span>,</span><br><span class="line">                                                 <span class="string">'DAY_CSH_WD_SUM'</span>, <span class="string">'DAY_TFI_SUM'</span>, <span class="string">'IDV_DPSA_MOTH_CR_ACCM'</span>, <span class="string">'BEG_MOTH_CRBAL'</span>]].groupby(<span class="string">'CUST_NO'</span>).sum().reset_index()</span><br><span class="line">    <span class="comment"># @ 去除过分关联的特征</span></span><br><span class="line">    train_IDV_DPSA_SAMPLE_3 = train_IDV_DPSA_SAMPLE_3.drop([<span class="string">'BEG_MOTH_CRBAL'</span>, <span class="string">'IDV_DPSA_MOTH_CR_ACCM'</span>], axis=<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 返回第三个时间段的数据</span></span><br><span class="line">    <span class="keyword">return</span> train_IDV_DPSA_SAMPLE_3</span><br></pre></td></tr></table></figure><h4 id="交易信息（TR-DC）-处理"><a href="#交易信息（TR-DC）-处理" class="headerlink" title="交易信息（TR_DC） - 处理"></a>交易信息（TR_DC） - 处理</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">train_tr_dc_TR_TYPE = train_tr_dc.groupby([<span class="string">'CUST_NO'</span>,<span class="string">'TR_TYPE'</span>])[<span class="string">'TR_TYPE'</span>].count().unstack().reset_index()</span><br><span class="line">train_tr_dc_TR_TYPE[<span class="string">'TR_TYPE_TIMES'</span>] = train_tr_dc_TR_TYPE.drop(<span class="string">'CUST_NO'</span>,axis=<span class="number">1</span>).sum(axis=<span class="number">1</span>)</span><br><span class="line">train_tr_dc_BOE = train_tr_dc_TR_TYPE[[<span class="string">'CUST_NO'</span>,<span class="string">'TR_TYPE_TIMES'</span>,<span class="string">'EBMKO5RA'</span>]]</span><br><span class="line">train_tr_dc_BOE.columns = [<span class="string">'CUST_NO'</span>, <span class="string">'TR_TYPE_TIMES'</span>,<span class="string">'EBMKO5RA'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train_tr_dc_BOE.head()</span><br></pre></td></tr></table></figure><p><img src="/assets/blogImg/OUTPUT_BOEING.png" alt="BOEING"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 声明函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">TR_DC_PARSE</span><span class="params">(dataset_TR_DC)</span>:</span></span><br><span class="line">    <span class="comment"># 去除抹帐(1),无意义列- RED_BLU_CD，这里全是0</span></span><br><span class="line">    dataset_TR_DC = dataset_TR_DC[dataset_TR_DC[<span class="string">'CAN_IND'</span>]==<span class="number">0</span>].drop([<span class="string">'RED_BLU_CD'</span>],axis=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 将交易按照 正 / 负 分开</span></span><br><span class="line">    dataset_TR_DC[<span class="string">'INCOME'</span>] = dataset_TR_DC[<span class="string">'TR_AMT'</span>] &gt; <span class="number">0</span></span><br><span class="line">    myseries = dataset_TR_DC.groupby([<span class="string">'CUST_NO'</span>, <span class="string">'INCOME'</span>])[<span class="string">'TR_AMT'</span>].sum()</span><br><span class="line">    myseries = myseries.unstack()</span><br><span class="line">    TR_DC_IN_OUT = pd.DataFrame(myseries).reset_index()</span><br><span class="line">    TR_DC_IN_OUT[<span class="string">'IN_SUM'</span>] = TR_DC_IN_OUT[<span class="keyword">True</span>]</span><br><span class="line">    TR_DC_IN_OUT[<span class="string">'OUT_SUM'</span>] = TR_DC_IN_OUT[<span class="keyword">False</span>]</span><br><span class="line">    TR_DC_IN_OUT = TR_DC_IN_OUT.drop([<span class="keyword">True</span>, <span class="keyword">False</span>], axis=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 根据BOE交易代码划分 仅使用 EBMKO5RA</span></span><br><span class="line">    train_tr_dc_TR_TYPE = dataset_TR_DC.groupby([<span class="string">'CUST_NO'</span>,<span class="string">'TR_TYPE'</span>])[<span class="string">'TR_TYPE'</span>].count().unstack().reset_index()</span><br><span class="line">    train_tr_dc_TR_TYPE[<span class="string">'TR_TYPE_TIMES'</span>] = train_tr_dc_TR_TYPE.drop(<span class="string">'CUST_NO'</span>,axis=<span class="number">1</span>).sum(axis=<span class="number">1</span>)</span><br><span class="line">    train_tr_dc_BOE = train_tr_dc_TR_TYPE[[<span class="string">'CUST_NO'</span>,<span class="string">'TR_TYPE_TIMES'</span>,<span class="string">'EBMKO5RA'</span>]]</span><br><span class="line">    train_tr_dc_BOE.columns = [<span class="string">'CUST_NO'</span>, <span class="string">'TR_TYPE_TIMES'</span>,<span class="string">'EBMKO5RA'</span>]</span><br><span class="line">    <span class="comment"># 根据SVRTO交易码划分 使用SVRTO061和SVRTO161</span></span><br><span class="line">    train_tr_dc_SVRTO061 = train_tr_dc_TR_TYPE[[<span class="string">'CUST_NO'</span>,<span class="string">'SVRTO061'</span>]]</span><br><span class="line">    train_tr_dc_SVRTO161 = train_tr_dc_TR_TYPE[[<span class="string">'CUST_NO'</span>,<span class="string">'SVRTO161'</span>]]</span><br><span class="line">    train_tr_dc_SVRTO061.columns = [<span class="string">'CUST_NO'</span>, <span class="string">'SVRTO061'</span>]</span><br><span class="line">    train_tr_dc_SVRTO161.columns = [<span class="string">'CUST_NO'</span>, <span class="string">'SVRTO161'</span>]</span><br><span class="line">    <span class="comment"># 计算每笔交易金额的均值</span></span><br><span class="line">    TR_DC_IN_MEAN = dataset_TR_DC[dataset_TR_DC[<span class="string">'TR_AMT'</span>]&gt;<span class="number">0</span>][[<span class="string">'CUST_NO'</span>, <span class="string">'TR_AMT'</span>]].groupby(<span class="string">'CUST_NO'</span>).mean().reset_index()</span><br><span class="line">    TR_DC_IN_MEAN.columns = [<span class="string">'CUST_NO'</span>, <span class="string">'TR_DC_IN_MEAN'</span>]</span><br><span class="line">    TR_DC_OUT_MEAN = dataset_TR_DC[dataset_TR_DC[<span class="string">'TR_AMT'</span>]&lt;<span class="number">0</span>][[<span class="string">'CUST_NO'</span>, <span class="string">'TR_AMT'</span>]].groupby(<span class="string">'CUST_NO'</span>).mean().reset_index()</span><br><span class="line">    TR_DC_OUT_MEAN.columns = [<span class="string">'CUST_NO'</span>, <span class="string">'TR_DC_OUT_MEAN'</span>]</span><br><span class="line">    <span class="comment"># 合并各个特征 36041</span></span><br><span class="line">    <span class="comment"># train_TR_DC_SAMPLE = pd.merge(TR_DC_IN_OUT, train_tr_dc_BOE, on='CUST_NO', how='outer')</span></span><br><span class="line">    train_TR_DC_SAMPLE = pd.merge(TR_DC_IN_OUT, TR_DC_IN_MEAN, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">    train_TR_DC_SAMPLE = pd.merge(train_TR_DC_SAMPLE, TR_DC_OUT_MEAN, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">    <span class="comment"># train_TR_DC_SAMPLE = pd.merge(train_TR_DC_SAMPLE, train_tr_dc_SVRTO061, on='CUST_NO', how='outer')</span></span><br><span class="line">    <span class="comment"># train_TR_DC_SAMPLE = pd.merge(train_TR_DC_SAMPLE, train_tr_dc_SVRTO161, on='CUST_NO', how='outer')</span></span><br><span class="line">    <span class="keyword">return</span> train_TR_DC_SAMPLE</span><br></pre></td></tr></table></figure><h4 id="第三方存管账户信息（THR-PTY-CSTD）-处理"><a href="#第三方存管账户信息（THR-PTY-CSTD）-处理" class="headerlink" title="第三方存管账户信息（THR_PTY_CSTD） - 处理"></a>第三方存管账户信息（THR_PTY_CSTD） - 处理</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提前删掉无用字段</span></span><br><span class="line">train_thr_pty_cstd_temple = train_thr_pty_cstd.drop([<span class="string">'CCY_CD'</span>, <span class="string">'CUST_CTG_CD'</span>, <span class="string">'MTH_ACT_DAYS_TOT'</span>], axis=<span class="number">1</span>)</span><br><span class="line"><span class="comment"># 划分三张表</span></span><br><span class="line">train_thr_pty_cstd_1 = train_thr_pty_cstd_temple[train_thr_pty_cstd_temple[<span class="string">'DATA_DAT'</span>]==<span class="number">3728764800</span>].reset_index()</span><br><span class="line">train_thr_pty_cstd_2 = train_thr_pty_cstd_temple[train_thr_pty_cstd_temple[<span class="string">'DATA_DAT'</span>]==<span class="number">3731443200</span>].reset_index()</span><br><span class="line">train_thr_pty_cstd_3 = train_thr_pty_cstd_temple[train_thr_pty_cstd_temple[<span class="string">'DATA_DAT'</span>]==<span class="number">3734035200</span>].reset_index()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清理没用字段</span></span><br><span class="line">train_thr_pty_cstd_3 = train_thr_pty_cstd_3.drop([<span class="string">'index'</span>, <span class="string">'DATA_DAT'</span>], axis=<span class="number">1</span>)</span><br><span class="line"><span class="comment"># 对字段进行处理</span></span><br><span class="line">ARG_BAL = train_thr_pty_cstd_3.groupby([<span class="string">'CUST_NO'</span>])[<span class="string">'ARG_BAL'</span>].sum().reset_index()</span><br><span class="line">AVL_BAL = train_thr_pty_cstd_3.groupby([<span class="string">'CUST_NO'</span>])[<span class="string">'AVL_BAL'</span>].sum().reset_index()</span><br><span class="line">MTH_ARG_BAL_ACCM = train_thr_pty_cstd_3.groupby([<span class="string">'CUST_NO'</span>])[<span class="string">'MTH_ARG_BAL_ACCM'</span>].sum().reset_index()</span><br><span class="line">MTH_FUD_TF_INWD_AMT = train_thr_pty_cstd_3.groupby([<span class="string">'CUST_NO'</span>])[<span class="string">'MTH_FUD_TF_INWD_AMT'</span>].sum().reset_index()</span><br><span class="line">MTH_FUD_TF_OUT_AMT = train_thr_pty_cstd_3.groupby([<span class="string">'CUST_NO'</span>])[<span class="string">'MTH_FUD_TF_OUT_AMT'</span>].sum().reset_index()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将字段合并</span></span><br><span class="line">train_thr_pty_cstd_SAMPLE = pd.merge(ARG_BAL, AVL_BAL, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">train_thr_pty_cstd_SAMPLE = pd.merge(train_thr_pty_cstd_SAMPLE, MTH_ARG_BAL_ACCM, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">train_thr_pty_cstd_SAMPLE = pd.merge(train_thr_pty_cstd_SAMPLE, MTH_FUD_TF_INWD_AMT, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">train_thr_pty_cstd_SAMPLE = pd.merge(train_thr_pty_cstd_SAMPLE, MTH_FUD_TF_OUT_AMT, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># @ 去除过分关联的特征</span></span><br><span class="line">train_thr_pty_cstd_SAMPLE = train_thr_pty_cstd_SAMPLE.drop([<span class="string">'ARG_BAL'</span>, <span class="string">'MTH_ARG_BAL_ACCM'</span>], axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 声明函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">THR_PTY_CSTD_PARSE</span><span class="params">(dataset_THR_PTY_CSTD)</span>:</span></span><br><span class="line">    <span class="comment"># 提前删掉无用字段</span></span><br><span class="line">    dataset_THR_PTY_CSTD = dataset_THR_PTY_CSTD.drop([<span class="string">'CCY_CD'</span>, <span class="string">'CUST_CTG_CD'</span>, <span class="string">'MTH_ACT_DAYS_TOT'</span>], axis=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 划分三张表</span></span><br><span class="line">    train_thr_pty_cstd_1 = dataset_THR_PTY_CSTD[dataset_THR_PTY_CSTD[<span class="string">'DATA_DAT'</span>]==<span class="number">3728764800</span>].reset_index()</span><br><span class="line">    train_thr_pty_cstd_2 = dataset_THR_PTY_CSTD[dataset_THR_PTY_CSTD[<span class="string">'DATA_DAT'</span>]==<span class="number">3731443200</span>].reset_index()</span><br><span class="line">    train_thr_pty_cstd_3 = dataset_THR_PTY_CSTD[dataset_THR_PTY_CSTD[<span class="string">'DATA_DAT'</span>]==<span class="number">3734035200</span>].reset_index()</span><br><span class="line">    <span class="comment"># 清理没用字段</span></span><br><span class="line">    train_thr_pty_cstd_3 = train_thr_pty_cstd_3.drop([<span class="string">'index'</span>, <span class="string">'DATA_DAT'</span>], axis=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 对字段进行处理</span></span><br><span class="line">    ARG_BAL = train_thr_pty_cstd_3.groupby([<span class="string">'CUST_NO'</span>])[<span class="string">'ARG_BAL'</span>].sum().reset_index()</span><br><span class="line">    AVL_BAL = train_thr_pty_cstd_3.groupby([<span class="string">'CUST_NO'</span>])[<span class="string">'AVL_BAL'</span>].sum().reset_index()</span><br><span class="line">    MTH_ARG_BAL_ACCM = train_thr_pty_cstd_3.groupby([<span class="string">'CUST_NO'</span>])[<span class="string">'MTH_ARG_BAL_ACCM'</span>].sum().reset_index()</span><br><span class="line">    MTH_FUD_TF_INWD_AMT = train_thr_pty_cstd_3.groupby([<span class="string">'CUST_NO'</span>])[<span class="string">'MTH_FUD_TF_INWD_AMT'</span>].sum().reset_index()</span><br><span class="line">    MTH_FUD_TF_OUT_AMT = train_thr_pty_cstd_3.groupby([<span class="string">'CUST_NO'</span>])[<span class="string">'MTH_FUD_TF_OUT_AMT'</span>].sum().reset_index()</span><br><span class="line">    <span class="comment"># 将字段合并</span></span><br><span class="line">    train_thr_pty_cstd_SAMPLE = pd.merge(AVL_BAL, ARG_BAL, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">    train_thr_pty_cstd_SAMPLE = pd.merge(train_thr_pty_cstd_SAMPLE, MTH_ARG_BAL_ACCM, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">    train_thr_pty_cstd_SAMPLE = pd.merge(train_thr_pty_cstd_SAMPLE, MTH_FUD_TF_INWD_AMT, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">    train_thr_pty_cstd_SAMPLE = pd.merge(train_thr_pty_cstd_SAMPLE, MTH_FUD_TF_OUT_AMT, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">    <span class="comment"># @ 去除过分关联的特征</span></span><br><span class="line">    train_thr_pty_cstd_SAMPLE = train_thr_pty_cstd_SAMPLE.drop([<span class="string">'ARG_BAL'</span>, <span class="string">'MTH_ARG_BAL_ACCM'</span>], axis=<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> train_thr_pty_cstd_SAMPLE</span><br></pre></td></tr></table></figure><h4 id="贷款账户信息（LOAN）-处理"><a href="#贷款账户信息（LOAN）-处理" class="headerlink" title="贷款账户信息（LOAN）- 处理"></a>贷款账户信息（LOAN）- 处理</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 选择有用字段</span></span><br><span class="line">train_loan_temple = train_loan[[<span class="string">'CUST_NO'</span>, <span class="string">'DATA_DAT'</span>, <span class="string">'ARG_TYP_CD'</span>, <span class="string">'CCY_CD'</span>, <span class="string">'ARG_LIF_CYC_STA_CD'</span>, <span class="string">'LN_STS_CD'</span>, <span class="string">'CHANL_CD'</span>, <span class="string">'LN_TERM'</span>, <span class="string">'RPAY_MOD_CD'</span>, <span class="string">'LAC'</span>, <span class="string">'NON_MATU_CAP'</span>, <span class="string">'ACD_NML_INTS'</span>, <span class="string">'INTS_TOT_AMT'</span></span><br><span class="line">                        , <span class="string">'BUS_BREED_CD'</span>, <span class="string">'NML_CAP_BAL'</span>, <span class="string">'MTH_NML_CAP_ACCM'</span>]]</span><br><span class="line">train_loan_temple =  pd.merge(train_loan_temple, train_base_excg, on = <span class="string">'CCY_CD'</span>)</span><br><span class="line"><span class="comment"># 划分三张表</span></span><br><span class="line">train_loan_1 = train_loan_temple[train_loan_temple[<span class="string">'DATA_DAT'</span>]==<span class="number">3728764800</span>]</span><br><span class="line">train_loan_2 = train_loan_temple[train_loan_temple[<span class="string">'DATA_DAT'</span>]==<span class="number">3731443200</span>]</span><br><span class="line">train_loan_3 = train_loan_temple[train_loan_temple[<span class="string">'DATA_DAT'</span>]==<span class="number">3734035200</span>]</span><br><span class="line">train_loan_3 = train_loan_3.drop([<span class="string">'DATA_DAT'</span>], axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train_loan_3.drop_duplicates(subset=<span class="keyword">None</span>, keep=<span class="string">'first'</span>, inplace=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行汇率计算函数</span></span><br><span class="line">train_loan_3[<span class="string">'ACD_NML_INTS'</span>] = train_loan_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'ACD_NML_INTS'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">train_loan_3[<span class="string">'NON_MATU_CAP'</span>] = train_loan_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'NON_MATU_CAP'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">train_loan_3[<span class="string">'NML_CAP_BAL'</span>] = train_loan_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'NML_CAP_BAL'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">train_loan_3[<span class="string">'INTS_TOT_AMT'</span>] = train_loan_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'INTS_TOT_AMT'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">train_loan_3[<span class="string">'MTH_NML_CAP_ACCM'</span>] = train_loan_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'MTH_NML_CAP_ACCM'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 平均应计正常利息</span></span><br><span class="line">MEAN_ACD_NML_INTS = train_loan_3[[<span class="string">'CUST_NO'</span>, <span class="string">'ACD_NML_INTS'</span>]].groupby([<span class="string">'CUST_NO'</span>]).mean().reset_index()</span><br><span class="line"><span class="comment"># 平均应计未到期本金</span></span><br><span class="line">MEAN_NON_MATU_CAP = train_loan_3[[<span class="string">'CUST_NO'</span>, <span class="string">'NON_MATU_CAP'</span>]].groupby([<span class="string">'CUST_NO'</span>]).mean().reset_index()</span><br><span class="line"><span class="comment"># 平均月内正常本金基数</span></span><br><span class="line">MEAN_MTH_NML_CAP_ACCM = train_loan_3[[<span class="string">'CUST_NO'</span>,<span class="string">'MTH_NML_CAP_ACCM'</span>]].groupby([<span class="string">'CUST_NO'</span>]).mean().reset_index()</span><br><span class="line"><span class="comment"># 平均贷款期限</span></span><br><span class="line">MEAN_LOAN_TERM = train_loan_3[[<span class="string">'CUST_NO'</span>,<span class="string">'LN_TERM'</span>]].groupby([<span class="string">'CUST_NO'</span>]).mean().reset_index()</span><br><span class="line"><span class="comment"># 平均贷款金额</span></span><br><span class="line">MEAN_NML_CAP_BAL = train_loan_3[[<span class="string">'CUST_NO'</span>, <span class="string">'NML_CAP_BAL'</span>]].groupby([<span class="string">'CUST_NO'</span>]).mean().reset_index()</span><br><span class="line"><span class="comment"># 平均利息总额</span></span><br><span class="line">MEAN_INTS_TOT_AMT = train_loan_3[[<span class="string">'CUST_NO'</span>, <span class="string">'INTS_TOT_AMT'</span>]].groupby([<span class="string">'CUST_NO'</span>]).mean().reset_index()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">train_loan_3_SAMPLE = pd.merge(pd.merge(pd.merge(pd.merge(pd.merge(MEAN_ACD_NML_INTS, MEAN_NON_MATU_CAP, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>), MEAN_MTH_NML_CAP_ACCM, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>), MEAN_LOAN_TERM, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>),</span><br><span class="line">                              MEAN_NML_CAP_BAL, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>), MEAN_INTS_TOT_AMT, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">BY_MONTH_LOAN_METHOD</span><span class="params">(dataset_LOAN)</span>:</span></span><br><span class="line">    <span class="comment"># 选择有用字段</span></span><br><span class="line">    train_loan_temple = dataset_LOAN[[<span class="string">'CUST_NO'</span>, <span class="string">'DATA_DAT'</span>, <span class="string">'ARG_TYP_CD'</span>, <span class="string">'CCY_CD'</span>, <span class="string">'ARG_LIF_CYC_STA_CD'</span>, <span class="string">'LN_STS_CD'</span>, <span class="string">'CHANL_CD'</span>, <span class="string">'LN_TERM'</span>, <span class="string">'RPAY_MOD_CD'</span>, <span class="string">'LAC'</span>, <span class="string">'NON_MATU_CAP'</span>, <span class="string">'ACD_NML_INTS'</span>, <span class="string">'INTS_TOT_AMT'</span> , <span class="string">'BUS_BREED_CD'</span>, <span class="string">'NML_CAP_BAL'</span>, <span class="string">'MTH_NML_CAP_ACCM'</span>]]</span><br><span class="line">    train_loan_temple =  pd.merge(train_loan_temple, train_base_excg, on = <span class="string">'CCY_CD'</span>)</span><br><span class="line">    <span class="comment"># 划分三张表</span></span><br><span class="line">    train_loan_1 = train_loan_temple[train_loan_temple[<span class="string">'DATA_DAT'</span>]==<span class="number">3728764800</span>]</span><br><span class="line">    train_loan_2 = train_loan_temple[train_loan_temple[<span class="string">'DATA_DAT'</span>]==<span class="number">3731443200</span>]</span><br><span class="line">    train_loan_3 = train_loan_temple[train_loan_temple[<span class="string">'DATA_DAT'</span>]==<span class="number">3734035200</span>]</span><br><span class="line">    train_loan_3 = train_loan_3.drop([<span class="string">'DATA_DAT'</span>], axis=<span class="number">1</span>)</span><br><span class="line">    train_loan_3.drop_duplicates(subset=<span class="keyword">None</span>, keep=<span class="string">'first'</span>, inplace=<span class="keyword">True</span>)</span><br><span class="line">    <span class="comment"># 执行汇率计算函数</span></span><br><span class="line">    train_loan_3[<span class="string">'ACD_NML_INTS'</span>] = train_loan_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'ACD_NML_INTS'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_loan_3[<span class="string">'NON_MATU_CAP'</span>] = train_loan_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'NON_MATU_CAP'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_loan_3[<span class="string">'NML_CAP_BAL'</span>] = train_loan_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'NML_CAP_BAL'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_loan_3[<span class="string">'INTS_TOT_AMT'</span>] = train_loan_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'INTS_TOT_AMT'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_loan_3[<span class="string">'MTH_NML_CAP_ACCM'</span>] = train_loan_3.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'MTH_NML_CAP_ACCM'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    <span class="comment"># 平均应计正常利息</span></span><br><span class="line">    MEAN_ACD_NML_INTS = train_loan_3[[<span class="string">'CUST_NO'</span>, <span class="string">'ACD_NML_INTS'</span>]].groupby([<span class="string">'CUST_NO'</span>]).mean().reset_index()</span><br><span class="line">    <span class="comment"># 平均应计未到期本金</span></span><br><span class="line">    MEAN_NON_MATU_CAP = train_loan_3[[<span class="string">'CUST_NO'</span>, <span class="string">'NON_MATU_CAP'</span>]].groupby([<span class="string">'CUST_NO'</span>]).mean().reset_index()</span><br><span class="line">    <span class="comment"># 平均月内正常本金基数</span></span><br><span class="line">    MEAN_MTH_NML_CAP_ACCM = train_loan_3[[<span class="string">'CUST_NO'</span>,<span class="string">'MTH_NML_CAP_ACCM'</span>]].groupby([<span class="string">'CUST_NO'</span>]).mean().reset_index()</span><br><span class="line">    <span class="comment"># 平均贷款期限</span></span><br><span class="line">    MEAN_LOAN_TERM = train_loan_3[[<span class="string">'CUST_NO'</span>,<span class="string">'LN_TERM'</span>]].groupby([<span class="string">'CUST_NO'</span>]).mean().reset_index()</span><br><span class="line">    <span class="comment"># 平均贷款金额</span></span><br><span class="line">    MEAN_NML_CAP_BAL = train_loan_3[[<span class="string">'CUST_NO'</span>, <span class="string">'NML_CAP_BAL'</span>]].groupby([<span class="string">'CUST_NO'</span>]).mean().reset_index()</span><br><span class="line">    <span class="comment"># 平均利息总额</span></span><br><span class="line">    MEAN_INTS_TOT_AMT = train_loan_3[[<span class="string">'CUST_NO'</span>, <span class="string">'INTS_TOT_AMT'</span>]].groupby([<span class="string">'CUST_NO'</span>]).mean().reset_index()</span><br><span class="line">    train_loan_3_SAMPLE = pd.merge(pd.merge(pd.merge(pd.merge(pd.merge(MEAN_ACD_NML_INTS, MEAN_NON_MATU_CAP, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>), MEAN_MTH_NML_CAP_ACCM, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>), MEAN_LOAN_TERM, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>),</span><br><span class="line">                              MEAN_NML_CAP_BAL, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>), MEAN_INTS_TOT_AMT, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> train_loan_3_SAMPLE</span><br></pre></td></tr></table></figure><h4 id="基金账户信息（FUND）-处理"><a href="#基金账户信息（FUND）-处理" class="headerlink" title="基金账户信息（FUND）- 处理"></a>基金账户信息（FUND）- 处理</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">BY_MONTH_FUND_METHOD</span><span class="params">(dataset_FOUND)</span>:</span></span><br><span class="line">    <span class="comment"># 预处理</span></span><br><span class="line">    train_fund_temple = dataset_FOUND.drop([<span class="string">'CCY_CD'</span>, <span class="string">'ARG_CRT_DAT'</span>, <span class="string">'ARG_LIF_CYC_STA_CD'</span>, <span class="string">'CHANL_CD'</span>, <span class="string">'VLU_DAT'</span>, <span class="string">'DATE_MATU'</span>, <span class="string">'CLS_ACCT_DAT'</span>, <span class="string">'LAST_ACT_CHNG_DAT'</span>, <span class="string">'MTH_ACT_DAYS_TOT'</span>], axis=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 按月将金额分组</span></span><br><span class="line">    BY_MONTH_FUND_TABLE = train_fund_temple.groupby([<span class="string">'CUST_NO'</span>, <span class="string">'DATA_DAT'</span>])[[<span class="string">'FUD_UNIT_NET_VAL'</span>, <span class="string">'FUD_PROD_TYP_CD'</span>, <span class="string">'RSK_RANK_CD'</span>, <span class="string">'SHR'</span>,</span><br><span class="line">           <span class="string">'MOTH_BAL_ACCM'</span>, <span class="string">'FUND_BAL'</span>, <span class="string">'FUND_BAL_MOTH_BAL_ACCM'</span>]].sum().unstack()</span><br><span class="line">    <span class="comment"># 声明函数 计算三个月的标准差、均值、最大值、最小值</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">BY_MONTH_FUND</span><span class="params">(key)</span>:</span></span><br><span class="line">        train_fund_temple_STD = BY_MONTH_FUND_TABLE[key].std(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_fund_temple_STD.columns = [<span class="string">'CUST_NO'</span>, str(<span class="string">'FUND_'</span>+key+<span class="string">'_STD'</span>)]</span><br><span class="line">        train_fund_temple_MEAN = BY_MONTH_FUND_TABLE[key].mean(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_fund_temple_MEAN.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'FUND_'</span>+key+<span class="string">'_MEAN'</span>)]</span><br><span class="line">        train_fund_temple_MAX = BY_MONTH_FUND_TABLE[key].max(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_fund_temple_MAX.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'FUND_'</span>+key+<span class="string">'_MAX'</span>)]</span><br><span class="line">        train_fund_temple_MIN = BY_MONTH_FUND_TABLE[key].min(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_fund_temple_MIN.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'FUND_'</span>+key+<span class="string">'_MIN'</span>)]</span><br><span class="line">        <span class="comment"># 合并字段</span></span><br><span class="line">        train_fund_temple = pd.merge(train_fund_temple_STD, train_fund_temple_MEAN, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        train_fund_temple = pd.merge(train_fund_temple, train_fund_temple_MAX, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        train_fund_temple = pd.merge(train_fund_temple, train_fund_temple_MIN, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        <span class="keyword">return</span> train_fund_temple</span><br><span class="line">    train_fund_temple = BY_MONTH_FUND(<span class="string">'RSK_RANK_CD'</span>)</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> [<span class="string">'FUD_UNIT_NET_VAL'</span>, <span class="string">'FUD_PROD_TYP_CD'</span>, <span class="string">'SHR'</span>, <span class="string">'MOTH_BAL_ACCM'</span>, <span class="string">'FUND_BAL'</span>, <span class="string">'FUND_BAL_MOTH_BAL_ACCM'</span>]:</span><br><span class="line">        train_fund_temple = pd.merge(train_fund_temple, BY_MONTH_FUND(key))</span><br><span class="line">        train_fund_temple.drop_duplicates(subset=<span class="keyword">None</span>, keep=<span class="string">'first'</span>, inplace=<span class="keyword">True</span>)</span><br><span class="line">    <span class="comment"># 定申定赎 开通标识</span></span><br><span class="line">    SUM_FUND_RATN_APLY_OPN_IND = dataset_FOUND[[<span class="string">'CUST_NO'</span>, <span class="string">'RATN_APLY_OPN_IND'</span>]].groupby([<span class="string">'CUST_NO'</span>]).sum().reset_index()</span><br><span class="line">    STD_FUND_RATN_APLY_OPN_IND = dataset_FOUND[[<span class="string">'CUST_NO'</span>, <span class="string">'RATN_APLY_OPN_IND'</span>]].groupby([<span class="string">'CUST_NO'</span>]).std().reset_index()</span><br><span class="line">    MEAN_FUND_RATN_APLY_OPN_IND = dataset_FOUND[[<span class="string">'CUST_NO'</span>, <span class="string">'RATN_APLY_OPN_IND'</span>]].groupby([<span class="string">'CUST_NO'</span>]).mean().reset_index()</span><br><span class="line">    MAX_FUND_RATN_APLY_OPN_IND = dataset_FOUND[[<span class="string">'CUST_NO'</span>, <span class="string">'RATN_APLY_OPN_IND'</span>]].groupby([<span class="string">'CUST_NO'</span>]).max().reset_index()</span><br><span class="line">    MIN_FUND_RATN_APLY_OPN_IND = dataset_FOUND[[<span class="string">'CUST_NO'</span>, <span class="string">'RATN_APLY_OPN_IND'</span>]].groupby([<span class="string">'CUST_NO'</span>]).min().reset_index()</span><br><span class="line"></span><br><span class="line">    SUM_FUND_RATN_REDM_OPN_IND = dataset_FOUND[[<span class="string">'CUST_NO'</span>, <span class="string">'RATN_REDM_OPN_IND'</span>]].groupby([<span class="string">'CUST_NO'</span>]).sum().reset_index()</span><br><span class="line">    STD_FUND_RATN_REDM_OPN_IND = dataset_FOUND[[<span class="string">'CUST_NO'</span>, <span class="string">'RATN_REDM_OPN_IND'</span>]].groupby([<span class="string">'CUST_NO'</span>]).std().reset_index()</span><br><span class="line">    MEAN_FUND_RATN_REDM_OPN_IND = dataset_FOUND[[<span class="string">'CUST_NO'</span>, <span class="string">'RATN_REDM_OPN_IND'</span>]].groupby([<span class="string">'CUST_NO'</span>]).mean().reset_index()</span><br><span class="line">    MAX_FUND_RATN_REDM_OPN_IND = dataset_FOUND[[<span class="string">'CUST_NO'</span>, <span class="string">'RATN_REDM_OPN_IND'</span>]].groupby([<span class="string">'CUST_NO'</span>]).max().reset_index()</span><br><span class="line">    MIN_FUND_RATN_REDM_OPN_IND = dataset_FOUND[[<span class="string">'CUST_NO'</span>, <span class="string">'RATN_REDM_OPN_IND'</span>]].groupby([<span class="string">'CUST_NO'</span>]).min().reset_index()</span><br><span class="line">    train_fund_temple = pd.merge(pd.merge(train_fund_temple, STD_FUND_RATN_APLY_OPN_IND, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>), MIN_FUND_RATN_REDM_OPN_IND, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">    <span class="keyword">return</span> train_fund_temple</span><br></pre></td></tr></table></figure><h4 id="国债账户信息（BOND）-处理"><a href="#国债账户信息（BOND）-处理" class="headerlink" title="国债账户信息（BOND）- 处理"></a>国债账户信息（BOND）- 处理</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">BY_MONTH_BOND_METHOD</span><span class="params">(dataset_BOND)</span>:</span></span><br><span class="line">    <span class="comment"># 预处理</span></span><br><span class="line">    train_bond_temple = dataset_BOND.drop([<span class="string">'CCY_CD'</span>, <span class="string">'ARG_CRT_DAT'</span>, <span class="string">'MATU_DAT'</span>, <span class="string">'MATU_DAT'</span>, <span class="string">'PROD_CLS_CD'</span>, <span class="string">'CERT_DAT'</span>, <span class="string">'CLS_ACCT_DAT'</span>, <span class="string">'ARG_LIF_CYC_STA_CD'</span>, <span class="string">'NTNL_DEBT_INTS_TYP_CD'</span>, <span class="string">'MTH_ACT_DAYS_TOT'</span>], axis=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 按月将金额分组</span></span><br><span class="line">    BY_MONTH_BOND_TABLE = train_bond_temple.groupby([<span class="string">'CUST_NO'</span>, <span class="string">'DATA_DAT'</span>])[[<span class="string">'BOND_TERM_CD'</span>, <span class="string">'ARG_CUR_BAL'</span>, <span class="string">'HOD_SHR'</span>,</span><br><span class="line">       <span class="string">'UNIT_NET_VAL'</span>, <span class="string">'NVTA_MOTH_ACCM'</span>]].sum().unstack()</span><br><span class="line">    <span class="comment"># 声明函数 计算三个月的标准差、均值、最大值、最小值</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span>  <span class="title">BY_MONTH_BOND</span><span class="params">(key)</span>:</span></span><br><span class="line">        train_bond_temple_STD = BY_MONTH_BOND_TABLE[key].std(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_bond_temple_STD.columns = [<span class="string">'CUST_NO'</span>, str(<span class="string">'BOND_'</span>+key+<span class="string">'_STD'</span>)]</span><br><span class="line">        train_bond_temple_MEAN = BY_MONTH_BOND_TABLE[key].mean(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_bond_temple_MEAN.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'BOND_'</span>+key+<span class="string">'_MEAN'</span>)]</span><br><span class="line">        train_bond_temple_MAX = BY_MONTH_BOND_TABLE[key].max(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_bond_temple_MAX.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'BOND_'</span>+key+<span class="string">'_MAX'</span>)]</span><br><span class="line">        train_bond_temple_MIN = BY_MONTH_BOND_TABLE[key].min(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_bond_temple_MIN.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'BOND_'</span>+key+<span class="string">'_MIN'</span>)]</span><br><span class="line">        <span class="comment"># 合并字段</span></span><br><span class="line">        train_bond_temple = pd.merge(train_bond_temple_STD, train_bond_temple_MEAN, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        train_bond_temple = pd.merge(train_bond_temple, train_bond_temple_MAX, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        train_bond_temple = pd.merge(train_bond_temple, train_bond_temple_MIN, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        <span class="keyword">return</span> train_bond_temple</span><br><span class="line">    train_bond_temple = BY_MONTH_BOND(<span class="string">'BOND_TERM_CD'</span>)</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> [<span class="string">'ARG_CUR_BAL'</span>, <span class="string">'HOD_SHR'</span>, <span class="string">'UNIT_NET_VAL'</span>, <span class="string">'NVTA_MOTH_ACCM'</span>]:</span><br><span class="line">        train_bond_temple = pd.merge(train_bond_temple, BY_MONTH_BOND(key))</span><br><span class="line">        train_bond_temple.drop_duplicates(subset=<span class="keyword">None</span>, keep=<span class="string">'first'</span>, inplace=<span class="keyword">True</span>)</span><br><span class="line">    <span class="keyword">return</span> train_bond_temple</span><br></pre></td></tr></table></figure><h4 id="贵金属账户信息（PREC-METAL）-处理"><a href="#贵金属账户信息（PREC-METAL）-处理" class="headerlink" title="贵金属账户信息（PREC_METAL）- 处理"></a>贵金属账户信息（PREC_METAL）- 处理</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">BY_MONTH_PREC_METAL_METHOD</span><span class="params">(dataset_PREC_METAL)</span>:</span></span><br><span class="line">    <span class="comment"># 预处理</span></span><br><span class="line">    train_prec_metal_temple = dataset_PREC_METAL.drop([<span class="string">'PREC_METAL_BREED_CD'</span>, <span class="string">'ARG_STS_CD'</span>, <span class="string">'SIGD_DAT'</span>, <span class="string">'SIGD_CHANL_CD'</span>, <span class="string">'TEMN_DAT'</span>, <span class="string">'TEMN_CHANL_CD'</span>, <span class="string">'MTH_ACT_DAYS_TOT'</span>], axis=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 将train_prec_metal和train_base_excg合并</span></span><br><span class="line">    train_prec_metal_temple = pd.merge(train_prec_metal_temple, train_base_excg, on = <span class="string">'CCY_CD'</span>)</span><br><span class="line">    <span class="comment"># 执行汇率计算函数</span></span><br><span class="line">    train_prec_metal_temple[<span class="string">'ARG_BAL'</span>] = train_prec_metal_temple.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'ARG_BAL'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    <span class="comment"># 按月将金额分组</span></span><br><span class="line">    BY_MONTH_PREC_METAL_TABLE = train_prec_metal_temple.groupby([<span class="string">'CUST_NO'</span>, <span class="string">'DATA_DAT'</span>])[[<span class="string">'BUS_CTG_CD'</span>, <span class="string">'CNT'</span>, <span class="string">'ARG_BAL'</span>,</span><br><span class="line">       <span class="string">'MTH_ARG_ACCM'</span>]].sum().unstack()</span><br><span class="line">    <span class="comment"># 声明函数 计算三个月的标准差、均值、最大值、最小值</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span>  <span class="title">BY_MONTH_PREC_METAL</span><span class="params">(key)</span>:</span></span><br><span class="line">        train_prec_metal_temple_STD = BY_MONTH_PREC_METAL_TABLE[key].std(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_prec_metal_temple_STD.columns = [<span class="string">'CUST_NO'</span>, str(<span class="string">'PREC_METAL_'</span>+key+<span class="string">'_STD'</span>)]</span><br><span class="line">        train_prec_metal_temple_MEAN = BY_MONTH_PREC_METAL_TABLE[key].mean(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_prec_metal_temple_MEAN.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'PREC_METAL_'</span>+key+<span class="string">'_MEAN'</span>)]</span><br><span class="line">        train_prec_metal_temple_MAX = BY_MONTH_PREC_METAL_TABLE[key].max(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_prec_metal_temple_MAX.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'PREC_METAL_'</span>+key+<span class="string">'_MAX'</span>)]</span><br><span class="line">        train_prec_metal_temple_MIN = BY_MONTH_PREC_METAL_TABLE[key].min(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_prec_metal_temple_MIN.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'PREC_METAL_'</span>+key+<span class="string">'_MIN'</span>)]</span><br><span class="line">        <span class="comment"># 合并字段</span></span><br><span class="line">        train_prec_metal_temple = pd.merge(train_prec_metal_temple_STD, train_prec_metal_temple_MEAN, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        train_prec_metal_temple = pd.merge(train_prec_metal_temple, train_prec_metal_temple_MAX, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        train_prec_metal_temple = pd.merge(train_prec_metal_temple, train_prec_metal_temple_MIN, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        <span class="keyword">return</span> train_prec_metal_temple</span><br><span class="line">    train_prec_metal_temple = BY_MONTH_PREC_METAL(<span class="string">'BUS_CTG_CD'</span>)</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> [<span class="string">'CNT'</span>, <span class="string">'ARG_BAL'</span>, <span class="string">'MTH_ARG_ACCM'</span>]:</span><br><span class="line">        train_prec_metal_temple = pd.merge(train_prec_metal_temple, BY_MONTH_PREC_METAL(key))</span><br><span class="line">        train_prec_metal_temple.drop_duplicates(subset=<span class="keyword">None</span>, keep=<span class="string">'first'</span>, inplace=<span class="keyword">True</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> train_prec_metal_temple</span><br></pre></td></tr></table></figure><h4 id="代理保险账户信息（AGET-INSR）-处理"><a href="#代理保险账户信息（AGET-INSR）-处理" class="headerlink" title="代理保险账户信息（AGET_INSR）- 处理"></a>代理保险账户信息（AGET_INSR）- 处理</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">BY_MONTH_AGET_INSR_METHOD</span><span class="params">(dataset_AGET_INSR)</span>:</span></span><br><span class="line">    <span class="comment"># 预处理</span></span><br><span class="line">    train_aget_insr_temple = dataset_AGET_INSR[[<span class="string">'DATA_DAT'</span>, <span class="string">'CUST_NO'</span>, <span class="string">'PREM'</span>, <span class="string">'CVAG'</span>, <span class="string">'INSE_CNT'</span>, <span class="string">'MTH_PREM_ACCM'</span>, <span class="string">'BEG_MTH_PREM_BAL'</span>]]</span><br><span class="line">    <span class="comment"># 按月将金额分组</span></span><br><span class="line">    BY_MONTH_AGET_INSR_TABLE = train_aget_insr_temple.groupby([<span class="string">'CUST_NO'</span>, <span class="string">'DATA_DAT'</span>])[[<span class="string">'PREM'</span>, <span class="string">'CVAG'</span>, <span class="string">'INSE_CNT'</span>, <span class="string">'MTH_PREM_ACCM'</span>, <span class="string">'BEG_MTH_PREM_BAL'</span>]].sum().unstack()</span><br><span class="line">    <span class="comment"># 声明函数 计算三个月的标准差、均值、最大值、最小值</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">BY_MONTH_AGET_INSR</span><span class="params">(key)</span>:</span></span><br><span class="line">        train_aget_insr_temple_STD = BY_MONTH_AGET_INSR_TABLE[key].std(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_aget_insr_temple_STD.columns = [<span class="string">'CUST_NO'</span>, str(<span class="string">'AGET_INSR_'</span>+key+<span class="string">'_STD'</span>)]</span><br><span class="line">        train_aget_insr_temple_MEAN = BY_MONTH_AGET_INSR_TABLE[key].mean(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_aget_insr_temple_MEAN.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'AGET_INSR_'</span>+key+<span class="string">'_MEAN'</span>)]</span><br><span class="line">        train_aget_insr_temple_MAX = BY_MONTH_AGET_INSR_TABLE[key].max(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_aget_insr_temple_MAX.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'AGET_INSR_'</span>+key+<span class="string">'_MAX'</span>)]</span><br><span class="line">        train_aget_insr_temple_MIN = BY_MONTH_AGET_INSR_TABLE[key].min(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_aget_insr_temple_MIN.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'AGET_INSR_'</span>+key+<span class="string">'_MIN'</span>)]</span><br><span class="line">        <span class="comment"># 合并字段</span></span><br><span class="line">        train_aget_insr_temple = pd.merge(train_aget_insr_temple_STD, train_aget_insr_temple_MEAN, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        train_aget_insr_temple = pd.merge(train_aget_insr_temple, train_aget_insr_temple_MAX, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        train_aget_insr_temple = pd.merge(train_aget_insr_temple, train_aget_insr_temple_MIN, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        <span class="keyword">return</span> train_aget_insr_temple</span><br><span class="line">    train_aget_insr_temple = BY_MONTH_AGET_INSR(<span class="string">'PREM'</span>)</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> [<span class="string">'CVAG'</span>, <span class="string">'INSE_CNT'</span>, <span class="string">'MTH_PREM_ACCM'</span>, <span class="string">'BEG_MTH_PREM_BAL'</span>]:</span><br><span class="line">        train_aget_insr_temple = pd.merge(train_aget_insr_temple, BY_MONTH_AGET_INSR(key))</span><br><span class="line">        train_aget_insr_temple.drop_duplicates(subset=<span class="keyword">None</span>, keep=<span class="string">'first'</span>, inplace=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> train_aget_insr_temple</span><br></pre></td></tr></table></figure><h3 id="表间融合"><a href="#表间融合" class="headerlink" title="表间融合"></a>表间融合</h3><h4 id="TRAIN集"><a href="#TRAIN集" class="headerlink" title="TRAIN集"></a>TRAIN集</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># train 集 38256</span></span><br><span class="line">dataset_train = pd.merge(IDV_CUST_BASIC_PARSE(CALC_AGE(train_idv_cust_basic)), IDV_TD_PARSE(train_idv_td), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_train = pd.merge(dataset_train, IDV_DPSA_PARSE(train_idv_dpsa), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_train = pd.merge(dataset_train, TR_DC_PARSE(train_tr_dc), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_train = pd.merge(dataset_train, BY_MONTH_IDV_TD_METHOD(train_idv_td), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_train = pd.merge(dataset_train, BY_MONTH_IDV_DPSA_METHOD(train_idv_dpsa), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_train = pd.merge(dataset_train, BY_MONTH_TR_DC_METHOD(train_tr_dc), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_train = pd.merge(dataset_train, THR_PTY_CSTD_PARSE(train_thr_pty_cstd), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_train = pd.merge(dataset_train, BY_MONTH_LOAN_METHOD(train_loan), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_train = pd.merge(dataset_train, BY_MONTH_FUND_METHOD(train_fund), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_train = pd.merge(dataset_train, BY_MONTH_BOND_METHOD(train_bond), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_train = pd.merge(dataset_train, BY_MONTH_PREC_METAL_METHOD(train_prec_metal), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_train = pd.merge(dataset_train, BY_MONTH_AGET_INSR_METHOD(train_aget_insr), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_train = pd.merge(dataset_train, AUM_NUMS(train_idv_td, train_bond, train_fund, train_prec_metal, train_aget_insr, train_idv_cust_basic), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_train = pd.merge(WEALTH(train_cust_result,train_idv_td,train_bond,train_fund,train_prec_metal,train_aget_insr,train_thr_pty_cstd), dataset_train, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br></pre></td></tr></table></figure><pre><code>/root/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:20: SettingWithCopyWarning: A value is trying to be set on a copy of a slice from a DataFrameSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy/root/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:26: SettingWithCopyWarning: A value is trying to be set on a copy of a slice from a DataFrameSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy/root/anaconda3/lib/python3.6/site-packages/pandas/core/reshape/merge.py:558: UserWarning: merging between different levels can give an unintended result (1 levels on the left, 2 on the right)  warnings.warn(msg, UserWarning)/root/anaconda3/lib/python3.6/site-packages/pandas/core/generic.py:2530: PerformanceWarning: dropping on a non-lexsorted multi-index without a level parameter may impact performance.  obj = obj._drop_axis(labels, axis, level=level, errors=errors)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将个人客户基本信息表与结果整合</span></span><br><span class="line">dataset_train = pd.merge(dataset_train, train_cust_result, on=<span class="string">'CUST_NO'</span>)</span><br></pre></td></tr></table></figure><h4 id="TRAIN-剪枝"><a href="#TRAIN-剪枝" class="headerlink" title="TRAIN 剪枝"></a>TRAIN 剪枝</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除无用字段</span></span><br><span class="line">dataset_train = dataset_train.drop([<span class="string">'CUST_NO'</span>], axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h4 id="A集"><a href="#A集" class="headerlink" title="A集"></a>A集</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># A 集 4782</span></span><br><span class="line">dataset_A = pd.merge(IDV_CUST_BASIC_PARSE(CALC_AGE(A_idv_cust_basic)), IDV_TD_PARSE(A_idv_td), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_A = pd.merge(dataset_A, IDV_DPSA_PARSE(A_idv_dpsa), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_A = pd.merge(dataset_A, TR_DC_PARSE(A_tr_dc), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_A = pd.merge(dataset_A, BY_MONTH_IDV_TD_METHOD(A_idv_td), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_A = pd.merge(dataset_A, BY_MONTH_IDV_DPSA_METHOD(A_idv_dpsa), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_A = pd.merge(dataset_A, BY_MONTH_TR_DC_METHOD(A_tr_dc), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_A = pd.merge(dataset_A, THR_PTY_CSTD_PARSE(A_thr_pty_cstd), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_A = pd.merge(dataset_A, BY_MONTH_LOAN_METHOD(A_loan), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_A = pd.merge(dataset_A, BY_MONTH_FUND_METHOD(A_fund), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_A = pd.merge(dataset_A, BY_MONTH_BOND_METHOD(A_bond), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_A = pd.merge(dataset_A, BY_MONTH_PREC_METAL_METHOD(A_prec_metal), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_A = pd.merge(dataset_A, BY_MONTH_AGET_INSR_METHOD(A_aget_insr), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_A = pd.merge(dataset_A, AUM_NUMS(A_idv_td, A_bond, A_fund, A_prec_metal, A_aget_insr, A_idv_cust_basic), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_A = pd.merge(WEALTH(A_customid,A_idv_td,A_bond,A_fund,A_prec_metal,A_aget_insr,A_thr_pty_cstd), dataset_A, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br></pre></td></tr></table></figure><pre><code>/root/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:20: SettingWithCopyWarning: A value is trying to be set on a copy of a slice from a DataFrameSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy/root/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:26: SettingWithCopyWarning: A value is trying to be set on a copy of a slice from a DataFrameSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy/root/anaconda3/lib/python3.6/site-packages/pandas/core/reshape/merge.py:558: UserWarning: merging between different levels can give an unintended result (1 levels on the left, 2 on the right)  warnings.warn(msg, UserWarning)/root/anaconda3/lib/python3.6/site-packages/pandas/core/generic.py:2530: PerformanceWarning: dropping on a non-lexsorted multi-index without a level parameter may impact performance.  obj = obj._drop_axis(labels, axis, level=level, errors=errors)</code></pre><h4 id="A-剪枝"><a href="#A-剪枝" class="headerlink" title="A 剪枝"></a>A 剪枝</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除无用字段</span></span><br><span class="line">dataset_A = dataset_A.drop([<span class="string">'CUST_NO'</span>], axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h4 id="B集"><a href="#B集" class="headerlink" title="B集"></a>B集</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># A 集 4782</span></span><br><span class="line">dataset_B = pd.merge(IDV_CUST_BASIC_PARSE(CALC_AGE(B_idv_cust_basic)), IDV_TD_PARSE(B_idv_td), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_B = pd.merge(dataset_B, IDV_DPSA_PARSE(B_idv_dpsa), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_B = pd.merge(dataset_B, TR_DC_PARSE(B_tr_dc), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_B = pd.merge(dataset_B, BY_MONTH_IDV_TD_METHOD(B_idv_td), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_B = pd.merge(dataset_B, BY_MONTH_IDV_DPSA_METHOD(B_idv_dpsa), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_B = pd.merge(dataset_B, BY_MONTH_TR_DC_METHOD(B_tr_dc), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_B = pd.merge(dataset_B, THR_PTY_CSTD_PARSE(B_thr_pty_cstd), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_B = pd.merge(dataset_B, BY_MONTH_LOAN_METHOD(B_loan), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_B = pd.merge(dataset_B, BY_MONTH_FUND_METHOD(B_fund), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_B = pd.merge(dataset_B, BY_MONTH_BOND_METHOD(B_bond), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_B = pd.merge(dataset_B, BY_MONTH_PREC_METAL_METHOD(B_prec_metal), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_B = pd.merge(dataset_B, BY_MONTH_AGET_INSR_METHOD(B_aget_insr), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_B = pd.merge(dataset_B, AUM_NUMS(B_idv_td, B_bond, B_fund, B_prec_metal, B_aget_insr, B_idv_cust_basic), on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br><span class="line">dataset_B = pd.merge(WEALTH(B_customid,B_idv_td,B_bond,B_fund,B_prec_metal,B_aget_insr,B_thr_pty_cstd), dataset_B, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br></pre></td></tr></table></figure><pre><code>/root/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:20: SettingWithCopyWarning: A value is trying to be set on a copy of a slice from a DataFrameSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy/root/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:26: SettingWithCopyWarning: A value is trying to be set on a copy of a slice from a DataFrameSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy/root/anaconda3/lib/python3.6/site-packages/pandas/core/reshape/merge.py:558: UserWarning: merging between different levels can give an unintended result (1 levels on the left, 2 on the right)  warnings.warn(msg, UserWarning)/root/anaconda3/lib/python3.6/site-packages/pandas/core/generic.py:2530: PerformanceWarning: dropping on a non-lexsorted multi-index without a level parameter may impact performance.  obj = obj._drop_axis(labels, axis, level=level, errors=errors)</code></pre><h4 id="B集剪枝"><a href="#B集剪枝" class="headerlink" title="B集剪枝"></a>B集剪枝</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除无用字段</span></span><br><span class="line">dataset_B = dataset_B.drop([<span class="string">'CUST_NO'</span>], axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h4 id="欠采样"><a href="#欠采样" class="headerlink" title="欠采样"></a>欠采样</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train_SAMPLE = pd.concat([dataset_train[dataset_train[<span class="string">'FLAG'</span>]==<span class="number">0</span>].sample(frac=<span class="number">0.20</span>),dataset_train[dataset_train[<span class="string">'FLAG'</span>]==<span class="number">1</span>]],axis=<span class="number">0</span>).sample(frac=<span class="number">1.0</span>)</span><br></pre></td></tr></table></figure><h3 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np  </span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd  </span><br><span class="line"><span class="keyword">import</span> xgboost <span class="keyword">as</span> xgb  </span><br><span class="line"><span class="keyword">import</span> time  </span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> StratifiedKFold  </span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> imblearn.over_sampling <span class="keyword">import</span> SMOTE</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> GridSearchCV</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建特征  </span></span><br><span class="line"><span class="comment">#X = dataset_train.drop(['FLAG'],axis=1).fillna(0)</span></span><br><span class="line"><span class="comment">#y = dataset_train['FLAG']</span></span><br><span class="line">X = train_SAMPLE.drop([<span class="string">'FLAG'</span>],axis=<span class="number">1</span>).fillna(<span class="number">0</span>)</span><br><span class="line">y = train_SAMPLE[<span class="string">'FLAG'</span>]</span><br><span class="line"><span class="comment"># X = dataset_train_SAMPLE.drop(['FLAG'],axis=1)</span></span><br><span class="line"><span class="comment"># y = dataset_train_SAMPLE['FLAG']</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 用sklearn.cross_validation进行训练数据集划分</span></span><br><span class="line">X, val_X, y, val_y = train_test_split(  </span><br><span class="line">    X,  </span><br><span class="line">    y,  </span><br><span class="line">    test_size=<span class="number">0.01</span>,</span><br><span class="line">    <span class="comment">#test_size=0.125,</span></span><br><span class="line">    random_state=<span class="number">2020</span>,  </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># SMOTE过采样</span></span><br><span class="line"><span class="comment"># smo = SMOTE(random_state=2019)</span></span><br><span class="line"><span class="comment"># X_smo, y_smo = smo.fit_sample(X, y)</span></span><br><span class="line"><span class="comment"># X_smo = pd.DataFrame(X_smo)</span></span><br><span class="line"><span class="comment"># X_smo.columns=['XXX']</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np  </span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd  </span><br><span class="line"><span class="keyword">import</span> xgboost <span class="keyword">as</span> xgb  </span><br><span class="line"><span class="keyword">import</span> time  </span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> StratifiedKFold  </span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> imblearn.over_sampling <span class="keyword">import</span> SMOTE</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> GridSearchCV</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建特征  </span></span><br><span class="line">X = dataset_train.drop([<span class="string">'FLAG'</span>],axis=<span class="number">1</span>).fillna(<span class="number">0</span>)</span><br><span class="line">y = dataset_train[<span class="string">'FLAG'</span>]</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 用sklearn.cross_validation进行训练数据集划分</span></span><br><span class="line">X, val_X, y, val_y = train_test_split(  </span><br><span class="line">    X,  </span><br><span class="line">    y,  </span><br><span class="line">    test_size=<span class="number">0.125</span>,</span><br><span class="line">    random_state=<span class="number">2019</span>,  </span><br><span class="line">)</span><br><span class="line">train_REAL = pd.concat([X,y],axis=<span class="number">1</span>)</span><br><span class="line">train_REAL = pd.concat([train_REAL[train_REAL[<span class="string">'FLAG'</span>]==<span class="number">0</span>].sample(frac=<span class="number">0.20</span>),train_REAL[train_REAL[<span class="string">'FLAG'</span>]==<span class="number">1</span>]],axis=<span class="number">0</span>).sample(frac=<span class="number">1.0</span>)</span><br><span class="line">X = train_REAL.drop([<span class="string">'FLAG'</span>],axis=<span class="number">1</span>)</span><br><span class="line">y = train_REAL[<span class="string">'FLAG'</span>]</span><br></pre></td></tr></table></figure><h4 id="XGB算法"><a href="#XGB算法" class="headerlink" title="XGB算法"></a>XGB算法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># xgb矩阵赋值  </span></span><br><span class="line">xgb_val = xgb.DMatrix(val_X, label=val_y)  </span><br><span class="line"><span class="comment"># xgb_train = xgb.DMatrix(X_smo, label=y_smo)</span></span><br><span class="line">xgb_train = xgb.DMatrix(X, label=y)</span><br><span class="line">  </span><br><span class="line"><span class="comment"># xgboost模型#</span></span><br><span class="line">params = &#123;  </span><br><span class="line">    <span class="string">'booster'</span>: <span class="string">'gbtree'</span>,  </span><br><span class="line">    <span class="comment"># 'objective': 'multi:softmax',  # 多分类的问题、  </span></span><br><span class="line">    <span class="comment"># 'objective': 'multi:softprob',   # 多分类概率  </span></span><br><span class="line">    <span class="string">'objective'</span>: <span class="string">'binary:logistic'</span>,  </span><br><span class="line">    <span class="string">'eval_metric'</span>: <span class="string">'logloss'</span>,  </span><br><span class="line">    <span class="comment"># 'num_class': 9,  # 类别数，与 multisoftmax 并用  </span></span><br><span class="line">    <span class="string">'gamma'</span>: <span class="number">0.1</span>,  <span class="comment"># 用于控制是否后剪枝的参数,越大越保守，一般0.1、0.2这样子。  </span></span><br><span class="line">    <span class="string">'max_depth'</span>: <span class="number">5</span>,  <span class="comment"># 构建树的深度，越大越容易过拟合  </span></span><br><span class="line">    <span class="string">'alpha'</span>: <span class="number">0</span>,   <span class="comment"># L1正则化系数  </span></span><br><span class="line">    <span class="string">'lambda'</span>: <span class="number">8</span>,  <span class="comment"># 控制模型复杂度的权重值的L2正则化项参数，参数越大，模型越不容易过拟合。  </span></span><br><span class="line">    <span class="string">'subsample'</span>: <span class="number">1</span>,  <span class="comment"># 随机采样训练样本  </span></span><br><span class="line">    <span class="string">'colsample_bytree'</span>: <span class="number">0.6</span>,  <span class="comment"># 生成树时进行的列采样  </span></span><br><span class="line">    <span class="string">'min_child_weight'</span>: <span class="number">3</span>,  </span><br><span class="line">    <span class="comment"># 这个参数默认是 1，是每个叶子里面 h 的和至少是多少，对正负样本不均衡时的 0-1 分类而言  </span></span><br><span class="line">    <span class="comment"># ，假设 h 在 0.01 附近，min_child_weight 为 1 意味着叶子节点中最少需要包含 100 个样本。  </span></span><br><span class="line">    <span class="comment"># 这个参数非常影响结果，控制叶子节点中二阶导的和的最小值，该参数值越小，越容易 overfitting。  </span></span><br><span class="line">    <span class="string">'silent'</span>: <span class="number">0</span>,  <span class="comment"># 设置成1则没有运行信息输出，最好是设置为0.  </span></span><br><span class="line">    <span class="string">'eta'</span>: <span class="number">0.01</span> ,</span><br><span class="line">    <span class="comment">#'eta': 0.1,  # 如同学习率 - result 0.554455</span></span><br><span class="line">    <span class="string">'seed'</span>: <span class="number">1000</span>,  </span><br><span class="line">    <span class="string">'nthread'</span>: <span class="number">24</span>,  <span class="comment"># cpu 线程数  </span></span><br><span class="line">    <span class="string">'missing'</span>: <span class="number">1</span>,  </span><br><span class="line">    <span class="string">'scale_pos_weight'</span>: (np.sum(y==<span class="number">0</span>)/np.sum(y==<span class="number">1</span>))  <span class="comment"># 用来处理正负样本不均衡的问题,通常取：sum(negative cases) / sum(positive cases)  </span></span><br><span class="line">    <span class="comment"># 'eval_metric': 'auc'  </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">plst = list(params.items())  </span><br><span class="line">num_rounds = <span class="number">30000</span>  <span class="comment"># 迭代次数  </span></span><br><span class="line">watchlist = [(xgb_train, <span class="string">'train'</span>), (xgb_val, <span class="string">'val'</span>)]  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 交叉验证  </span></span><br><span class="line">result = xgb.cv(plst, xgb_train, num_boost_round=<span class="number">200</span>, nfold=<span class="number">4</span>, early_stopping_rounds=<span class="number">200</span>, verbose_eval=<span class="keyword">True</span>, folds=StratifiedKFold(n_splits=<span class="number">4</span>).split(X, y))  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 训练模型并保存  </span></span><br><span class="line"><span class="comment"># early_stopping_rounds 当设置的迭代次数较大时，early_stopping_rounds 可在一定的迭代次数内准确率没有提升就停止训练  </span></span><br><span class="line">model = xgb.train(plst, xgb_train, num_rounds, watchlist, early_stopping_rounds=<span class="number">400</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 模型保存</span></span><br><span class="line">model.save_model(<span class="string">'./leezy_xgb.model'</span>)  <span class="comment"># 用于存储训练出的模型</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读取模型</span></span><br><span class="line"><span class="comment"># model = xgb.Booster(model_file='5903-xgb.model')</span></span><br><span class="line"><span class="comment"># 本地验证</span></span><br><span class="line">xgb_test = xgb.DMatrix(val_X) </span><br><span class="line">preds = model.predict(xgb_test)</span><br><span class="line"><span class="comment"># 导出结果  </span></span><br><span class="line">threshold = <span class="number">0.70</span></span><br><span class="line">ans = []</span><br><span class="line"><span class="keyword">for</span> pred <span class="keyword">in</span> preds:  </span><br><span class="line">    result = <span class="number">1</span> <span class="keyword">if</span> pred &gt; threshold <span class="keyword">else</span> <span class="number">0</span> </span><br><span class="line">    ans.append(result)</span><br><span class="line">pred_result= pd.Series(ans, dtype=<span class="string">'int32'</span>)</span><br><span class="line">evaluate(val_y, pred_result)</span><br></pre></td></tr></table></figure><pre><code>test_pct_1: 0.1581pred_pct_1: 0.1836Precesion: 0.5581Recall: 0.6481F1-score: 0.5998confusion matrix:[[3638  388] [ 266  490]]{&apos;Confusuion&apos;: array([[3638,  388],        [ 266,  490]]), &apos;F1&apos;: 0.5997552019583843, &apos;Precision&apos;: 0.5580865603644647, &apos;acc&apos;: 0.863237139272271, &apos;pred_pct_1&apos;: 0.1836051861145964, &apos;recall&apos;: 0.6481481481481481, &apos;roc_auc&apos;: 0.7758872881823701, &apos;test_pct_1&apos;: 0.15809284818067754}</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># A集训练</span></span><br><span class="line">xgb_A = xgb.DMatrix(dataset_A)</span><br><span class="line">A_preds = model.predict(xgb_A)  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出结果  </span></span><br><span class="line">threshold = <span class="number">0.40</span></span><br><span class="line">ans = []</span><br><span class="line"><span class="keyword">for</span> pred <span class="keyword">in</span> A_preds:  </span><br><span class="line">    result = <span class="number">1</span> <span class="keyword">if</span> pred &gt; threshold <span class="keyword">else</span> <span class="number">0</span> </span><br><span class="line">    ans.append(result)</span><br><span class="line">pred_A_result= pd.Series(ans, dtype=<span class="string">'int32'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># B集训练</span></span><br><span class="line">xgb_B = xgb.DMatrix(dataset_B)</span><br><span class="line">B_preds = model.predict(xgb_B)  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出结果  </span></span><br><span class="line">threshold = <span class="number">0.68</span></span><br><span class="line">ans = []</span><br><span class="line"><span class="keyword">for</span> pred <span class="keyword">in</span> B_preds:  </span><br><span class="line">    result = <span class="number">1</span> <span class="keyword">if</span> pred &gt; threshold <span class="keyword">else</span> <span class="number">0</span> </span><br><span class="line">    ans.append(result)</span><br><span class="line">pred_B_result= pd.Series(ans, dtype=<span class="string">'int32'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> operator</span><br><span class="line">importance = model.get_fscore()</span><br><span class="line">importance = sorted(importance.items(), key=operator.itemgetter(<span class="number">1</span>))</span><br><span class="line"><span class="comment"># print(importance)</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.rcParams[<span class="string">"figure.figsize"</span>]=(<span class="number">30</span>,<span class="number">40</span>)</span><br><span class="line">xgb.plot_importance(model, max_num_features=<span class="number">100</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>/root/anaconda3/lib/python3.6/site-packages/matplotlib/font_manager.py:1320: UserWarning: findfont: Font family [&apos;sans-serif&apos;] not found. Falling back to DejaVu Sans  (prop.get_family(), self.defaultFamily[fontext]))</code></pre><p><img src="/assets/blogImg/OUTPUT_IMPORTANCES.png" alt="IMPORTANCES"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看特征排名</span></span><br><span class="line">feature_rank(model, <span class="number">30</span>)</span><br></pre></td></tr></table></figure><h3 id="提交结果"><a href="#提交结果" class="headerlink" title="提交结果"></a>提交结果</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pred_B_result.value_counts()</span><br></pre></td></tr></table></figure><pre><code>0    39011     881dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 合并结果</span></span><br><span class="line">result = pd.concat([B_customid, pred_B_result],axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result.to_csv(<span class="string">'111.csv'</span>,header=<span class="number">0</span>,index=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">init_woody</span><br></pre></td></tr></table></figure><pre><code>The prv extension is already loaded. To reload it, use:  %reload_ext prvMatplotlib env init complete.Warnings off.</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">predict <span class="number">2</span> <span class="number">000.</span>csv</span><br></pre></td></tr></table></figure><pre><code>&apos;提交次数已用完，请明日再试！&apos;</code></pre><h3 id="深化特征工程"><a href="#深化特征工程" class="headerlink" title="深化特征工程"></a>深化特征工程</h3><h4 id="各类理财产品的持有数量"><a href="#各类理财产品的持有数量" class="headerlink" title="各类理财产品的持有数量"></a>各类理财产品的持有数量</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">train_idv_td = pd.read_csv(<span class="string">"../data/2/train/IDV_TD.csv"</span>, encoding=<span class="string">'utf-8'</span>) <span class="comment"># 个人定期存款账户信息（IDV_TD）</span></span><br><span class="line">train_bond = pd.read_csv(<span class="string">"../data/2/train/BOND.csv"</span>, encoding=<span class="string">'utf-8'</span>) <span class="comment"># 国债账户信息（BOND）</span></span><br><span class="line">train_fund = pd.read_csv(<span class="string">"../data/2/train/FUND.csv"</span>, encoding=<span class="string">'utf-8'</span>) <span class="comment"># 基金账户信息（FUND）</span></span><br><span class="line">train_prec_metal = pd.read_csv(<span class="string">"../data/2/train/PREC_METAL.csv"</span>, encoding=<span class="string">'utf-8'</span>) <span class="comment"># 贵金属账户信息（PREC_METAL）</span></span><br><span class="line">train_aget_insr = pd.read_csv(<span class="string">"../data/2/train/AGET_INSR.csv"</span>, encoding=<span class="string">'utf-8'</span>) <span class="comment"># 代理保险账户信息（AGET_INSR）</span></span><br><span class="line">train_idv_cust_basic = pd.read_csv(<span class="string">"../data/2/train/IDV_CUST_BASIC.csv"</span>, encoding=<span class="string">'utf-8'</span>) <span class="comment"># 个人客户基本信息（IDV_CUST_BASIC）</span></span><br></pre></td></tr></table></figure><pre><code>/root/anaconda3/lib/python3.6/site-packages/IPython/core/interactiveshell.py:2728: DtypeWarning: Columns (12) have mixed types. Specify dtype option on import or set low_memory=False.  interactivity=interactivity, compiler=compiler, result=result)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定期的个数</span></span><br><span class="line">train_idv_td_3 = train_idv_td[train_idv_td[<span class="string">'DATA_DAT'</span>]==<span class="number">3734035200</span>]</span><br><span class="line">train_idv_td_AUM = train_idv_td_3[[<span class="string">'CUST_NO'</span>, <span class="string">'ARG_CRT_DAT'</span>]]</span><br><span class="line">train_idv_td_num = train_idv_td_AUM.groupby(<span class="string">'CUST_NO'</span>).count().reset_index()</span><br><span class="line">train_idv_td_num.rename(columns=&#123;<span class="string">'ARG_CRT_DAT'</span>:<span class="string">'IDV_TD_NUM'</span>&#125;, inplace=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 国债的个数</span></span><br><span class="line">train_bond_3 = train_bond[train_bond[<span class="string">'DATA_DAT'</span>]==<span class="number">3734035200</span>]</span><br><span class="line">train_bond_AUM = train_bond_3[[<span class="string">'CUST_NO'</span>, <span class="string">'ARG_CRT_DAT'</span>]]</span><br><span class="line">train_bond_num = train_bond_AUM.groupby(<span class="string">'CUST_NO'</span>).count().reset_index()</span><br><span class="line">train_bond_num.rename(columns=&#123;<span class="string">'ARG_CRT_DAT'</span>:<span class="string">'BOND_NUM'</span>&#125;, inplace=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基金的个数</span></span><br><span class="line">train_fund_3 = train_fund[train_fund[<span class="string">'DATA_DAT'</span>]==<span class="number">3734035200</span>]</span><br><span class="line">train_fund_AUM = train_fund[[<span class="string">'CUST_NO'</span>, <span class="string">'ARG_CRT_DAT'</span>]]</span><br><span class="line">train_fund_num = train_fund_AUM.groupby(<span class="string">'CUST_NO'</span>).count().reset_index()</span><br><span class="line">train_fund_num.rename(columns=&#123;<span class="string">'ARG_CRT_DAT'</span>:<span class="string">'FUND_NUM'</span>&#125;, inplace=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 贵金属的个数</span></span><br><span class="line">train_prec_metal_3 = train_prec_metal[train_prec_metal[<span class="string">'DATA_DAT'</span>]==<span class="number">3734035200</span>]</span><br><span class="line">train_prec_metal_3.dropna(subset=[<span class="string">'SIGD_DAT'</span>], inplace=<span class="keyword">True</span>)</span><br><span class="line">train_prec_metal_AUM = train_prec_metal_3[[<span class="string">'CUST_NO'</span>, <span class="string">'SIGD_DAT'</span>]]</span><br><span class="line">train_prec_metal_num = train_prec_metal_AUM.groupby(<span class="string">'CUST_NO'</span>).count().reset_index()</span><br><span class="line">train_prec_metal_num.rename(columns=&#123;<span class="string">'SIGD_DAT'</span>:<span class="string">'PREC_METAL_NUM'</span>&#125;, inplace=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><pre><code>/root/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: A value is trying to be set on a copy of a slice from a DataFrameSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy  This is separate from the ipykernel package so we can avoid doing imports until</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 保险的个数</span></span><br><span class="line">train_aget_insr_3 = train_aget_insr[train_aget_insr[<span class="string">'DATA_DAT'</span>]==<span class="number">3734035200</span>]</span><br><span class="line">train_aget_insr_3.dropna(subset=[<span class="string">'INSE_DAT'</span>], inplace=<span class="keyword">True</span>)</span><br><span class="line">train_aget_insr_AUM = train_aget_insr_3[[<span class="string">'CUST_NO'</span>, <span class="string">'INSE_DAT'</span>]]</span><br><span class="line">train_aget_insr_num = train_aget_insr_AUM.groupby(<span class="string">'CUST_NO'</span>).count().reset_index()</span><br><span class="line">train_aget_insr_num.rename(columns=&#123;<span class="string">'INSE_DAT'</span>:<span class="string">'AGET_INSR_NUM'</span>&#125;, inplace=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><pre><code>/root/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: A value is trying to be set on a copy of a slice from a DataFrameSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy  This is separate from the ipykernel package so we can avoid doing imports until</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 客户ID</span></span><br><span class="line">CUST_NO_LSIT = train_idv_cust_basic[<span class="string">'CUST_NO'</span>].reset_index().drop(<span class="string">'index'</span>, axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 合并为一个表</span></span><br><span class="line">CUST_NO_AUM_LSIT = pd.merge(pd.merge(pd.merge(pd.merge(pd.merge(CUST_NO_LSIT, train_idv_td_num, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>), train_bond_num, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>), train_fund_num, </span><br><span class="line">                            on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>), train_prec_metal_num, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>), train_aget_insr_num, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>).fillna(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CUST_NO_AUM_LSIT[<span class="string">'PRODUCTS_NUM'</span>] = CUST_NO_AUM_LSIT[[<span class="string">'IDV_TD_NUM'</span>,<span class="string">'BOND_NUM'</span>,<span class="string">'FUND_NUM'</span>,<span class="string">'PREC_METAL_NUM'</span>,<span class="string">'AGET_INSR_NUM'</span>]].sum(axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CUST_NO_AUM_LSIT[CUST_NO_AUM_LSIT[<span class="string">'CUST_NO'</span>] == <span class="string">'a100d07faf0bc3c60d7d65abd704142a'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CUST_NO_AUM_LSIT.head(<span class="number">100</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MyAUMTest = pd.merge(CUST_NO_AUM_LSIT, train_cust_result, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MyAUMTest.head(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CUST_NO_AUM_LSIT.shape</span><br></pre></td></tr></table></figure><pre><code>(38256, 6)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关联关系</span></span><br><span class="line">g = sns.heatmap(MyAUMTest[[<span class="string">'FLAG'</span>, <span class="string">'IDV_TD_NUM'</span>,<span class="string">'BOND_NUM'</span>,<span class="string">'FUND_NUM'</span>,<span class="string">'PREC_METAL_NUM'</span>,<span class="string">'AGET_INSR_NUM'</span>,<span class="string">'PRODUCTS_NUM'</span>]].corr(), annot=<span class="keyword">True</span>, cmap=<span class="string">"coolwarm"</span>)</span><br></pre></td></tr></table></figure><pre><code>/root/anaconda3/lib/python3.6/site-packages/matplotlib/font_manager.py:1320: UserWarning: findfont: Font family [&apos;sans-serif&apos;] not found. Falling back to DejaVu Sans  (prop.get_family(), self.defaultFamily[fontext]))</code></pre><p><img src="/assets/blogImg/OUTPUT_HEATMAP.png" alt="HEATMAP"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取到所有投资种类的和</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">AUM_NUMS</span><span class="params">(train_idv_td, train_bond, train_fund, train_prec_metal, train_aget_insr, train_idv_cust_basic)</span>:</span></span><br><span class="line">    <span class="comment"># 定期的个数</span></span><br><span class="line">    train_idv_td_3 = train_idv_td[train_idv_td[<span class="string">'DATA_DAT'</span>]==<span class="number">3734035200</span>]</span><br><span class="line">    train_idv_td_AUM = train_idv_td_3[[<span class="string">'CUST_NO'</span>, <span class="string">'ARG_CRT_DAT'</span>]]</span><br><span class="line">    train_idv_td_num = train_idv_td_AUM.groupby(<span class="string">'CUST_NO'</span>).count().reset_index()</span><br><span class="line">    train_idv_td_num.rename(columns=&#123;<span class="string">'ARG_CRT_DAT'</span>:<span class="string">'IDV_TD_NUM'</span>&#125;, inplace=<span class="keyword">True</span>)</span><br><span class="line">    <span class="comment"># 国债的个数</span></span><br><span class="line">    train_bond_3 = train_bond[train_bond[<span class="string">'DATA_DAT'</span>]==<span class="number">3734035200</span>]</span><br><span class="line">    train_bond_AUM = train_bond_3[[<span class="string">'CUST_NO'</span>, <span class="string">'ARG_CRT_DAT'</span>]]</span><br><span class="line">    train_bond_num = train_bond_AUM.groupby(<span class="string">'CUST_NO'</span>).count().reset_index()</span><br><span class="line">    train_bond_num.rename(columns=&#123;<span class="string">'ARG_CRT_DAT'</span>:<span class="string">'BOND_NUM'</span>&#125;, inplace=<span class="keyword">True</span>)</span><br><span class="line">    <span class="comment"># 基金的个数</span></span><br><span class="line">    train_fund_3 = train_fund[train_fund[<span class="string">'DATA_DAT'</span>]==<span class="number">3734035200</span>]</span><br><span class="line">    train_fund_AUM = train_fund[[<span class="string">'CUST_NO'</span>, <span class="string">'ARG_CRT_DAT'</span>]]</span><br><span class="line">    train_fund_num = train_fund_AUM.groupby(<span class="string">'CUST_NO'</span>).count().reset_index()</span><br><span class="line">    train_fund_num.rename(columns=&#123;<span class="string">'ARG_CRT_DAT'</span>:<span class="string">'FUND_NUM'</span>&#125;, inplace=<span class="keyword">True</span>)</span><br><span class="line">    <span class="comment"># 贵金属的个数</span></span><br><span class="line">    train_prec_metal_3 = train_prec_metal[train_prec_metal[<span class="string">'DATA_DAT'</span>]==<span class="number">3734035200</span>]</span><br><span class="line">    train_prec_metal_3.dropna(subset=[<span class="string">'SIGD_DAT'</span>], inplace=<span class="keyword">True</span>)</span><br><span class="line">    train_prec_metal_AUM = train_prec_metal_3[[<span class="string">'CUST_NO'</span>, <span class="string">'SIGD_DAT'</span>]]</span><br><span class="line">    train_prec_metal_num = train_prec_metal_AUM.groupby(<span class="string">'CUST_NO'</span>).count().reset_index()</span><br><span class="line">    train_prec_metal_num.rename(columns=&#123;<span class="string">'SIGD_DAT'</span>:<span class="string">'PREC_METAL_NUM'</span>&#125;, inplace=<span class="keyword">True</span>)</span><br><span class="line">    <span class="comment"># 保险的个数</span></span><br><span class="line">    train_aget_insr_3 = train_aget_insr[train_aget_insr[<span class="string">'DATA_DAT'</span>]==<span class="number">3734035200</span>]</span><br><span class="line">    train_aget_insr_3.dropna(subset=[<span class="string">'INSE_DAT'</span>], inplace=<span class="keyword">True</span>)</span><br><span class="line">    train_aget_insr_AUM = train_aget_insr_3[[<span class="string">'CUST_NO'</span>, <span class="string">'INSE_DAT'</span>]]</span><br><span class="line">    train_aget_insr_num = train_aget_insr_AUM.groupby(<span class="string">'CUST_NO'</span>).count().reset_index()</span><br><span class="line">    train_aget_insr_num.rename(columns=&#123;<span class="string">'INSE_DAT'</span>:<span class="string">'AGET_INSR_NUM'</span>&#125;, inplace=<span class="keyword">True</span>)</span><br><span class="line">    <span class="comment"># 客户ID</span></span><br><span class="line">    CUST_NO_LSIT = train_idv_cust_basic[<span class="string">'CUST_NO'</span>].reset_index().drop(<span class="string">'index'</span>, axis=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 合并为一个表</span></span><br><span class="line">    CUST_NO_AUM_LSIT = pd.merge(pd.merge(pd.merge(pd.merge(pd.merge(CUST_NO_LSIT, train_idv_td_num, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>), train_bond_num, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>), train_fund_num, </span><br><span class="line">                            on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>), train_prec_metal_num, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>), train_aget_insr_num, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'outer'</span>).fillna(<span class="number">0</span>)</span><br><span class="line">    CUST_NO_AUM_LSIT[<span class="string">'PRODUCTS_NUM'</span>] = CUST_NO_AUM_LSIT[[<span class="string">'IDV_TD_NUM'</span>,<span class="string">'BOND_NUM'</span>,<span class="string">'FUND_NUM'</span>,<span class="string">'PREC_METAL_NUM'</span>,<span class="string">'AGET_INSR_NUM'</span>]].sum(axis=<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> CUST_NO_AUM_LSIT</span><br></pre></td></tr></table></figure><h4 id="三个月变动"><a href="#三个月变动" class="headerlink" title="三个月变动"></a>三个月变动</h4><h5 id="定期账户"><a href="#定期账户" class="headerlink" title="定期账户"></a>定期账户</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">BY_MONTH_IDV_TD_METHOD</span><span class="params">(dataset_IDV_TD)</span>:</span></span><br><span class="line">    <span class="comment"># 预处理</span></span><br><span class="line">    <span class="comment"># 简化IDV_TD表</span></span><br><span class="line">    train_idv_td_temple = dataset_IDV_TD.drop([<span class="string">'ARG_CRT_DAT'</span>, <span class="string">'CLS_ACCT_DAT'</span>, <span class="string">'MATU_DAT'</span>, <span class="string">'LAC'</span>, <span class="string">'ACCT_STS_CD'</span>,<span class="string">'DP_DAY_CD'</span>, <span class="string">'RDEP_IND_CD'</span>, <span class="string">'RDEP_DP_DAY_CD'</span>, <span class="string">'RAT_CTG'</span>,<span class="string">'FXDI_SA_ACCM'</span>, <span class="string">'MTH_ACT_DAYS_TOT'</span>], axis=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 将train_idv_td和train_base_excg合并</span></span><br><span class="line">    train_idv_td_temple = pd.merge(train_idv_td_temple, train_base_excg, on = <span class="string">'CCY_CD'</span>)</span><br><span class="line">    <span class="comment"># 执行汇率计算函数</span></span><br><span class="line">    train_idv_td_temple[<span class="string">'CRBAL'</span>] = train_idv_td_temple.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'CRBAL'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_idv_td_temple[<span class="string">'REG_CAP'</span>] = train_idv_td_temple.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'REG_CAP'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_idv_td_temple[<span class="string">'FXDI_T_ACCM'</span>] = train_idv_td_temple.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'FXDI_T_ACCM'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_idv_td_temple[<span class="string">'TDOP_SHD_PAY_INTS'</span>] = train_idv_td_temple.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'TDOP_SHD_PAY_INTS'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_idv_td_temple[<span class="string">'MOTH_CR_ACCM'</span>] = train_idv_td_temple.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'MOTH_CR_ACCM'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_idv_td_temple = train_idv_td_temple.drop([<span class="string">'CCY_CD'</span>, <span class="string">'RMB_MID_PRIC'</span>], axis=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 按月将金额分类</span></span><br><span class="line">    BY_MONTH_TD = train_idv_td_temple.groupby([<span class="string">'CUST_NO'</span>, <span class="string">'DATA_DAT'</span>])[[<span class="string">'CRBAL'</span>, <span class="string">'REG_CAP'</span>, <span class="string">'FXDI_T_ACCM'</span>, <span class="string">'TDOP_SHD_PAY_INTS'</span>, <span class="string">'MOTH_CR_ACCM'</span>]].sum().unstack()</span><br><span class="line">    <span class="comment"># 声明函数 计算三个月的标准差、均值、最大值、最小值</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">BY_MONTH_IDV_TD</span><span class="params">(key)</span>:</span></span><br><span class="line">        train_idv_td_temple_STD = BY_MONTH_TD[key].std(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_idv_td_temple_STD.columns = [<span class="string">'CUST_NO'</span>, str(<span class="string">'IDV_TD_'</span>+key+<span class="string">'_STD'</span>)]</span><br><span class="line">        train_idv_td_temple_MEAN = BY_MONTH_TD[key].mean(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_idv_td_temple_MEAN.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'IDV_TD_'</span>+key+<span class="string">'_MEAN'</span>)]</span><br><span class="line">        train_idv_td_temple_MAX = BY_MONTH_TD[key].max(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_idv_td_temple_MAX.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'IDV_TD_'</span>+key+<span class="string">'_MAX'</span>)]</span><br><span class="line">        train_idv_td_temple_MIN = BY_MONTH_TD[key].min(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_idv_td_temple_MIN.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'IDV_TD_'</span>+key+<span class="string">'_MIN'</span>)]</span><br><span class="line">        <span class="comment"># 合并字段</span></span><br><span class="line">        train_idv_td_temple = pd.merge(train_idv_td_temple_STD, train_idv_td_temple_MEAN, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        train_idv_td_temple = pd.merge(train_idv_td_temple, train_idv_td_temple_MAX, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        train_idv_td_temple = pd.merge(train_idv_td_temple, train_idv_td_temple_MIN, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        train_idv_td_temple = train_idv_td_temple.fillna(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> train_idv_td_temple</span><br><span class="line">    train_idv_td_temple = BY_MONTH_IDV_TD(<span class="string">'CRBAL'</span>)</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> [<span class="string">'REG_CAP'</span>, <span class="string">'FXDI_T_ACCM'</span>,<span class="string">'TDOP_SHD_PAY_INTS'</span>, <span class="string">'MOTH_CR_ACCM'</span>]:</span><br><span class="line">        train_idv_td_temple = pd.merge(train_idv_td_temple, BY_MONTH_IDV_TD(key))</span><br><span class="line">        train_idv_td_temple.drop_duplicates(subset=<span class="keyword">None</span>, keep=<span class="string">'first'</span>, inplace=<span class="keyword">True</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> train_idv_td_temple</span><br></pre></td></tr></table></figure><h5 id="活期账户"><a href="#活期账户" class="headerlink" title="活期账户"></a>活期账户</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">BY_MONTH_IDV_DPSA_METHOD</span><span class="params">(dataset_IDV_DPSA)</span>:</span></span><br><span class="line">    <span class="comment"># 预处理</span></span><br><span class="line">    <span class="comment"># 将IDV_DPSA表与汇率表整合</span></span><br><span class="line">    train_idv_dpsa_temple = pd.merge(dataset_IDV_DPSA, train_base_excg, on = <span class="string">'CCY_CD'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">    train_idv_dpsa_temple.drop_duplicates(subset=<span class="keyword">None</span>, keep=<span class="string">'first'</span>, inplace=<span class="keyword">True</span>)</span><br><span class="line">    <span class="comment"># 执行汇率计算函数</span></span><br><span class="line">    train_idv_dpsa_temple[<span class="string">'CRBAL'</span>] = train_idv_dpsa_temple.apply(compute_REAL_MONEY, axis=<span class="number">1</span>, args = (<span class="string">'CRBAL'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_idv_dpsa_temple[<span class="string">'ITST_BRNG_ACCM'</span>] = train_idv_dpsa_temple.apply(compute_REAL_MONEY, axis=<span class="number">1</span>, args = (<span class="string">'ITST_BRNG_ACCM'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_idv_dpsa_temple[<span class="string">'FRZ_TOT_AMT'</span>] = train_idv_dpsa_temple.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'FRZ_TOT_AMT'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_idv_dpsa_temple[<span class="string">'DAY_WD_ACT_AMT'</span>] = train_idv_dpsa_temple.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'DAY_WD_ACT_AMT'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_idv_dpsa_temple[<span class="string">'DAY_CSH_DP_SUM'</span>] = train_idv_dpsa_temple.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'DAY_CSH_DP_SUM'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_idv_dpsa_temple[<span class="string">'DAY_CSH_WD_SUM'</span>] = train_idv_dpsa_temple.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'DAY_CSH_WD_SUM'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_idv_dpsa_temple[<span class="string">'DAY_TFI_SUM'</span>] = train_idv_dpsa_temple.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'DAY_TFI_SUM'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_idv_dpsa_temple[<span class="string">'MOTH_CR_ACCM'</span>] = train_idv_dpsa_temple.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'MOTH_CR_ACCM'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_idv_dpsa_temple[<span class="string">'BEG_MOTH_CRBAL'</span>] = train_idv_dpsa_temple.apply(compute_REAL_MONEY, axis = <span class="number">1</span>, args = (<span class="string">'BEG_MOTH_CRBAL'</span>, <span class="string">'RMB_MID_PRIC'</span>))</span><br><span class="line">    train_idv_dpsa_temple = train_idv_dpsa_temple.drop([<span class="string">'CCY_CD'</span>, <span class="string">'RMB_MID_PRIC'</span>], axis=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 按月将金额分组</span></span><br><span class="line">    BY_MONTH_DPSA = train_idv_dpsa_temple.groupby([<span class="string">'CUST_NO'</span>, <span class="string">'DATA_DAT'</span>])[[<span class="string">'CRBAL'</span>, <span class="string">'ITST_BRNG_ACCM'</span>,</span><br><span class="line">           <span class="string">'FRZ_TOT_AMT'</span>, <span class="string">'DAY_WD_ACT_AMT'</span>, <span class="string">'DAY_CSH_DP_SUM'</span>, <span class="string">'DAY_CSH_WD_SUM'</span>,</span><br><span class="line">           <span class="string">'DAY_TFI_SUM'</span>, <span class="string">'MOTH_CR_ACCM'</span>, <span class="string">'BEG_MOTH_CRBAL'</span>]].sum().unstack()</span><br><span class="line">    <span class="comment"># 声明函数 计算三个月的标准差、均值、最大值、最小值</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">BY_MONTH_IDV_DPSA</span><span class="params">(key)</span>:</span></span><br><span class="line">        train_idv_dpsa_temple_STD = BY_MONTH_DPSA[key].std(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_idv_dpsa_temple_STD.columns = [<span class="string">'CUST_NO'</span>, str(<span class="string">'IDV_DPSA_'</span>+key+<span class="string">'_STD'</span>)]</span><br><span class="line">        train_idv_dpsa_temple_MEAN = BY_MONTH_DPSA[key].mean(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_idv_dpsa_temple_MEAN.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'IDV_DPSA_'</span>+key+<span class="string">'_MEAN'</span>)]</span><br><span class="line">        train_idv_dpsa_temple_MAX = BY_MONTH_DPSA[key].max(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_idv_dpsa_temple_MAX.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'IDV_DPSA_'</span>+key+<span class="string">'_MAX'</span>)]</span><br><span class="line">        train_idv_dpsa_temple_MIN = BY_MONTH_DPSA[key].min(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_idv_dpsa_temple_MIN.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'IDV_DPSA_'</span>+key+<span class="string">'_MIN'</span>)]</span><br><span class="line">        <span class="comment"># 合并字段</span></span><br><span class="line">        train_idv_dpsa_temple = pd.merge(train_idv_dpsa_temple_STD, train_idv_dpsa_temple_MEAN, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        train_idv_dpsa_temple = pd.merge(train_idv_dpsa_temple, train_idv_dpsa_temple_MAX, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        train_idv_dpsa_temple = pd.merge(train_idv_dpsa_temple, train_idv_dpsa_temple_MIN, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        train_idv_dpsa_temple = train_idv_dpsa_temple.fillna(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> train_idv_dpsa_temple</span><br><span class="line">    train_idv_dpsa_temple = BY_MONTH_IDV_DPSA(<span class="string">'CRBAL'</span>)</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> [<span class="string">'ITST_BRNG_ACCM'</span>,<span class="string">'FRZ_TOT_AMT'</span>, <span class="string">'DAY_WD_ACT_AMT'</span>, <span class="string">'DAY_CSH_DP_SUM'</span>, </span><br><span class="line">              <span class="string">'DAY_CSH_WD_SUM'</span>,<span class="string">'DAY_TFI_SUM'</span>, <span class="string">'MOTH_CR_ACCM'</span>, <span class="string">'BEG_MOTH_CRBAL'</span>]:</span><br><span class="line">        train_idv_dpsa_temple = pd.merge(train_idv_dpsa_temple, BY_MONTH_IDV_DPSA(key))</span><br><span class="line">        train_idv_dpsa_temple.drop_duplicates(subset=<span class="keyword">None</span>, keep=<span class="string">'first'</span>, inplace=<span class="keyword">True</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> train_idv_dpsa_temple</span><br></pre></td></tr></table></figure><h5 id="交易信息"><a href="#交易信息" class="headerlink" title="交易信息"></a>交易信息</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">BY_MONTH_TR_DC_METHOD</span><span class="params">(dataset_TR_DC)</span>:</span></span><br><span class="line">    <span class="comment"># 预处理</span></span><br><span class="line">    <span class="comment"># 去除抹帐(1),无意义列，这里全是0</span></span><br><span class="line">    dataset_TR_DC = dataset_TR_DC[dataset_TR_DC[<span class="string">'CAN_IND'</span>]==<span class="number">0</span>].drop([<span class="string">'RED_BLU_CD'</span>, <span class="string">'CRD_TYP1'</span>, <span class="string">'TR_TYPE'</span>, <span class="string">'TR_CHANL_CD'</span>, <span class="string">'CAN_IND'</span>, </span><br><span class="line">                                                                      <span class="string">'CARD_USETYPE'</span>, <span class="string">'CARD_ELECASH'</span>, <span class="string">'CARD_MATERIAL'</span>],axis=<span class="number">1</span>)</span><br><span class="line">    dataset_TR_DC.drop_duplicates(subset=<span class="keyword">None</span>, keep=<span class="string">'first'</span>, inplace=<span class="keyword">True</span>)</span><br><span class="line">    <span class="comment"># 交易表时间段打上标签</span></span><br><span class="line">    <span class="comment"># 2月份 [3726432000, 3728937600), 3月份 [3728937600, 3731616000), 4月份 [3731616000, 3734035200]</span></span><br><span class="line">    dataset_TR_DC[<span class="string">'TR_DAT'</span>] = pd.cut(dataset_TR_DC[<span class="string">'TR_DAT'</span>], [<span class="number">3726432000</span>, <span class="number">3728937600</span>, <span class="number">3731616000</span>, <span class="number">3734035200</span>], labels=[<span class="string">'2月份'</span>, <span class="string">'3月份'</span>, <span class="string">'4月份'</span>])</span><br><span class="line">    <span class="comment"># 将交易按照 正 / 负 分开</span></span><br><span class="line">    train_tr_dc[<span class="string">'INCOME'</span>] = train_tr_dc[<span class="string">'TR_AMT'</span>] &gt; <span class="number">0</span></span><br><span class="line">    myseries = train_tr_dc.groupby([<span class="string">'CUST_NO'</span>, <span class="string">'INCOME'</span>])[<span class="string">'TR_AMT'</span>].sum()</span><br><span class="line">    myseries = myseries.unstack().fillna(<span class="number">0</span>)</span><br><span class="line">    TR_DC_IN_OUT = pd.DataFrame(myseries).reset_index()</span><br><span class="line">    TR_DC_IN_OUT[<span class="string">'IN_SUM'</span>] = TR_DC_IN_OUT[<span class="keyword">True</span>]</span><br><span class="line">    TR_DC_IN_OUT[<span class="string">'OUT_SUM'</span>] = TR_DC_IN_OUT[<span class="keyword">False</span>]</span><br><span class="line">    TR_DC_IN_OUT = TR_DC_IN_OUT.drop([<span class="keyword">True</span>, <span class="keyword">False</span>], axis=<span class="number">1</span>)</span><br><span class="line">    BY_MONTH_DC = dataset_TR_DC.groupby([<span class="string">'CUST_NO'</span>, <span class="string">'TR_DAT'</span>])[[<span class="string">'TR_AMT'</span>]].sum().unstack()</span><br><span class="line">    <span class="comment"># 声明函数 计算三个月的标准差、均值、最大值、最小值</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">BY_MONTH_TR_DC</span><span class="params">(key)</span>:</span></span><br><span class="line">        train_tr_dc_temple_STD = BY_MONTH_DC[key].std(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_tr_dc_temple_STD.columns = [<span class="string">'CUST_NO'</span>, str(<span class="string">'TR_DC_'</span>+key+<span class="string">'_STD'</span>)]</span><br><span class="line">        train_tr_dc_temple_MEAN = BY_MONTH_DC[key].mean(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_tr_dc_temple_MEAN.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'TR_DC_'</span>+key+<span class="string">'_MEAN'</span>)]</span><br><span class="line">        train_tr_dc_temple_MAX = BY_MONTH_DC[key].max(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_tr_dc_temple_MAX.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'TR_DC_'</span>+key+<span class="string">'_MAX'</span>)]</span><br><span class="line">        train_tr_dc_temple_MIN = BY_MONTH_DC[key].min(axis=<span class="number">1</span>).reset_index()</span><br><span class="line">        train_tr_dc_temple_MIN.columns = [<span class="string">'CUST_NO'</span>,str(<span class="string">'TR_DC_'</span>+key+<span class="string">'_MIN'</span>)]</span><br><span class="line">        <span class="comment"># 合并字段</span></span><br><span class="line">        train_tr_dc_temple = pd.merge(train_tr_dc_temple_STD, train_tr_dc_temple_MEAN, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        train_tr_dc_temple = pd.merge(train_tr_dc_temple, train_tr_dc_temple_MAX, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        train_tr_dc_temple = pd.merge(train_tr_dc_temple, train_tr_dc_temple_MIN, on=<span class="string">'CUST_NO'</span>, how=<span class="string">'inner'</span>)</span><br><span class="line">        train_tr_dc_temple = train_tr_dc_temple.fillna(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> train_tr_dc_temple</span><br><span class="line">    train_tr_dc_temple = BY_MONTH_TR_DC(<span class="string">'TR_AMT'</span>)</span><br><span class="line">    <span class="keyword">return</span> train_tr_dc_temple</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train_tr_dc[<span class="string">'TR_DAT'</span>] = pd.cut(train_tr_dc[<span class="string">'TR_DAT'</span>], [<span class="number">3726432000</span>, <span class="number">3728937600</span>, <span class="number">3731616000</span>, <span class="number">3734035200</span>], labels=[<span class="string">'FEB'</span>, <span class="string">'MAR'</span>, <span class="string">'APR'</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BY_MONTH_TR_DC_METHOD = train_tr_dc[[<span class="string">'TR_DAT'</span>]]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.countplot(x=<span class="string">'TR_DAT'</span>, data=BY_MONTH_TR_DC_METHOD)</span><br></pre></td></tr></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7f0167e23a58&gt;</code></pre><p><img src="/assets/blogImg/OUTPUT_COUNTPLOT.png" alt="COUNTPLOT"></p><h4 id="年龄"><a href="#年龄" class="headerlink" title="年龄"></a>年龄</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 返回单个 或 series 的ms对应日期, 再被 2015 减得到的年数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">adj_date</span><span class="params">(series, datatype=<span class="string">'series'</span>)</span>:</span></span><br><span class="line">    <span class="keyword">import</span> time</span><br><span class="line">    <span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line">    initial_year = <span class="number">2015</span></span><br><span class="line">    adj_msj_obj = datetime.strptime(<span class="string">"2042-08-31 16:00:00.123"</span>, <span class="string">"%Y-%m-%d %H:%M:%S.%f"</span>)</span><br><span class="line">    adj_ms = int(time.mktime(adj_msj_obj.timetuple())*<span class="number">1000</span> + adj_msj_obj.microsecond/<span class="number">1000.0</span>)/<span class="number">1000</span></span><br><span class="line">    current_ms = train_idv_cust_basic[<span class="string">'DATA_DAT'</span>][<span class="number">0</span>]   <span class="comment"># 3736713600</span></span><br><span class="line">    <span class="keyword">if</span>(datatype==<span class="string">'single'</span>):</span><br><span class="line">        <span class="keyword">return</span> initial_year - int(time.strftime(<span class="string">"%Y%m"</span>, time.localtime(current_ms-adj_ms)))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> series.map(<span class="keyword">lambda</span> x: initial_year - int(time.strftime(<span class="string">"%Y"</span>, time.localtime(x - adj_ms))) <span class="keyword">if</span> pd.notna(x) <span class="keyword">else</span> x)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 年龄计算函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CALC_AGE</span><span class="params">(dataset_idv_cust_basic)</span>:</span></span><br><span class="line">    dataset_idv_cust_basic[<span class="string">'GC_BRTH'</span>] = dataset_idv_cust_basic[<span class="string">'GC_BRTH'</span>].fillna(dataset_idv_cust_basic[<span class="string">'GC_BRTH'</span>].mean())</span><br><span class="line">    dataset_idv_cust_basic[<span class="string">'AGE'</span>] = adj_date(dataset_idv_cust_basic[<span class="string">'GC_BRTH'</span>])</span><br><span class="line">    dataset_idv_cust_basic[<span class="string">'AGE'</span>] = np.where(dataset_idv_cust_basic[<span class="string">'AGE'</span>] &gt; <span class="number">100</span>, <span class="number">31</span>, dataset_idv_cust_basic[<span class="string">'AGE'</span>])</span><br><span class="line">    dataset_idv_cust_basic[<span class="string">'AGE'</span>] = np.where(dataset_idv_cust_basic[<span class="string">'AGE'</span>] &lt; <span class="number">16</span>, <span class="number">31</span>, dataset_idv_cust_basic[<span class="string">'AGE'</span>])</span><br><span class="line">    <span class="keyword">return</span> dataset_idv_cust_basic</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AGE = CALC_AGE(train_idv_cust_basic)[<span class="string">'AGE'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AGE.hist()</span><br></pre></td></tr></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7f01681b5cc0&gt;/root/anaconda3/lib/python3.6/site-packages/matplotlib/font_manager.py:1320: UserWarning: findfont: Font family [&apos;sans-serif&apos;] not found. Falling back to DejaVu Sans  (prop.get_family(), self.defaultFamily[fontext]))</code></pre><p><img src="/assets/blogImg/OUTPUT_HIST.png" alt="HIST"></p><h4 id="所有资产"><a href="#所有资产" class="headerlink" title="所有资产"></a>所有资产</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># td定期、bond国债、fund基金、prec_metal贵金属、aget_insr保险</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">WEALTH</span><span class="params">(target,td,bond,fund,prec_metal,agent_insurance,thr_pty_cstd)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    # 销户日期必须 &gt; 2月底，合约建立日期必须 &lt; 4月底</span></span><br><span class="line"><span class="string">        #gp = df_tr_train.groupby(['CUST_NO','TR_CD']).agg(&#123;'TR_AMT':['sum','mean','max','min','count','std']&#125;)</span></span><br><span class="line"><span class="string">        if len(suffix)==1:</span></span><br><span class="line"><span class="string">            td = td[td['DATA_DAT']==time_point[1]]</span></span><br><span class="line"><span class="string">            bond = bond[bond['DATA_DAT']==time_point[1]]</span></span><br><span class="line"><span class="string">            fund = fund[fund['DATA_DAT']==time_point[1]]</span></span><br><span class="line"><span class="string">            prec_metal = prec_metal[prec_metal['DATA_DAT']==time_point[1]]</span></span><br><span class="line"><span class="string">            agent_insurance = agent_insurance[agent_insurance['DATA_DAT']==time_point[1]]</span></span><br><span class="line"><span class="string">            thr_pty_cstd = thr_pty_cstd[thr_pty_cstd['DATA_DAT']==time_point[1]]</span></span><br><span class="line"><span class="string">        elif len(suffix)==2:</span></span><br><span class="line"><span class="string">            td = td[td['DATA_DAT']&gt;time_point[1]]</span></span><br><span class="line"><span class="string">            bond = bond[bond['DATA_DAT']&gt;time_point[1]]</span></span><br><span class="line"><span class="string">            fund = fund[fund['DATA_DAT']&gt;time_point[1]]</span></span><br><span class="line"><span class="string">            prec_metal = prec_metal[prec_metal['DATA_DAT']&gt;time_point[1]]</span></span><br><span class="line"><span class="string">            agent_insurance = agent_insurance[agent_insurance['DATA_DAT']&gt;time_point[1]]</span></span><br><span class="line"><span class="string">            thr_pty_cstd = thr_pty_cstd[thr_pty_cstd['DATA_DAT']&gt;time_point[1]]</span></span><br><span class="line"><span class="string">    '''</span>        </span><br><span class="line">            </span><br><span class="line">    <span class="comment"># 选取各表合并特征</span></span><br><span class="line">    td = td[[<span class="string">'CUST_NO'</span>,<span class="string">'DATA_DAT'</span>,<span class="string">'CRBAL'</span>,<span class="string">'MOTH_CR_ACCM'</span>]].groupby([<span class="string">'CUST_NO'</span>,<span class="string">'DATA_DAT'</span>]).sum().unstack().reset_index()</span><br><span class="line">    </span><br><span class="line">    bond = bond[[<span class="string">'CUST_NO'</span>,<span class="string">'DATA_DAT'</span>,<span class="string">'ARG_CUR_BAL'</span>,<span class="string">'NVTA_MOTH_ACCM'</span>]].groupby([<span class="string">'CUST_NO'</span>,<span class="string">'DATA_DAT'</span>]).sum().unstack().reset_index()</span><br><span class="line">    </span><br><span class="line">    fund = fund[[<span class="string">'CUST_NO'</span>,<span class="string">'DATA_DAT'</span>,<span class="string">'FUND_BAL'</span>,<span class="string">'FUND_BAL_MOTH_BAL_ACCM'</span>]].groupby([<span class="string">'CUST_NO'</span>,<span class="string">'DATA_DAT'</span>]).sum().unstack().reset_index()</span><br><span class="line">    </span><br><span class="line">    prec_metal = prec_metal[[<span class="string">'CUST_NO'</span>,<span class="string">'DATA_DAT'</span>,<span class="string">'ARG_BAL'</span>,<span class="string">'MTH_ARG_ACCM'</span>]].groupby([<span class="string">'CUST_NO'</span>,<span class="string">'DATA_DAT'</span>]).sum().unstack().reset_index()</span><br><span class="line">    </span><br><span class="line">    agent_insurance = agent_insurance[[<span class="string">'CUST_NO'</span>,<span class="string">'DATA_DAT'</span>,<span class="string">'BEG_MTH_PREM_BAL'</span>,<span class="string">'MTH_PREM_ACCM'</span>]].groupby([<span class="string">'CUST_NO'</span>,<span class="string">'DATA_DAT'</span>]).sum().unstack().reset_index()</span><br><span class="line">    </span><br><span class="line">    thr_pty_cstd = thr_pty_cstd[[<span class="string">'CUST_NO'</span>,<span class="string">'DATA_DAT'</span>,<span class="string">'AVL_BAL'</span>,<span class="string">'MTH_ARG_BAL_ACCM'</span>]].groupby([<span class="string">'CUST_NO'</span>,<span class="string">'DATA_DAT'</span>]).sum().unstack().reset_index()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 理财各月的金额、持有产品的数量、</span></span><br><span class="line">    wealth = pd.merge(target[[<span class="string">'CUST_NO'</span>]],td,on=[<span class="string">'CUST_NO'</span>],how=<span class="string">'outer'</span>)</span><br><span class="line">    wealth = pd.merge(wealth,bond,on=[<span class="string">'CUST_NO'</span>],how=<span class="string">'outer'</span>)</span><br><span class="line">    wealth = pd.merge(wealth,fund,on=[<span class="string">'CUST_NO'</span>],how=<span class="string">'outer'</span>)</span><br><span class="line">    wealth = pd.merge(wealth,prec_metal,on=[<span class="string">'CUST_NO'</span>],how=<span class="string">'outer'</span>)</span><br><span class="line">    wealth = pd.merge(wealth,thr_pty_cstd,on=[<span class="string">'CUST_NO'</span>],how=<span class="string">'outer'</span>)</span><br><span class="line">    wealth = pd.merge(wealth,agent_insurance,on=[<span class="string">'CUST_NO'</span>],how=<span class="string">'outer'</span>).fillna(<span class="number">0</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 理财各月的金额、持有产品的数量、</span></span><br><span class="line">    <span class="comment">#wealth['WEALTH_BAL'] = wealth['CRBAL'] + wealth['ARG_CUR_BAL'] + wealth['FUND_BAL'] + wealth['ARG_BAL'] + wealth['BEG_MTH_PREM_BAL'] #+ wealth['AVL_BAL']</span></span><br><span class="line">    <span class="comment">#wealth['WEALTH_ACCM'] = wealth['MOTH_CR_ACCM'] + wealth['NVTA_MOTH_ACCM'] + wealth['FUND_BAL_MOTH_BAL_ACCM'] + wealth['MTH_ARG_ACCM'] + wealth['MTH_PREM_ACCM'] #+ wealth['MTH_ARG_BAL_ACCM']</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">#wealth = wealth.groupby(['CUST_NO'])['WEALTH_BAL','WEALTH_ACCM'].sum().reset_index()</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 持有的理财产品种类（不同期限/合约建立日期、相同品种的算不同产品）</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 首份理财合约建立时间、最近一份理财合约建立时间</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 3个月内买入理财产品次数</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 3个月存款积数之和（活期，活期+定期+三方存管）</span></span><br><span class="line">    X = wealth.copy()</span><br><span class="line">    X[<span class="string">'WEALTH_BAL_1'</span>] = X[(<span class="string">'CRBAL'</span>, <span class="number">3728764800</span>)]+X[(<span class="string">'ARG_CUR_BAL'</span>, <span class="number">3728764800</span>)]+X[(<span class="string">'FUND_BAL'</span>, <span class="number">3728764800</span>)]+X[(<span class="string">'ARG_BAL'</span>, <span class="number">3728764800</span>)]+X[(<span class="string">'AVL_BAL'</span>, <span class="number">3728764800</span>)]+X[(<span class="string">'BEG_MTH_PREM_BAL'</span>, <span class="number">3728764800</span>)]</span><br><span class="line">    X[<span class="string">'WEALTH_BAL_2'</span>] = X[(<span class="string">'CRBAL'</span>, <span class="number">3731443200</span>)]+X[(<span class="string">'ARG_CUR_BAL'</span>, <span class="number">3731443200</span>)]+X[(<span class="string">'FUND_BAL'</span>, <span class="number">3731443200</span>)]+X[(<span class="string">'ARG_BAL'</span>, <span class="number">3731443200</span>)]+X[(<span class="string">'AVL_BAL'</span>, <span class="number">3731443200</span>)]+X[(<span class="string">'BEG_MTH_PREM_BAL'</span>, <span class="number">3731443200</span>)]</span><br><span class="line">    X[<span class="string">'WEALTH_BAL_3'</span>] = X[(<span class="string">'CRBAL'</span>, <span class="number">3734035200</span>)]+X[(<span class="string">'ARG_CUR_BAL'</span>, <span class="number">3734035200</span>)]+X[(<span class="string">'FUND_BAL'</span>, <span class="number">3734035200</span>)]+X[(<span class="string">'ARG_BAL'</span>, <span class="number">3734035200</span>)]+X[(<span class="string">'AVL_BAL'</span>, <span class="number">3734035200</span>)]+X[(<span class="string">'BEG_MTH_PREM_BAL'</span>, <span class="number">3734035200</span>)]</span><br><span class="line">    X[<span class="string">'WEALTH_ACCM_1'</span>] = X[(<span class="string">'MOTH_CR_ACCM'</span>, <span class="number">3728764800</span>)]+X[(<span class="string">'NVTA_MOTH_ACCM'</span>, <span class="number">3728764800</span>)]+X[(<span class="string">'FUND_BAL_MOTH_BAL_ACCM'</span>, <span class="number">3728764800</span>)]+X[(<span class="string">'MTH_ARG_ACCM'</span>, <span class="number">3728764800</span>)]+X[(<span class="string">'MTH_ARG_BAL_ACCM'</span>, <span class="number">3728764800</span>)]+X[(<span class="string">'MTH_PREM_ACCM'</span>, <span class="number">3728764800</span>)]</span><br><span class="line">    X[<span class="string">'WEALTH_ACCM_2'</span>] = X[(<span class="string">'MOTH_CR_ACCM'</span>, <span class="number">3731443200</span>)]+X[(<span class="string">'NVTA_MOTH_ACCM'</span>, <span class="number">3731443200</span>)]+X[(<span class="string">'FUND_BAL_MOTH_BAL_ACCM'</span>, <span class="number">3731443200</span>)]+X[(<span class="string">'MTH_ARG_ACCM'</span>, <span class="number">3731443200</span>)]+X[(<span class="string">'MTH_ARG_BAL_ACCM'</span>, <span class="number">3731443200</span>)]+X[(<span class="string">'MTH_PREM_ACCM'</span>, <span class="number">3731443200</span>)]</span><br><span class="line">    X[<span class="string">'WEALTH_ACCM_3'</span>] = X[(<span class="string">'MOTH_CR_ACCM'</span>, <span class="number">3734035200</span>)]+X[(<span class="string">'NVTA_MOTH_ACCM'</span>, <span class="number">3734035200</span>)]+X[(<span class="string">'FUND_BAL_MOTH_BAL_ACCM'</span>, <span class="number">3734035200</span>)]+X[(<span class="string">'MTH_ARG_ACCM'</span>, <span class="number">3734035200</span>)]+X[(<span class="string">'MTH_ARG_BAL_ACCM'</span>, <span class="number">3734035200</span>)]+X[(<span class="string">'MTH_PREM_ACCM'</span>, <span class="number">3734035200</span>)]</span><br><span class="line">    </span><br><span class="line">    X2 = X[[<span class="string">'CUST_NO'</span>,<span class="string">'WEALTH_BAL_1'</span>,<span class="string">'WEALTH_BAL_2'</span>,<span class="string">'WEALTH_BAL_3'</span>,<span class="string">'WEALTH_ACCM_1'</span>,<span class="string">'WEALTH_ACCM_2'</span>,<span class="string">'WEALTH_ACCM_3'</span>]].set_index(<span class="string">'CUST_NO'</span>)</span><br><span class="line">    </span><br><span class="line">    X2[<span class="string">'WEALTH_BAL_MAX'</span>] = X2[[<span class="string">'WEALTH_BAL_1'</span>,<span class="string">'WEALTH_BAL_2'</span>,<span class="string">'WEALTH_BAL_3'</span>]].max(axis=<span class="number">1</span>)</span><br><span class="line">    X2[<span class="string">'WEALTH_BAL_MEAN'</span>] = X2[[<span class="string">'WEALTH_BAL_1'</span>,<span class="string">'WEALTH_BAL_2'</span>,<span class="string">'WEALTH_BAL_3'</span>]].mean(axis=<span class="number">1</span>)</span><br><span class="line">    X2[<span class="string">'WEALTH_BAL_STD'</span>] = X2[[<span class="string">'WEALTH_BAL_1'</span>,<span class="string">'WEALTH_BAL_2'</span>,<span class="string">'WEALTH_BAL_3'</span>]].std(axis=<span class="number">1</span>).fillna(<span class="number">0.0</span>)</span><br><span class="line">    X2[<span class="string">'WEALTH_BAL_CV'</span>] = X2[<span class="string">'WEALTH_BAL_STD'</span>]/X2[<span class="string">'WEALTH_BAL_MEAN'</span>]</span><br><span class="line">    X2[<span class="string">'WEALTH_ACCM_MAX'</span>] = X2[[<span class="string">'WEALTH_ACCM_1'</span>,<span class="string">'WEALTH_ACCM_2'</span>,<span class="string">'WEALTH_ACCM_3'</span>]].max(axis=<span class="number">1</span>)</span><br><span class="line">    X2[<span class="string">'WEALTH_ACCM_MEAN'</span>] = X2[[<span class="string">'WEALTH_ACCM_1'</span>,<span class="string">'WEALTH_ACCM_2'</span>,<span class="string">'WEALTH_ACCM_3'</span>]].mean(axis=<span class="number">1</span>)</span><br><span class="line">    X2[<span class="string">'WEALTH_ACCM_STD'</span>] = X2[[<span class="string">'WEALTH_ACCM_1'</span>,<span class="string">'WEALTH_ACCM_2'</span>,<span class="string">'WEALTH_ACCM_3'</span>]].std(axis=<span class="number">1</span>).fillna(<span class="number">0.0</span>)</span><br><span class="line">    X2[<span class="string">'WEALTH_ACCM_CV'</span>] = X2[<span class="string">'WEALTH_ACCM_STD'</span>]/X2[<span class="string">'WEALTH_ACCM_MEAN'</span>]    </span><br><span class="line">    </span><br><span class="line">    X3 = X2.fillna(<span class="number">0.0</span>).drop([<span class="string">'WEALTH_BAL_1'</span>,<span class="string">'WEALTH_BAL_2'</span>,<span class="string">'WEALTH_BAL_3'</span>,<span class="string">'WEALTH_ACCM_1'</span>,<span class="string">'WEALTH_ACCM_2'</span>,<span class="string">'WEALTH_ACCM_3'</span>,<span class="string">'WEALTH_BAL_STD'</span>,<span class="string">'WEALTH_ACCM_STD'</span>],axis=<span class="number">1</span>).reset_index()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> X3[[<span class="string">'CUST_NO'</span>,<span class="string">'WEALTH_ACCM_MEAN'</span>,<span class="string">'WEALTH_ACCM_CV'</span>]]</span><br></pre></td></tr></table></figure><h3 id="结果挖掘"><a href="#结果挖掘" class="headerlink" title="结果挖掘"></a>结果挖掘</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">train_cust_result_1 = train_cust_result[train_cust_result[<span class="string">'FLAG'</span>]==<span class="number">1</span>]</span><br><span class="line">train_cust_result_0 = train_cust_result[train_cust_result[<span class="string">'FLAG'</span>]==<span class="number">0</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lightgbm <span class="keyword">import</span> LGBMRegressor</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">! pip install lightgbm<span class="number">-2.2</span><span class="number">.3</span>-py2.py3-none-manylinux1_x86_64.whl</span><br></pre></td></tr></table></figure><pre><code>Processing ./lightgbm-2.2.3-py2.py3-none-manylinux1_x86_64.whlRequirement already satisfied: scikit-learn in /root/anaconda3/lib/python3.6/site-packages (from lightgbm==2.2.3)Requirement already satisfied: scipy in /root/anaconda3/lib/python3.6/site-packages (from lightgbm==2.2.3)Requirement already satisfied: numpy in /root/anaconda3/lib/python3.6/site-packages (from lightgbm==2.2.3)Installing collected packages: lightgbmSuccessfully installed lightgbm-2.2.3</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">! cp ./xgb_rfm-Copy1.ipynb ./xgb_rfm-Copy2.ipynb</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">! pip install imbalanced-learn</span><br></pre></td></tr></table></figure><pre><code>Requirement already satisfied: imbalanced-learn in /root/anaconda3/lib/python3.6/site-packagesRequirement already satisfied: scipy&gt;=0.17 in /root/anaconda3/lib/python3.6/site-packages (from imbalanced-learn)Requirement already satisfied: joblib&gt;=0.11 in /root/anaconda3/lib/python3.6/site-packages (from imbalanced-learn)Requirement already satisfied: scikit-learn&gt;=0.21 in /root/anaconda3/lib/python3.6/site-packages (from imbalanced-learn)Requirement already satisfied: numpy&gt;=1.11 in /root/anaconda3/lib/python3.6/site-packages (from imbalanced-learn)</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;もう一回もう一回行こうぜ 僕らの声&lt;/p&gt;
&lt;p&gt;アイムアルーザー ずっと前から聞こえてた&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="https://www.leezy.top/tags/Python/"/>
    
      <category term="数据挖掘" scheme="https://www.leezy.top/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
  </entry>
  
  <entry>
    <title>CentOS安装MySQL 8.0</title>
    <link href="https://www.leezy.top/2019/02/27/CentOS%E5%AE%89%E8%A3%85MySQL8/"/>
    <id>https://www.leezy.top/2019/02/27/CentOS安装MySQL8/</id>
    <published>2019-02-27T08:22:21.000Z</published>
    <updated>2019-12-12T09:57:13.057Z</updated>
    
    <content type="html"><![CDATA[<p>CentOS MySQL的安装和配置记录。</p><a id="more"></a><h3 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h3><ol><li><p>打开官网  <a href="https://dev.mysql.com/downloads/repo/yum/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/repo/yum/</a> 下载(mysql80-community-release-el7-2.noarch.rpm)rpm文件</p></li><li><p>通过 WinSCP将文件上传至 /usr/ 目录下</p></li><li><p>本地安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mysql80-community-release-el7-2.noarch.rpm</span><br></pre></td></tr></table></figure></li><li><p>查看MySQL 的所有版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum repolist all | grep mysql</span><br></pre></td></tr></table></figure></li><li><p>默认会下载最新的版本，可以通过</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --disable mysql80-community</span><br><span class="line">sudo yum-config-manager --enable mysql57-community</span><br></pre></td></tr></table></figure></li></ol><p>来调整默认版本， 也可以通过修改 /etc/yum.repos.d/mysql-community.repo 中enabled的值(1 或 0)来进行修改。<br>6. 安装MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install mysql-community-server</span><br></pre></td></tr></table></figure><ol start="7"><li><p>启动MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mysqld start</span><br></pre></td></tr></table></figure></li><li><p>用临时密码登录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> sudo grep 'temporary password' /var/log/mysqld.log</span><br><span class="line"> mysql -uroot -p</span><br><span class="line"><span class="meta"> #</span> 修改密码</span><br><span class="line"> ALTER USER 'root'@'localhost' IDENTIFIED BY 'MyNewPass4!';</span><br><span class="line"><span class="meta">#</span> 查看MySQL版本</span><br><span class="line"> SHOW VARIABLES WHERE Variable_name = 'version';</span><br></pre></td></tr></table></figure></li><li><p>允许远程连接MySQL数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 首先确保3306端口开放</span><br><span class="line">user mysql</span><br><span class="line"><span class="meta">#</span> 创建用户</span><br><span class="line">CREATE USER 'myuser'@'%' IDENTIFIED BY 'password';  (myuser 和 password 替换)</span><br><span class="line">GRANT ALL ON *.* TO 'myuser'@'%' WITH GRANT OPTION; (myuser 替换)</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CentOS MySQL的安装和配置记录。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://www.leezy.top/tags/Linux/"/>
    
      <category term="MySQL" scheme="https://www.leezy.top/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Shiro 安全框架学习笔记</title>
    <link href="https://www.leezy.top/2019/02/26/Shiro%E5%AE%89%E5%85%A8%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/"/>
    <id>https://www.leezy.top/2019/02/26/Shiro安全框架简介/</id>
    <published>2019-02-26T13:41:21.000Z</published>
    <updated>2019-09-18T12:12:30.741Z</updated>
    
    <content type="html"><![CDATA[<p>记录我学习安全框架Shiro的一些笔记。</p><a id="more"></a><h3 id="Shiro-VS-Spring-Security"><a href="#Shiro-VS-Spring-Security" class="headerlink" title="Shiro VS Spring Security"></a>Shiro VS Spring Security</h3><p>Apache Shiro<br>简单灵活，可脱离Spring，粒度较粗；可以自己拓展，适合通过资源进行权限控制；<br>Spring Security<br>复杂笨重，不可脱离Spring，力度更细；适合做数据权限控制；</p><h3 id="Shiro的认证过程"><a href="#Shiro的认证过程" class="headerlink" title="Shiro的认证过程"></a>Shiro的认证过程</h3><ol><li>创建Security Manager</li><li>主体提交认证</li><li>Security Manager认证</li><li>Authenticator认证</li><li>Realm认证</li></ol><p>代码如下：<br>java代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leezy.shiro.shirotest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.DefaultSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.SimpleAccountRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthenticationTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">SimpleAccountRealm simpleAccountRealm = <span class="keyword">new</span> SimpleAccountRealm();</span><br><span class="line"></span><br><span class="line"><span class="meta">@Before</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">simpleAccountRealm.addAccount(<span class="string">"LEEZY"</span>, <span class="string">"123456"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAuthentication</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 1. 构建SecurityManager环境</span></span><br><span class="line">DefaultSecurityManager defaultSecurityManager = <span class="keyword">new</span> DefaultSecurityManager();</span><br><span class="line"><span class="comment">// 将SimpleAccountRealm设置到环境变量中来</span></span><br><span class="line">defaultSecurityManager.setRealm(simpleAccountRealm);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 主体提交认证请求</span></span><br><span class="line">SecurityUtils.setSecurityManager(defaultSecurityManager);</span><br><span class="line">Subject subject = SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line">UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">"LEEZY"</span>, <span class="string">"123456"</span>);</span><br><span class="line">subject.login(token);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"isAuthenticated: "</span> + subject.isAuthenticated());</span><br><span class="line">subject.isAuthenticated();</span><br><span class="line"></span><br><span class="line">subject.logout();</span><br><span class="line">System.out.println(<span class="string">"isAuthenticated: "</span> + subject.isAuthenticated());</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>pom文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.leezy.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shirotest<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>shirotest<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.apache.org<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>/.</span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Shiro授权"><a href="#Shiro授权" class="headerlink" title="Shiro授权"></a>Shiro授权</h3><ol><li>创建 Security Manager</li><li>主体授权</li><li>Security Manager 授权</li><li>Authorizer认证</li><li>Realm 获取角色权限数据</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leezy.shiro.shirotest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.DefaultSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.SimpleAccountRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthenticationTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">SimpleAccountRealm simpleAccountRealm = <span class="keyword">new</span> SimpleAccountRealm();</span><br><span class="line"></span><br><span class="line"><span class="meta">@Before</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">simpleAccountRealm.addAccount(<span class="string">"LEEZY"</span>, <span class="string">"123456"</span>, <span class="string">"admin"</span>, <span class="string">"user"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAuthentication</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 1. 构建SecurityManager环境</span></span><br><span class="line">DefaultSecurityManager defaultSecurityManager = <span class="keyword">new</span> DefaultSecurityManager();</span><br><span class="line"><span class="comment">// 将SimpleAccountRealm设置到环境变量中来</span></span><br><span class="line">defaultSecurityManager.setRealm(simpleAccountRealm);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 主体提交认证请求</span></span><br><span class="line">SecurityUtils.setSecurityManager(defaultSecurityManager);</span><br><span class="line">Subject subject = SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line">UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">"LEEZY"</span>, <span class="string">"123456"</span>);</span><br><span class="line">subject.login(token);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"isAuthenticated: "</span> + subject.isAuthenticated());</span><br><span class="line">subject.isAuthenticated();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查一个角色</span></span><br><span class="line"><span class="comment">// subject.checkRole("admin");</span></span><br><span class="line"><span class="comment">// 检查是否具备参数里所有的角色，通过遍历参数来进行授权</span></span><br><span class="line">subject.checkRoles(<span class="string">"admin"</span>, <span class="string">"user"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="InitRealm的使用"><a href="#InitRealm的使用" class="headerlink" title="InitRealm的使用"></a>InitRealm的使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leezy.shiro.shirotest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.DefaultSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.text.IniRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InitRealmTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAuthentication</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">IniRealm iniRealm = <span class="keyword">new</span> IniRealm(<span class="string">"classpath:user.ini"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 构建SecurityManager环境</span></span><br><span class="line">DefaultSecurityManager defaultSecurityManager = <span class="keyword">new</span> DefaultSecurityManager();</span><br><span class="line">defaultSecurityManager.setRealm(iniRealm);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 主体提交认证请求</span></span><br><span class="line">SecurityUtils.setSecurityManager(defaultSecurityManager);</span><br><span class="line">Subject subject = SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line">UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">"LEEZY"</span>, <span class="string">"123456"</span>);</span><br><span class="line">subject.login(token);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"isAuthenticated: "</span> + subject.isAuthenticated());</span><br><span class="line"></span><br><span class="line">subject.checkRole(<span class="string">"admin"</span>);</span><br><span class="line"></span><br><span class="line">subject.checkPermission(<span class="string">"user:delete"</span>);</span><br><span class="line">subject.checkPermission(<span class="string">"user:update"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>user.ini</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[users]</span></span><br><span class="line"><span class="attr">LEEZY</span>=<span class="number">123456</span>,admin</span><br><span class="line"><span class="section">[roles]</span></span><br><span class="line"><span class="attr">admin</span>=user:delete,user:update</span><br></pre></td></tr></table></figure><h3 id="JDBCRealm的使用"><a href="#JDBCRealm的使用" class="headerlink" title="JDBCRealm的使用"></a>JDBCRealm的使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leezy.shiro.shirotest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.DefaultSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.jdbc.JdbcRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcRealmTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">DruidDataSource dataSource = <span class="keyword">new</span> DruidDataSource();</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">dataSource.setUrl(<span class="string">"jdbc:mysql://192.168.56.101:3306/test"</span>);</span><br><span class="line">dataSource.setUsername(<span class="string">"root"</span>);</span><br><span class="line">dataSource.setPassword(<span class="string">"Zdh!123456"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAuthentication</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">JdbcRealm jdbcRealm = <span class="keyword">new</span> JdbcRealm();</span><br><span class="line">jdbcRealm.setDataSource(dataSource);</span><br><span class="line"><span class="comment">// 开启后才可以进行权限认证(默认关闭)</span></span><br><span class="line">jdbcRealm.setPermissionsLookupEnabled(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">String select_sql = <span class="string">"select password from test_user where username = ?"</span>;</span><br><span class="line">jdbcRealm.setAuthenticationQuery(select_sql);</span><br><span class="line"></span><br><span class="line">String role_sql = <span class="string">"select role_name from test_user_role where user_name = ?"</span>;</span><br><span class="line">jdbcRealm.setUserRolesQuery(role_sql);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 构建SecurityManager环境</span></span><br><span class="line">DefaultSecurityManager defaultSecurityManager = <span class="keyword">new</span> DefaultSecurityManager();</span><br><span class="line">defaultSecurityManager.setRealm(jdbcRealm);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 主体提交认证请求</span></span><br><span class="line">SecurityUtils.setSecurityManager(defaultSecurityManager);</span><br><span class="line">Subject subject = SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line">UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">"SAKURA"</span>, <span class="string">"123456"</span>);</span><br><span class="line">subject.login(token);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"isAuthenticated: "</span> + subject.isAuthenticated());</span><br><span class="line"></span><br><span class="line">subject.checkRole(<span class="string">"admin"</span>);</span><br><span class="line"></span><br><span class="line">subject.checkPermission(<span class="string">"user:select"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- MySQL驱动包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 数据源 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.14<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>查看JdbcRealm源码可以发现，它有默认的SQL查询语句，只要建立相应的数据表就可以。</p><h3 id="自定义Realm"><a href="#自定义Realm" class="headerlink" title="自定义Realm"></a>自定义Realm</h3><p>自定义Realm继承AuthorizingRealm</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leezy.shiro.realm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.SimpleAuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.AuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.SimpleAuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.AuthorizingRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.PrincipalCollection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span></span>&#123;</span><br><span class="line">Map&lt;String, String&gt; userMap = <span class="keyword">new</span> HashMap&lt;String, String&gt;(<span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">userMap.put(<span class="string">"LEEZY"</span>, <span class="string">"123456"</span>);</span><br><span class="line"><span class="keyword">super</span>.setName(<span class="string">"CustomRealm"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 授权</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principals)</span> </span>&#123;</span><br><span class="line">String username = (String) principals.getPrimaryPrincipal();</span><br><span class="line"><span class="comment">// 从数据库或者缓存中获取角色数据</span></span><br><span class="line">Set&lt;String&gt; roles = getRolesByUserName(username);</span><br><span class="line"></span><br><span class="line">Set&lt;String&gt; permissions = getPermissionsByUserName(username);</span><br><span class="line">SimpleAuthorizationInfo info = <span class="keyword">new</span> SimpleAuthorizationInfo();</span><br><span class="line">info.setRoles(roles);</span><br><span class="line">info.setStringPermissions(permissions);</span><br><span class="line"><span class="keyword">return</span> info;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 认证</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken token)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1 从主体传过来的认证信息中获得用户名</span></span><br><span class="line">String username = (String) token.getPrincipal();</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.通过用户名到数据库中获取凭证</span></span><br><span class="line">String password = getPasswordByUserName(username);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(password == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SimpleAuthenticationInfo authenticationInfo = <span class="keyword">new</span> SimpleAuthenticationInfo(<span class="string">"LEEZY"</span>, password, <span class="string">"CustomRealm"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> authenticationInfo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 模拟数据库中权限查询</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> Set&lt;String&gt; <span class="title">getPermissionsByUserName</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">Set&lt;String&gt; sets = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">sets.add(<span class="string">"user:delete"</span>);</span><br><span class="line">sets.add(<span class="string">"user:add"</span>);</span><br><span class="line"><span class="keyword">return</span> sets;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 模拟数据库中角色查询</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getRolesByUserName</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">Set&lt;String&gt; sets = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">sets.add(<span class="string">"admin"</span>);</span><br><span class="line">sets.add(<span class="string">"user"</span>);</span><br><span class="line"><span class="keyword">return</span> sets;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 模拟数据库的查询凭证</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">getPasswordByUserName</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> userMap.get(username);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leezy.shiro.shirotest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.DefaultSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.leezy.shiro.realm.CustomRealm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomRealmTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAuthentication</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">CustomRealm customRealm = <span class="keyword">new</span> CustomRealm();</span><br><span class="line"><span class="comment">// 1. 构建SecurityManager环境</span></span><br><span class="line">DefaultSecurityManager defaultSecurityManager = <span class="keyword">new</span> DefaultSecurityManager();</span><br><span class="line">defaultSecurityManager.setRealm(customRealm);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 主体提交认证请求</span></span><br><span class="line">SecurityUtils.setSecurityManager(defaultSecurityManager);</span><br><span class="line">Subject subject = SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line">UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">"LEEZY"</span>, <span class="string">"123456"</span>);</span><br><span class="line">subject.login(token);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"isAuthenticated: "</span> + subject.isAuthenticated());</span><br><span class="line"></span><br><span class="line">subject.checkRole(<span class="string">"admin"</span>);</span><br><span class="line"></span><br><span class="line">subject.checkPermission(<span class="string">"user:delete"</span>);</span><br><span class="line">subject.checkPermission(<span class="string">"user:add"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Shiro加密"><a href="#Shiro加密" class="headerlink" title="Shiro加密"></a>Shiro加密</h3><p>Shiro加密方式：</p><ol><li>HashedCredentialsMatcher</li><li>自定义Realm中使用散列</li><li>盐的使用</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leezy.shiro.realm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.SimpleAuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.AuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.SimpleAuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.crypto.hash.Md5Hash;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.AuthorizingRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.PrincipalCollection;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.ByteSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span></span>&#123;</span><br><span class="line">Map&lt;String, String&gt; userMap = <span class="keyword">new</span> HashMap&lt;String, String&gt;(<span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 使用加密之后的密文</span></span><br><span class="line">userMap.put(<span class="string">"LEEZY"</span>, <span class="string">"e43a7da8514a1c9d566164b3ea731a4a"</span>);</span><br><span class="line"><span class="keyword">super</span>.setName(<span class="string">"CustomRealm"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 授权</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principals)</span> </span>&#123;</span><br><span class="line">String username = (String) principals.getPrimaryPrincipal();</span><br><span class="line"><span class="comment">// 从数据库或者缓存中获取角色数据</span></span><br><span class="line">Set&lt;String&gt; roles = getRolesByUserName(username);</span><br><span class="line"></span><br><span class="line">Set&lt;String&gt; permissions = getPermissionsByUserName(username);</span><br><span class="line">SimpleAuthorizationInfo info = <span class="keyword">new</span> SimpleAuthorizationInfo();</span><br><span class="line">info.setRoles(roles);</span><br><span class="line">info.setStringPermissions(permissions);</span><br><span class="line"><span class="keyword">return</span> info;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 认证</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken token)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1 从主体传过来的认证信息中获得用户名</span></span><br><span class="line">String username = (String) token.getPrincipal();</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.通过用户名到数据库中获取凭证</span></span><br><span class="line">String password = getPasswordByUserName(username);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(password == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SimpleAuthenticationInfo authenticationInfo = <span class="keyword">new</span> SimpleAuthenticationInfo(<span class="string">"LEEZY"</span>, password, <span class="string">"CustomRealm"</span>);</span><br><span class="line"><span class="comment">// 将盐设置进去</span></span><br><span class="line">authenticationInfo.setCredentialsSalt(ByteSource.Util.bytes(<span class="string">"SAKURA"</span>));</span><br><span class="line"><span class="keyword">return</span> authenticationInfo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 模拟数据库中权限查询</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> Set&lt;String&gt; <span class="title">getPermissionsByUserName</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">Set&lt;String&gt; sets = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">sets.add(<span class="string">"user:delete"</span>);</span><br><span class="line">sets.add(<span class="string">"user:add"</span>);</span><br><span class="line"><span class="keyword">return</span> sets;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 模拟数据库中角色查询</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getRolesByUserName</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">Set&lt;String&gt; sets = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">sets.add(<span class="string">"admin"</span>);</span><br><span class="line">sets.add(<span class="string">"user"</span>);</span><br><span class="line"><span class="keyword">return</span> sets;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 模拟数据库的查询凭证</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">getPasswordByUserName</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> userMap.get(username);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// MD5 + 加盐</span></span><br><span class="line">Md5Hash md5Hash = <span class="keyword">new</span> Md5Hash(<span class="string">"123456"</span>, <span class="string">"SAKURA"</span>);</span><br><span class="line">System.out.println(md5Hash.toString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leezy.shiro.shirotest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.credential.HashedCredentialsMatcher;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.DefaultSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.leezy.shiro.realm.CustomRealm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomRealmTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAuthentication</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">CustomRealm customRealm = <span class="keyword">new</span> CustomRealm();</span><br><span class="line"><span class="comment">// 1. 构建SecurityManager环境</span></span><br><span class="line">DefaultSecurityManager defaultSecurityManager = <span class="keyword">new</span> DefaultSecurityManager();</span><br><span class="line">defaultSecurityManager.setRealm(customRealm);</span><br><span class="line"></span><br><span class="line">HashedCredentialsMatcher matcher = <span class="keyword">new</span> HashedCredentialsMatcher();</span><br><span class="line"><span class="comment">// 设置加密方式</span></span><br><span class="line">matcher.setHashAlgorithmName(<span class="string">"md5"</span>);</span><br><span class="line"><span class="comment">// 设置加密次数</span></span><br><span class="line">matcher.setHashIterations(<span class="number">1</span>);</span><br><span class="line">customRealm.setCredentialsMatcher(matcher);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 主体提交认证请求</span></span><br><span class="line">SecurityUtils.setSecurityManager(defaultSecurityManager);</span><br><span class="line">Subject subject = SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line">UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">"LEEZY"</span>, <span class="string">"123456"</span>);</span><br><span class="line">subject.login(token);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"isAuthenticated: "</span> + subject.isAuthenticated());</span><br><span class="line"></span><br><span class="line">subject.checkRole(<span class="string">"admin"</span>);</span><br><span class="line"></span><br><span class="line">subject.checkPermission(<span class="string">"user:delete"</span>);</span><br><span class="line">subject.checkPermission(<span class="string">"user:add"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Shiro集成Spring"><a href="#Shiro集成Spring" class="headerlink" title="Shiro集成Spring"></a>Shiro集成Spring</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录我学习安全框架Shiro的一些笔记。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="SHIRO" scheme="https://www.leezy.top/tags/SHIRO/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7 及 Ubuntu18 常用命令总结</title>
    <link href="https://www.leezy.top/2019/02/03/CentOS7%20%E5%8F%8A%20Ubuntu18%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/"/>
    <id>https://www.leezy.top/2019/02/03/CentOS7 及 Ubuntu18 常用命令总结/</id>
    <published>2019-02-03T06:27:03.000Z</published>
    <updated>2020-01-11T09:19:42.315Z</updated>
    
    <content type="html"><![CDATA[<p>常用的CentOS命令总结，方便查看与记忆。</p><a id="more"></a><h2 id="Linux常用命令"><a href="#Linux常用命令" class="headerlink" title="Linux常用命令"></a>Linux常用命令</h2><p>(1)查看DNS记录的命令（A记录、MX记录）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install bind-utils</span><br><span class="line"></span><br><span class="line">dig +noall +answer www.leezy.top</span><br></pre></td></tr></table></figure><p>(2) 查看端口常用命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -lnp|grep 80</span><br></pre></td></tr></table></figure><p>(3) 查看版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ll /etc/*centos*</span><br><span class="line">cat /etc/centos-release</span><br></pre></td></tr></table></figure><p>(4) 查看内核<br>经常在执行 yum udpate 命令后CentOS会出现多个启动项，所以我们经常要删除：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 查看当前系统正在使用的内核版本</span><br><span class="line">uname -a</span><br><span class="line"><span class="meta">#</span> 查看当前系统的全部Kernel</span><br><span class="line">rpm -q kernel</span><br><span class="line"><span class="meta">#</span> 删除多余的内核启动项</span><br><span class="line">yum remove kernel-3.10.0-957.el7.x86_64</span><br><span class="line"><span class="meta">#</span> 重新启动</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p>(5) 修改主机名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname NAME</span><br><span class="line"><span class="meta">#</span> 重启机器</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="CentOS-Minimal版本配置"><a href="#CentOS-Minimal版本配置" class="headerlink" title="CentOS Minimal版本配置"></a>CentOS Minimal版本配置</h2><h3 id="换源："><a href="#换源：" class="headerlink" title="换源："></a>换源：</h3><p><a href="http://mirrors.163.com/.help/centos.html" target="_blank" rel="noopener">http://mirrors.163.com/.help/centos.html</a></p><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install net-tools</span><br><span class="line">yum install wget</span><br><span class="line">yum install vim</span><br></pre></td></tr></table></figure><h3 id="配置JAVA环境变量"><a href="#配置JAVA环境变量" class="headerlink" title="配置JAVA环境变量"></a>配置JAVA环境变量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 在文件末尾添加环境配置</span><br><span class="line">export JAVA_HOME=/usr/jdk-11.0.2</span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/jre/lib/rt.jar:$&#123;JAVA_HOME&#125;/lib/dt.jar:$&#123;JAVA_HOME&#125;/lib/tools.jar</span><br><span class="line">export PATH=$PATH:$&#123;JAVA_HOME&#125;/bin</span><br><span class="line"><span class="meta">#</span> 使新的环境生效</span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 当Java版本更新时，仅仅修改JAVA_HOME的路径是不够的，需要删除链接</span><br><span class="line">which java</span><br><span class="line">/usr/jdk_xxx/bin/java</span><br><span class="line"></span><br><span class="line">which javac </span><br><span class="line">/usr/jdk_xxx_/bin/javac</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 删除链接</span><br><span class="line">rm -rf /usr/jdk_xxx/bin/java</span><br><span class="line">rm -rf /usr/jdk_xxx_/bin/javac</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 再执行使得新环境生效</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h3 id="GitLab-CE版安装"><a href="#GitLab-CE版安装" class="headerlink" title="GitLab CE版安装"></a>GitLab CE版安装</h3><p>新建 /etc/yum.repos.d/gitlab-ce.repo，内容为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[gitlab-ce]</span><br><span class="line">name=Gitlab CE Repository</span><br><span class="line">baseurl=https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el$releasever/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><p>再执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install curl openssh-server openssh-clients postfix cronie</span><br><span class="line">sudo service postfix start</span><br><span class="line">systemctl enable postfix.service</span><br><span class="line">(yum install lokkit)</span><br><span class="line">sudo lokkit -s http -s ssh</span><br><span class="line"></span><br><span class="line">sudo yum makecache</span><br><span class="line">sudo yum install gitlab-ce</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>启动GitLab</span><br><span class="line">sudo gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure><h3 id="常用的网络配置"><a href="#常用的网络配置" class="headerlink" title="常用的网络配置"></a>常用的网络配置</h3><p>修改DNS(貌似会重启失效)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/resolv.conf</span><br></pre></td></tr></table></figure><p>修改IP地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-enp0s3</span><br></pre></td></tr></table></figure><h3 id="清理内存"><a href="#清理内存" class="headerlink" title="清理内存"></a>清理内存</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo 3 &gt; /proc/sys/vm/drop_caches</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看内存使用情况</span><br><span class="line">free -h</span><br></pre></td></tr></table></figure><h3 id="Docker安装及配置"><a href="#Docker安装及配置" class="headerlink" title="Docker安装及配置"></a>Docker安装及配置</h3><p>Docker官方文档访问<a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-using-the-repository" target="_blank" rel="noopener">这里</a></p><p>阿里云安装文档<a href="https://yq.aliyun.com/articles/110806?spm=5176.8351553.0.0.4ef81991AdnpKb" target="_blank" rel="noopener">这里</a><br>Docker安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 仅公网环境，使用官方安装脚本</span><br><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure><p>由于直接使用DockerHub下载的速度很慢，所以可以使用阿里云的容器镜像加速服务,阿里云配置地址访问网址<a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors" target="_blank" rel="noopener">这里</a>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-'EOF'</span><br><span class="line">&#123;</span><br><span class="line">  "registry-mirrors": ["加速器地址"]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><p>这样就可以快速的使用Docker pull 等命令了。<br>清理Dcoker 容器：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker system prune</span><br></pre></td></tr></table></figure><h3 id="开放防火墙端口"><a href="#开放防火墙端口" class="headerlink" title="开放防火墙端口"></a>开放防火墙端口</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> --permanent 永久生效</span><br><span class="line">firewall-cmd --zone=public --add-port=9092/tcp --permanent</span><br><span class="line"><span class="meta">#</span> 重新载入</span><br><span class="line">firewall-cmd --reload</span><br><span class="line"><span class="meta">#</span> 查看</span><br><span class="line">firewall-cmd --zone=public --query-port=80/tcp</span><br><span class="line"><span class="meta">#</span> 删除</span><br><span class="line">firewall-cmd --zone=public --remove-port=80/tcp --permanent</span><br></pre></td></tr></table></figure><h3 id="Putty连接Ubuntu虚拟机"><a href="#Putty连接Ubuntu虚拟机" class="headerlink" title="Putty连接Ubuntu虚拟机"></a>Putty连接Ubuntu虚拟机</h3><blockquote><p>首先确保自己有root权限</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 设置root密码</span><br><span class="line">sudo passwd</span><br></pre></td></tr></table></figure><ol><li>首先配置Host-Only网卡，然后点击 <img src="/assets/blogImg/VirtualBox_NetWork.png" alt="VirtualBox 配置">  <img src="/assets/blogImg/VirtualBox_Host_Only.png" alt="VirtualBox Host Only 配置">  </li><li>登入虚拟机使用<code>ifconfig -a</code>命令, 发现会有三个网卡(lo-本地、enp0s3-NET、enp0s8-Host-Only), 但是Host-Only没有IP地址</li><li>输入<code>sudo dhclient enp0s8</code>, 即可获取IP地址</li><li>Ubuntu 18.0新版后, <code>/etc/network/interfaces</code>的文件配置已经被弃用, <code>vim /etc/netplan/50-cloud-init.yaml</code></li></ol><p>配置如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This file is generated from information provided by</span></span><br><span class="line"><span class="comment"># the datasource.  Changes to it will not persist across an instance.</span></span><br><span class="line"><span class="comment"># To disable cloud-init's network configuration capabilities, write a file</span></span><br><span class="line"><span class="comment"># /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg with the following:</span></span><br><span class="line"><span class="comment"># network: &#123;config: disabled&#125;</span></span><br><span class="line"><span class="attr">network:</span></span><br><span class="line"><span class="attr">    ethernets:</span></span><br><span class="line"><span class="attr">        enp0s3:</span></span><br><span class="line"><span class="attr">            dhcp4:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">        enp0s8:</span></span><br><span class="line"><span class="attr">            dhcp4:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">            addresses:</span> <span class="string">[192.168.56.101/24]</span></span><br><span class="line"><span class="attr">            nameservers:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">            optional:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    version:</span> <span class="number">2</span></span><br><span class="line"><span class="string">~</span></span><br></pre></td></tr></table></figure><p>修改完以后直接执行 <code>sudo netplan apply</code></p><ol start="5"><li>重启ssh服务 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service ssh restart</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;常用的CentOS命令总结，方便查看与记忆。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://www.leezy.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>《重新定义SpringCloud实战》读书笔记</title>
    <link href="https://www.leezy.top/2018/12/18/SpringCloud%E5%AD%A6%E4%B9%A0/"/>
    <id>https://www.leezy.top/2018/12/18/SpringCloud学习/</id>
    <published>2018-12-18T00:45:23.000Z</published>
    <updated>2019-12-16T06:44:06.010Z</updated>
    
    <content type="html"><![CDATA[<p>SpringCloud提供了快速构建分布式中常见模式的工具，包括配置管理、服务发现、断路器、智能路由、微代理、控制总线等。SpringCloud中间件是基于SpringBoot的实现，提供了对微服务完整的一套解决方案。</p><a id="more"></a><p>应用架构的发展历程：<br>单体应用架构 –&gt; 分布式架构 –&gt;面向服务的SOA架构 –&gt; 微服务架构<br>SOA架构个人理解是多个应用之间通过企业数据总线ESB通信的架构，其应用程序通过网络协议提供服务，消费服务，不同业务提供不同的服务。(阿里的服务治理框架Dubbo)<br>微服务架构：一个大型的应用拆分为多个相互独立的微服务，每个服务之间松耦合，通过REST API或者HTTP进行通信。</p><p><img src="/assets/blogImg/SOA_VS_%E5%BE%AE%E6%9C%8D%E5%8A%A1.png" alt="SOA VS MA"></p><p>SpringCloud包包含以下组件：<br>服务治理组件 Eureka / Consul + 客户端负载均衡组件 Ribbon + 声明式服务调用组件 Feign + API网关治理组件 Zuul / GateWay(高并发) + 熔断机制 HyStrix + 分布式配置中心组件 Spring Cloud Config / 携程 Apollo + 消息总线组件 Bus + 消息驱动组件 Stream + 分布式服务跟踪组件 Sleuth + 全链路监控 SkyWalking.</p><hr><p><em>Tips: 代码基于Spring Cloud Finchley 版本</em></p><hr><h2 id="服务治理：Spring-Cloud-Eureka"><a href="#服务治理：Spring-Cloud-Eureka" class="headerlink" title="服务治理：Spring Cloud Eureka"></a>服务治理：Spring Cloud Eureka</h2><p>负责微服务架构中的服务治理功能，即各个微服务实例的自动化注册与发现。<br>SpringCloud Eureka 是由 Netflix Eureka实现的，即包含了服务端组件也包含了客户端组件。<br>Eureka服务端也被称为服务注册中心，各个微服务启动时会向Eureka Server 注册自己的信息。代码如下：<br>在<a href="https://start.spring.io/" target="_blank" rel="noopener">https://start.spring.io/</a> 中新建一个Eureka Server的Demo，或者直接在Maven项目中的pom.xml文件中添加如下Dependence:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>eureka-server<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Greenwich.RC1<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>spring-milestones<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Spring Milestones<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repo.spring.io/milestone<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>EurekaServerApplication.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leezy.eureka_server;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="comment">//该注解启动一个服务注册中心提供给其他应用会话</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaServerApplication</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello Eureka Server!"</span>);</span><br><span class="line">        SpringApplication.run(EurekaServerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Eureka Server 中的 application.yml 和 application-standalone.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># application.yml</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    active:</span> <span class="string">standalone</span></span><br><span class="line"><span class="attr">  jackson:</span></span><br><span class="line"><span class="attr">    serialization:</span></span><br><span class="line"><span class="attr">      FAIL_ON_EMPTY_BEANS:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  server:</span></span><br><span class="line"><span class="attr">    use-read-only-response-cache:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    response-cache-auto-expiration-in-seconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line"><span class="attr">  endpoints:</span></span><br><span class="line"><span class="attr">    web:</span></span><br><span class="line"><span class="attr">      exposure:</span></span><br><span class="line"><span class="attr">        include:</span> <span class="string">'*'</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># application-standalone.yml</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8761</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">localhost</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    registerWithEureka:</span> <span class="literal">false</span> <span class="comment">#是否将自己注册到Eureka Server, 默认为True</span></span><br><span class="line"><span class="attr">    fetchRegistry:</span> <span class="literal">false</span> <span class="comment">#是否需要从Eureka Server获取注册信息, 默认为Ture</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span> <span class="comment"># 查询服务和注册服务的地址，多个用","隔开</span></span><br><span class="line"><span class="attr">  server:</span></span><br><span class="line"><span class="attr">      waitTimeInMsWhenSyncEmpty:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">      enableSelfPreservation:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>打开 <a href="http://localhost:8761/" target="_blank" rel="noopener">http://localhost:8761/</a> 看到Eureka的控制面板。<br>Eureka服务注册端， Eureka Client将微服务注册到Eureka Server上。<br>EurekaClientApplication.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leezy.eureka_client;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="comment">// 该注解适配性比较好，可以用于多种服务发现组件(Zookeeper、Consul)</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaClientApplication</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello Eureka Client!"</span>);</span><br><span class="line">        SpringApplication.run(EurekaClientApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Maven依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Eureka Client的配置文件： application.yml 和 application-demo.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#application.yml</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    active:</span> <span class="string">demo</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#application-demo.yml</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8081</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">demo-leezy</span> <span class="comment">#声明服务提供者的应用名称</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:8761/eureka/</span> <span class="comment">#设置与Eureka Server交互的地址</span></span><br><span class="line"><span class="attr">    instance:</span> </span><br><span class="line"><span class="attr">      prefer-ip-address:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>刷新Eureka控制台就可以看到注册到Server上的服务了。</p><p>Eureka的设计理念：</p><ol><li>服务实例如何注册到服务中心：<br>（1）调用Eureka Server的REST API 的 register方法<br>（2）Java语言使用者可以调用NetFlix的Eureka Client封装的API<br>（3）Spring Cloud使用者在pom.xml文件中引用 spring-cloud-starter-netflix-eureka-client，基于Spring Boot的自动配置即可。</li><li>服务实例从服务中心剔除<br>（1）服务实例正常关闭时，通过钩子方法或者生命周期回调方法调用Eureka Server 的REST API的de-register方法。<br>（2）Eureka要求Client定时续约(30s)，如果90s没有续约操作则Eureka Server主动剔除该操作。</li><li>服务实例信息的一致性问题<br>服务注册与发现中心应该也是一个集群，如何保证一致性<br>（1）AP优于CP (Zookeeper-CP, Eureka-AP)<br>（2）Peer to Peer架构(1. 主从复制 2. 对等复制)<br>（3）Zone及Region设计<br>（4）SELF PRESERVATION设计</li></ol><h2 id="WebService客户端-Feign"><a href="#WebService客户端-Feign" class="headerlink" title="WebService客户端 Feign"></a>WebService客户端 Feign</h2><p>Feign是一个声明式的Web Service客户端，用于服务与服务之间的调用，支持SpringMVC注解，整合了Ribbon以及Hystrix。<br>对应的POM依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>应用入口程序SpringCloudFeignApplication.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leezy.hello_feign;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.EnableFeignClients;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloFeignApplication</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">( String[] args )</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        SpringApplication.run(HelloFeignApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接口类：HelloFeignService.java，作用是应用指定的URL最终转化为Github API允许的URL。<br>eg：<a href="https://api.github.com/search/repositories?q=spring-cloud" target="_blank" rel="noopener">https://api.github.com/search/repositories?q=spring-cloud</a><br>(Github RestAPI的文档：<a href="https://developer.github.com/v3/search/" target="_blank" rel="noopener">https://developer.github.com/v3/search/</a>)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leezy.hello_feign.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.leezy.hello_feign.config.HelloFeignServiceConfig;</span><br><span class="line"></span><br><span class="line"><span class="meta">@FeignClient</span>(name = <span class="string">"github-client"</span>, url = <span class="string">"https://api.github.com"</span>, configuration = HelloFeignServiceConfig.class)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">HelloFeignService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/search/repositories"</span>, method = RequestMethod.GET)</span><br><span class="line">    <span class="function">String <span class="title">searchRepo</span><span class="params">(@RequestParam(name = <span class="string">"q"</span>)</span> String quertStr)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制类：HelloFeignController.java，作用：调用服务提供者的接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leezy.hello_feign.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.leezy.hello_feign.service.HelloFeignService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloFeignController</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> HelloFeignService helloFeignService;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@GetMapping</span>(value = <span class="string">"/search/github"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">searchGithubRepoByStr</span><span class="params">(@RequestParam(<span class="string">"str"</span>)</span> String queryStr) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> helloFeignService.searchRepo(queryStr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置类：HelloFeignServiceConfig.java，@Bean注解配置日志的bean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leezy.hello_feign.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> feign.Logger;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloFeignServiceConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    Logger.<span class="function">Level <span class="title">feignLoggerLevel</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//level有四个级别</span></span><br><span class="line">        <span class="keyword">return</span> Logger.Level.FULL;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置文件: application.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8010</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">Hello</span> <span class="string">Feign</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line"><span class="attr">  level:</span></span><br><span class="line">    <span class="string">com.leezy.hello_feign.service.HelloFeignService:</span> <span class="string">DEBUG</span> <span class="comment">#在这里配置日志的输出级别</span></span><br></pre></td></tr></table></figure><p>启动应用后，访问网址：<a href="http://localhost:8010/search/github?str=spring-cloud" target="_blank" rel="noopener">http://localhost:8010/search/github?str=spring-cloud</a><br>Feign支持的属性文件配置方式有两种：<br>application.yml(application.properties) 以及 Java方式的配置类，但是配置文件的优先级会高于Java类的优先级。<br>Feign默认的是JDK原生的URL Connection，并没有使用连接池，可以用Http Client和 okHttp进行替换对项目进行调优。</p><h3 id="Feign-的-POST-和-GET-的多参数传递"><a href="#Feign-的-POST-和-GET-的多参数传递" class="headerlink" title="Feign 的 POST 和 GET 的多参数传递"></a>Feign 的 POST 和 GET 的多参数传递</h3><p>Feign拦截器，将Json转化为Map。<br>实现Feign的RequestInterceptor中的apply方法来进行统一拦截转换处理Feign中的GET方法多参数传递问题。集成Swapper，编写服务消费者用于调用Feign进行Get或Post多参数传递。</p><h2 id="负载均衡组件-Ribbon"><a href="#负载均衡组件-Ribbon" class="headerlink" title="负载均衡组件 Ribbon"></a>负载均衡组件 Ribbon</h2><p>Feign中集成了Ribbon，但是Ribbon可以单独使用，它是一种进程内负载均衡器（客户端负载均衡），它赋予了应用支配Http和Tcp的能力。<br>负载均衡策略：最常用的是RoundRobinRule 轮询策略<br>代码样例：<br>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-ribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>启动类：RibbonLoadbalancerApplication.java<br>注入一个RestTemplate的Bean，并且使用@LoadBalances注解才能使其具备负载均衡的能力。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.springcloud.book;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.loadbalancer.LoadBalanced;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RibbonLoadbalancerApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(RibbonLoadbalancerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@LoadBalanced</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TestController.java<br>Ribbon客户端需要创建一个API来调用Eureka源服务自定义的API</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/add"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">(Integer a, Integer b)</span> </span>&#123;</span><br><span class="line">String result = restTemplate</span><br><span class="line">.getForObject(<span class="string">"http://CLIENT-A/add?a="</span> + a + <span class="string">"&amp;b="</span> + b, String.class);</span><br><span class="line">System.out.println(result);</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过查找继承关系，发现接口ILoadBalancer的实现抽象类AbstractLoadBalancer的实现类BaseLoadBalancer中的chooseServer方法是真正实现负载均衡的地方。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Get the alive server dedicated to key</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @return the dedicated server</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Server <span class="title">chooseServer</span><span class="params">(Object key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (counter == <span class="keyword">null</span>) &#123;</span><br><span class="line">        counter = createCounter();</span><br><span class="line">    &#125;</span><br><span class="line">    counter.increment();</span><br><span class="line">    <span class="keyword">if</span> (rule == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> rule.choose(key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            logger.warn(<span class="string">"LoadBalancer [&#123;&#125;]:  Error choosing server for key &#123;&#125;"</span>, name, key, e);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="熔断机制-Spring-Cloud-Hystrix"><a href="#熔断机制-Spring-Cloud-Hystrix" class="headerlink" title="熔断机制 Spring Cloud Hystrix"></a>熔断机制 Spring Cloud Hystrix</h2><p>Hystrix is a latency and fault tolerance library designed to isolate points of access to remote systems, services and 3rd party libraries, stop cascading failure and enable resilience in complex distributed systems where failure is inevitable.<br>Hystrix的设计目标是：</p><ol><li>通过客户端对延迟和故障进行保护和控制</li><li>在一个复杂的分布式系统中停止级联故障</li><li>快速失败和迅速恢复</li><li>在合理的情况下回退和优雅地降级</li><li>开启实时监控、告警和操作控制<br>pom.xml<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">relativePath</span> /&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.leezy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hystrix<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.apache.org<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Greenwich.RC1<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>spring-milestones<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Spring Milestones<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repo.spring.io/milestone<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>ClientApplication.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leezy.hystrix;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.hystrix.EnableHystrix;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableHystrix</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClientApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ClientApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TestController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leezy.hystrix.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.leezy.hystrix.service.IUserService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> IUserService userService;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/getUser"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUser</span><span class="params">(@RequestParam String username)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userService.getUser(username);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>IUserService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leezy.hystrix.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUser</span><span class="params">(String username)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leezy.hystrix.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.leezy.hystrix.service.IUserService;</span><br><span class="line"><span class="keyword">import</span> com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> <span class="keyword">implements</span> <span class="title">IUserService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 降级处理</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@HystrixCommand</span>(fallbackMethod=<span class="string">"defaultUser"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUser</span><span class="params">(String username)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (username.equals(<span class="string">"spring"</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"This is real user."</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">defaultUser</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"The User does not exist in the system...Test!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>bootstrap.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8888</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">hystrix-client-service</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://$&#123;eureka.host:127.0.0.1&#125;:$&#123;eureka.port:8761&#125;/eureka/</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    prefer-ip-address:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>打开浏览器访问：<a href="http://localhost:8888/getUser?username=spring" target="_blank" rel="noopener">http://localhost:8888/getUser?username=spring</a> 和 <a href="http://localhost:8888/getUser?username=testERROR" target="_blank" rel="noopener">http://localhost:8888/getUser?username=testERROR</a></p><h3 id="Hystrix-Dashboard"><a href="#Hystrix-Dashboard" class="headerlink" title="Hystrix Dashboard"></a>Hystrix Dashboard</h3><p>Hystrix Dashboard仪表盘是根据系统一段时间内发生的请求情况来展示的可视化面板。<br>Hystrix的指标需要端口进行支撑，所以需要增加actuator依赖。<br>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix-dashboard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>HystrixDashboardApplication.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableHystrixDashboard</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HystrixDashboardApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(HystrixDashboardApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面是单个实例的Hystrix Dashboard,整个系统和集群的情况下并不是特别有用。Turbine就是聚合所有相关Hystrix.stream 流的方案。</p><h2 id="网关治理组件-Zuul"><a href="#网关治理组件-Zuul" class="headerlink" title="网关治理组件 Zuul"></a>网关治理组件 Zuul</h2><p>Zuul is the front door for all requests from devices and web sites to the backend of the Netflix streaming application. Zuul是对内部的微服务提供可配置的，对外URL到服务的映射关系，基于JVM的后端路由器。<br>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-zuul<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>启动类ZuulServerApplication.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableZuulProxy</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZuulServerApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ZuulServerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>bootstrap.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">zuul-server</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">5555</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://$&#123;eureka.host:127.0.0.1&#125;:$&#123;eureka.port:8888&#125;/eureka/</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    prefer-ip-address:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">zuul:</span></span><br><span class="line"><span class="attr">  routes:</span></span><br><span class="line"><span class="attr">    client-a:</span></span><br><span class="line"><span class="attr">      path:</span> <span class="string">/client/**</span></span><br><span class="line"><span class="attr">      serviceId:</span> <span class="string">client-a</span></span><br></pre></td></tr></table></figure><p>最后五行的代码表示，Zuul组件的端口为portA，则将/client开头的URL映射搭配client-a这个服务中去，即实际访问portB。<br>/<em>* 匹配任意数量的路径和字符<br>/</em> 匹配任意数量的字符<br>/? 匹配单个字符</p><h3 id="Spring-Cloud-Zuul-Filter链"><a href="#Spring-Cloud-Zuul-Filter链" class="headerlink" title="Spring Cloud Zuul Filter链"></a>Spring Cloud Zuul Filter链</h3><p>(1) Filter的类型<br>(2) Filter的执行顺序<br>(3) Filter的执行条件<br>(4) Filter的执行效果<br>Zuul有四种不同生命周期的Filter,分别是：<br>pre Filter 按照规则路由到下级服务之前执行。比如鉴权、限流等<br>route Filter 路由动作的执行者（Apache HttpClient或Netflix Ribbon构建和发送原始Http请求的地方）<br>post Fliter 在源服务返回结果或者异常信息发生后执行的，对返回信息做一些处理<br>error Filter 在整个生命周期内如果发生异常，则会进入error Filter</p><p>Spring Cloud Zuul 权限集成<br>OAuth2.0 + JWT(JSON Web Token)</p><h3 id="动态路由-Dynamic-Routing"><a href="#动态路由-Dynamic-Routing" class="headerlink" title="动态路由 Dynamic Routing"></a>动态路由 Dynamic Routing</h3><p>有两种解决方案：<br>（1） Spring Cloud Config + Bus、动态刷新配置文件。<br>（2） 重写Zuul的配置读取方式</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SpringCloud提供了快速构建分布式中常见模式的工具，包括配置管理、服务发现、断路器、智能路由、微代理、控制总线等。SpringCloud中间件是基于SpringBoot的实现，提供了对微服务完整的一套解决方案。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="SpringCloud" scheme="https://www.leezy.top/tags/SpringCloud/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot学习</title>
    <link href="https://www.leezy.top/2018/12/11/SpringBoot%E5%AD%A6%E4%B9%A0/"/>
    <id>https://www.leezy.top/2018/12/11/SpringBoot学习/</id>
    <published>2018-12-11T02:34:25.000Z</published>
    <updated>2019-12-16T06:38:52.448Z</updated>
    
    <content type="html"><![CDATA[<p>Spring Boot makes it easy to create stand-alone, production-grade Spring-based Applications that you can run.</p><a id="more"></a><h2 id="1-常见注解"><a href="#1-常见注解" class="headerlink" title="1. 常见注解"></a>1. 常见注解</h2><h3 id="RequestMapping-GetMapping-amp-PostMapping"><a href="#RequestMapping-GetMapping-amp-PostMapping" class="headerlink" title="@RequestMapping (@GetMapping &amp; @PostMapping)"></a>@RequestMapping (@GetMapping &amp; @PostMapping)</h3><p>The @RequestMapping annotation provides “routing” information. It tells Spring that any HTTP request with the / path should be mapped to the home method.<br>@GetMapping是一个组合注解，是@RequestMapping(method = RequestMethod.GET)的缩写。<br>@PostMapping是一个组合注解，是@RequestMapping(method = RequestMethod.POST)的缩写。</p><h3 id="RestController"><a href="#RestController" class="headerlink" title="@RestController"></a>@RestController</h3><p>The @RestController annotation tells Spring to render the resulting string directly back to the caller.<br>等价于 @Controller + @ResponseBody,为了使Http请求返回数据格式为json格式。</p><h3 id="EnableAutoConfiguration"><a href="#EnableAutoConfiguration" class="headerlink" title="@EnableAutoConfiguration"></a>@EnableAutoConfiguration</h3><p>Since spring-boot-starter-web added Tomcat and Spring MVC, the auto-configuration assumes that you are developing a web application and sets up Spring accordingly.</p><h3 id="ConditionalOnProperty"><a href="#ConditionalOnProperty" class="headerlink" title="@ConditionalOnProperty"></a>@ConditionalOnProperty</h3><p>可以用来控制配置是否生效。</p><h3 id="SpringBootApplication"><a href="#SpringBootApplication" class="headerlink" title="@SpringBootApplication"></a>@SpringBootApplication</h3><p>The @SpringBootApplication annotation is often placed on your main class, and it implicitly defines a base “search package” for certain items. same as @Configuration,@EnableAutoConfiguration,@ComponentScan.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(Application.class, args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="@Configuration"></a>@Configuration</h3><p>Declare the configuration Classes.</p><h3 id="EnableAutoConfiguration-1"><a href="#EnableAutoConfiguration-1" class="headerlink" title="@EnableAutoConfiguration"></a>@EnableAutoConfiguration</h3><p>If you find that specific auto-configuration classes that you do not want are being applied, you can use the exclude attribute of @EnableAutoConfiguration to disable them.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.jdbc.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span>(exclude=&#123;DataSourceAutoConfiguration.class&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyConfiguration</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="EnableConfigurationProperties-和-ConfigurationProperties"><a href="#EnableConfigurationProperties-和-ConfigurationProperties" class="headerlink" title="@EnableConfigurationProperties 和 @ConfigurationProperties"></a>@EnableConfigurationProperties 和 @ConfigurationProperties</h3><p>这两个注解的作用可以参见 Spring Boot <a href="https://docs.spring.io/spring-boot/docs/2.1.0.RELEASE/reference/htmlsingle/#boot-features-external-config-typesafe-configuration-properties" target="_blank" rel="noopener">官方文档</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UriConfigurationProperties</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String httpbin = <span class="string">"http://httpbin.org:80"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getHttpbin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> httpbin;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHttpbin</span><span class="params">(String httpbin)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.httpbin = httpbin;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.spring.cloud.gateway;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.spring.cloud.gateway.properties.UriConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.EnableConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.gateway.route.RouteLocator;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//@EnableConfigurationProperties(org.spring.cloud.gateway.properties.UriConfigurationProperties.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GateWayApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(GateWayApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RouteLocator <span class="title">myRoutes</span><span class="params">(RouteLocatorBuilder builder, UriConfigurationProperties uriConfiguration)</span> </span>&#123;</span><br><span class="line">        String httpUri = uriConfiguration.getHttpbin();</span><br><span class="line">        <span class="keyword">return</span> builder.routes()</span><br><span class="line">            .route(p -&gt; p</span><br><span class="line">                .path(<span class="string">"/get"</span>)</span><br><span class="line">                .filters(f -&gt; f.addRequestHeader(<span class="string">"Hello"</span>, <span class="string">"World"</span>))</span><br><span class="line">                .uri(httpUri))</span><br><span class="line">            .route(p -&gt; p</span><br><span class="line">                .host(<span class="string">"*.hystrix.com"</span>)</span><br><span class="line">                .filters(f -&gt; f</span><br><span class="line">                    .hystrix(config -&gt; config</span><br><span class="line">                        .setName(<span class="string">"mycmd"</span>)</span><br><span class="line">                        .setFallbackUri(<span class="string">"forward:/fallback"</span>)))</span><br><span class="line">                .uri(httpUri))</span><br><span class="line">            .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述两个文件位于两个包下，如果在第一个文件中使用了@Component，则在第二个文件中就不能再使用@EnableConfigurationProperties注解，否则将会报错，提示有两个Bean。<br>如果第一个文件没有使用@Component则第二个文件可以将注释去掉。</p><p><strong>单元测试常用注解</strong></p><h3 id="RunWith-SpringJUnit4ClassRunner-class"><a href="#RunWith-SpringJUnit4ClassRunner-class" class="headerlink" title="@RunWith(SpringJUnit4ClassRunner.class)"></a>@RunWith(SpringJUnit4ClassRunner.class)</h3><p>引入Spring对JUnit4的支持。</p><h3 id="SpringApplicationConfiguration-classes-HelloApplication-class"><a href="#SpringApplicationConfiguration-classes-HelloApplication-class" class="headerlink" title="@SpringApplicationConfiguration(classes = HelloApplication.class)"></a>@SpringApplicationConfiguration(classes = HelloApplication.class)</h3><p>指定SpringBoot的启动类</p><h3 id="WebAppConfiguration"><a href="#WebAppConfiguration" class="headerlink" title="@WebAppConfiguration"></a>@WebAppConfiguration</h3><p>开启Web应用配置，用于模拟ServletContext</p><h3 id="Before-amp-Test-amp-After"><a href="#Before-amp-Test-amp-After" class="headerlink" title="@Before &amp; @Test &amp; @After"></a>@Before &amp; @Test &amp; @After</h3><p>@Before：JUnit中定义在测试用例@Test内容执行前预加载的内容，同理判断。</p><h2 id="2-Starter-POMs"><a href="#2-Starter-POMs" class="headerlink" title="2. Starter POMs"></a>2. Starter POMs</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>命名规则都是spring-boot-starter-<em>，</em>代表一个特别的应用功能模块。</p><h3 id="spring-boot-starter-web"><a href="#spring-boot-starter-web" class="headerlink" title="spring-boot-starter-web"></a>spring-boot-starter-web</h3><p>全栈Web开发模块，包含嵌入式的Tomcat、SpringMVC</p><h3 id="spring-boot-starter-test"><a href="#spring-boot-starter-test" class="headerlink" title="spring-boot-starter-test"></a>spring-boot-starter-test</h3><p>包含Junit、Hamcrest、Mockito</p><h3 id="spring-boot-starter-actuator"><a href="#spring-boot-starter-actuator" class="headerlink" title="spring-boot-starter-actuator"></a>spring-boot-starter-actuator</h3><p>为SpringBoot构建的应用提供一系列用于监控的端点。<br>访问：<a href="http://127.0.0.1:8080/actuator" target="_blank" rel="noopener">http://127.0.0.1:8080/actuator</a><br>可以看到输出了如下JSON文件：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"_links"</span>: &#123;</span><br><span class="line">        <span class="attr">"self"</span>: &#123;</span><br><span class="line">            <span class="attr">"href"</span>: <span class="string">"http://127.0.0.1:8080/actuator"</span>,</span><br><span class="line">            <span class="attr">"templated"</span>: <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"health"</span>: &#123;</span><br><span class="line">            <span class="attr">"href"</span>: <span class="string">"http://127.0.0.1:8080/actuator/health"</span>,</span><br><span class="line">            <span class="attr">"templated"</span>: <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"health-component"</span>: &#123;</span><br><span class="line">            <span class="attr">"href"</span>: <span class="string">"http://127.0.0.1:8080/actuator/health/&#123;component&#125;"</span>,</span><br><span class="line">            <span class="attr">"templated"</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"health-component-instance"</span>: &#123;</span><br><span class="line">            <span class="attr">"href"</span>: <span class="string">"http://127.0.0.1:8080/actuator/health/&#123;component&#125;/&#123;instance&#125;"</span>,</span><br><span class="line">            <span class="attr">"templated"</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"info"</span>: &#123;</span><br><span class="line">            <span class="attr">"href"</span>: <span class="string">"http://127.0.0.1:8080/actuator/info"</span>,</span><br><span class="line">            <span class="attr">"templated"</span>: <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="spring-boot-devtools"><a href="#spring-boot-devtools" class="headerlink" title="spring-boot-devtools"></a>spring-boot-devtools</h3><p>(1) Property Defaults<br>(2) Automatic Restart<br>(3) LiveReload<br>(4) Global Settings<br>(5) Remote Applications</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>SpringBoot的默认配置文件位置是src/main/resources/application.properties.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- application.properties --&gt;</span></span><br><span class="line">book.name=JAVA编程思想</span><br><span class="line">book.author=Bruce Eckel</span><br></pre></td></tr></table></figure><p>应用中可以使用 @Vlaue注解来加载这些自定义的参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;book.name&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="meta">@value</span>(<span class="string">"$&#123;book.author&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String author;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Java代码中引用有以下两种方式：</p><ol><li>PlaceHolder方式 ${…}</li><li>SpEL表达式 #{…}</li></ol><p>通过application-{profile}多环境配置文件：<br>application-dev.properties:开发环境<br>application-test.properties:测试环境<br>application-prod.properties:生产环境<br>在application.properties中的spring.profiles.active属性来设置。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 调用测试环境</span><br><span class="line">spring.profiles.active = test;</span><br></pre></td></tr></table></figure><p>在采用java -jar xxx.jar 形式运行项目时，”–”就是对application.properties中的属性值进行赋值的标识。<br>配置文件的优先级顺序如下：<br>命令行输入 &gt; 包外 &gt; 包内<br>所以可以在利用这一点来对配置进行快速准确的更改。</p><h3 id="spring-factories文件"><a href="#spring-factories文件" class="headerlink" title="spring.factories文件"></a>spring.factories文件</h3><p>Spring Factories实现原理(package org.springframework.core.io.support包下的SpringFactoriesLoader.class文件;)<br>Spring 容器初始化时会加载该文件声明的类，我们可以通过@SpringBootAppl<br>spring-core包里定义了SpringFactoriesLoader类，这个类实现了检索META-INF/spring.factories文件，并获取指定接口的配置的功能。在这个类中定义了两个对外的方法：</p><p>loadFactories: 根据接口类获取其实现类的实例，这个方法返回的是对象列表。<br>loadFactoryNames: 根据接口获取其接口类的名称，这个方法返回的是类名的列表。</p><h3 id="bootstrap-yml和appllication-yml的区别"><a href="#bootstrap-yml和appllication-yml的区别" class="headerlink" title="bootstrap.yml和appllication.yml的区别"></a>bootstrap.yml和appllication.yml的区别</h3><p>bootstrap.yml加载（父SpringApplicationContext）顺序在application.yml之前，用于应用程序上下文的引导阶段。用于指定spring.application.name和spring.cloud.config.server.git.uri以及一些加密和解密信息。<br>eg：Spring Cloud Config 配置中心再使用时，通常将访问远程文件配置信息写在bootstrap.yml文件中。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Spring Boot makes it easy to create stand-alone, production-grade Spring-based Applications that you can run.&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="SpringBoot" scheme="https://www.leezy.top/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>WebService学习</title>
    <link href="https://www.leezy.top/2018/11/26/WebService%E5%AD%A6%E4%B9%A0/"/>
    <id>https://www.leezy.top/2018/11/26/WebService学习/</id>
    <published>2018-11-26T06:34:25.000Z</published>
    <updated>2019-12-16T06:44:28.851Z</updated>
    
    <content type="html"><![CDATA[<p>WebService的两种实现方式，Soap WebService、Restful WebService。</p><a id="more"></a><p>RPC refers to Remote Procedure Call.<br>Use of RPC is recommended when there is heavy use of the client/server model.<br>RPC allows for the processing of multiple threads that share a given address.<br>RPC employed on a platform that uses EJB.<br>Web Service used in non-Java platforms when an app wants access.<br>Web Service also is used for synchronization of asynchronous communication.[1]</p><p>WebService是一种技术，有两种实现方式：JAX-WS(Java API for XML-Based Service面向消息)、JAX-RS(Java API for Restful WebService面向资源)<br>ps. RESTful 请求常用的方法有以下四种：</p><ol><li>GET: 用于查询对象</li><li>POST: 用于创建对象</li><li>PUT: 用于修改对象</li><li>DELETE: 用于删除对象</li></ol><h3 id="1-CXF-基于-SOAP-的-WebService"><a href="#1-CXF-基于-SOAP-的-WebService" class="headerlink" title="1. CXF 基于 SOAP 的 WebService"></a>1. CXF 基于 SOAP 的 WebService</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- IHelloWorld.java --&gt;</span><br><span class="line"><span class="keyword">package</span> top.leezy.www;</span><br><span class="line"><span class="keyword">import</span> javax.jws.WebService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebService</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IHelloWorld</span> </span>&#123;</span><br><span class="line"><span class="function">String <span class="title">sayHello</span><span class="params">(String name)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- HelloWorldImpl.java --&gt;</span><br><span class="line"><span class="keyword">package</span> top.leezy.www;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldImpl</span> <span class="keyword">implements</span> <span class="title">IHelloWorld</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"Hello "</span> + name;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- applicationContext.xml --&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:jaxws</span>=<span class="string">"http://cxf.apache.org/jaxws"</span> <span class="attr">xmlns:cxf</span>=<span class="string">"http://cxf.apache.org/core"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:wsa</span>=<span class="string">"http://cxf.apache.org/ws/addressing"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.1.xsd </span></span></span><br><span class="line"><span class="tag"><span class="string">     http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd </span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd    </span></span></span><br><span class="line"><span class="tag"><span class="string">    http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:META-INF/cxf/cxf.xml"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:META-INF/cxf/cxf-servlet.xml"</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">jaxws:endpoint</span> <span class="attr">id</span>=<span class="string">"HelloWorld"</span> <span class="attr">implementor</span>=<span class="string">"top.leezy.www.HelloWorldImpl"</span> <span class="attr">address</span>=<span class="string">"/sayHello"</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- web.xml --&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"</span></span></span><br><span class="line"><span class="tag"><span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"3.1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">display-name</span>&gt;</span>CXFwebservice<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:top/**/applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CxfServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.apache.cxf.transport.servlet.CXFServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CxfServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/webservice/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.jsp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>打开浏览器输入：<a href="http://127.0.0.1:8081/SoapWebService/webservice" target="_blank" rel="noopener">http://127.0.0.1:8081/SoapWebService/webservice</a><br><img src="/assets/blogImg/SoapWebService.png" alt="SoapWebService"></p><h3 id="2-CXF-基于-RestFul-的-WebService"><a href="#2-CXF-基于-RestFul-的-WebService" class="headerlink" title="2. CXF 基于 RestFul 的 WebService"></a>2. CXF 基于 RestFul 的 WebService</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Config.java --&gt;</span><br><span class="line"><span class="keyword">package</span> top.leezy.www;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Config</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;User&gt; users;</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">users = <span class="keyword">new</span> LinkedList&lt;User&gt;();</span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setId(<span class="string">"123456"</span>);</span><br><span class="line">user.setName(<span class="string">"SAKURA"</span>);</span><br><span class="line">users.add(user);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- User.java --&gt;</span><br><span class="line"><span class="keyword">package</span> top.leezy.www;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.bind.annotation.XmlRootElement;</span><br><span class="line"></span><br><span class="line"><span class="meta">@XmlRootElement</span>(name = <span class="string">"User"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- UserService.java --&gt;</span><br><span class="line"><span class="keyword">package</span> top.leezy.www;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.Consumes;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.DELETE;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.GET;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.POST;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.PUT;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.Path;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.Produces;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.PathParam;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.QueryParam;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.core.MediaType;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.core.Response;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.core.Response.Status;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Path</span>(<span class="string">"/UserService"</span>)</span><br><span class="line"><span class="comment">// 可以注释在方法上或者类上（以最小单位为准）, 指定返回给客户端的类型</span></span><br><span class="line"><span class="meta">@Produces</span>(&#123;<span class="string">"application/json"</span>, <span class="string">"application/xml"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"><span class="meta">@GET</span></span><br><span class="line"><span class="meta">@Path</span>(<span class="string">"/getUser/&#123;id&#125;"</span>)</span><br><span class="line"><span class="meta">@Produces</span>(MediaType.APPLICATION_XML)</span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">(@PathParam(<span class="string">"id"</span>)</span> String id) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (id != <span class="keyword">null</span> &amp;&amp; id.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (User user : Config.users) &#123;</span><br><span class="line"><span class="keyword">if</span>(id.equals(user.getId()))</span><br><span class="line"><span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br><span class="line">User add_user = <span class="keyword">new</span> User();</span><br><span class="line">add_user.setId(id);</span><br><span class="line"><span class="keyword">return</span> add_user;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> User();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@POST</span></span><br><span class="line"><span class="meta">@Path</span>(<span class="string">"/regUser"</span>)</span><br><span class="line"><span class="comment">// 一般用于 @PUT、@POST, 用于接受客户端发送过来的MIME类型</span></span><br><span class="line"><span class="meta">@Consumes</span>(&#123;<span class="string">"application/json"</span>, <span class="string">"application/xml"</span>&#125;)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Response <span class="title">regUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (Config.users.contains(user)) &#123;</span><br><span class="line"><span class="keyword">return</span> Response.status(Status.BAD_REQUEST).build();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">Config.users.add(user);</span><br><span class="line"><span class="keyword">return</span> Response.ok(<span class="string">"id = "</span> + user.getId() + <span class="string">", name = "</span> + user.getName()).build();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@DELETE</span></span><br><span class="line"><span class="meta">@Path</span>(<span class="string">"/delUser"</span>)</span><br><span class="line"><span class="meta">@Consumes</span>(&#123;<span class="string">"application/json"</span>, <span class="string">"application/xml"</span>&#125;)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Response <span class="title">delPerson</span><span class="params">(@QueryParam(<span class="string">"id"</span>)</span> String id) </span>&#123;</span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setId(id);</span><br><span class="line"><span class="keyword">if</span> (Config.users.contains(user)) &#123;</span><br><span class="line"><span class="keyword">return</span> Response.status(Status.BAD_REQUEST).build();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">Config.users.remove(user);</span><br><span class="line"><span class="keyword">return</span> Response.ok(user).build();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@PUT</span></span><br><span class="line"><span class="meta">@Path</span>(<span class="string">"/updateUser"</span>)</span><br><span class="line"><span class="meta">@Consumes</span>(&#123;<span class="string">"application/json"</span>, <span class="string">"application/xml"</span>&#125;)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Response <span class="title">updateUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (Config.users.contains(user)) &#123;</span><br><span class="line"><span class="keyword">return</span> Response.status(Status.BAD_REQUEST).build();</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (User old_user : Config.users) &#123;</span><br><span class="line"><span class="keyword">if</span> (old_user.equals(user)) &#123;</span><br><span class="line">old_user.setName(user.getName());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> Response.ok(user).build();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- beans.xml --&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:jaxrs</span>=<span class="string">"http://cxf.apache.org/jaxrs"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">                            http://www.springframework.org/schema/beans/spring-beans-2.5.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                            http://cxf.apache.org/jaxrs</span></span></span><br><span class="line"><span class="tag"><span class="string">                            http://cxf.apache.org/schemas/jaxrs.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:META-INF/cxf/cxf.xml"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:META-INF/cxf/cxf-servlet.xml"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userService"</span> <span class="attr">class</span>=<span class="string">"top.leezy.www.UserService"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">jaxrs:server</span> <span class="attr">id</span>=<span class="string">"rs_server"</span> <span class="attr">address</span>=<span class="string">"/restfulService"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jaxrs:serviceBeans</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"userService"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">jaxrs:serviceBeans</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">jaxrs:server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- web.xml --&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span></span></span><br><span class="line"><span class="tag"><span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"3.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">display-name</span>&gt;</span>CxfRestWebservice<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:top/**/beans.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>cxfservlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.apache.cxf.transport.servlet.CXFServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>cxfservlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/webservice/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>打开浏览器输入：<a href="http://127.0.0.1:8081/RestFulWebService/webservice/" target="_blank" rel="noopener">http://127.0.0.1:8081/RestFulWebService/webservice/</a><br><img src="/assets/blogImg/RestFulWebService.png" alt="RestFulWebService"><br>使用POSTMan进行测试：<br><img src="/assets/blogImg/RestFulWebService%E4%BD%BF%E7%94%A8_POST.png" alt="RestFulWebService使用_POST"><br>RestFul WebService 的JAR包较 Soap WebService 要区别以下几个：<br>-javax.ws.rs-api-2.1.1.jar<br>-cxf-rt-frontend-jaxrs-3.2.7.jar</p><p>参考文献：<br>[1]<a href="http://www.differencebetween.net/technology/protocols-formats/difference-between-rpc-and-web-service/#ixzz5YLemRQhd" target="_blank" rel="noopener">http://www.differencebetween.net/technology/protocols-formats/difference-between-rpc-and-web-service/#ixzz5YLemRQhd</a><br>[2]<a href="https://www.cnblogs.com/zhuyiqizhi/p/6213502.html" target="_blank" rel="noopener">https://www.cnblogs.com/zhuyiqizhi/p/6213502.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;WebService的两种实现方式，Soap WebService、Restful WebService。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="JavaWEB" scheme="https://www.leezy.top/tags/JavaWEB/"/>
    
  </entry>
  
  <entry>
    <title>CentOS安装Tomcat</title>
    <link href="https://www.leezy.top/2018/11/20/CentOS%E5%AE%89%E8%A3%85Tomcat/"/>
    <id>https://www.leezy.top/2018/11/20/CentOS安装Tomcat/</id>
    <published>2018-11-20T14:46:41.000Z</published>
    <updated>2019-12-12T09:58:30.023Z</updated>
    
    <content type="html"><![CDATA[<p>系统：CentOS Linux release 7.5.1804<br>Tomcat版本： apache-tomcat-7.0.92.tar.gz</p><a id="more"></a><h3 id="1-下载Tomcat"><a href="#1-下载Tomcat" class="headerlink" title="1. 下载Tomcat"></a>1. 下载Tomcat</h3><p>下载链接：<a href="https://www-us.apache.org/dist/tomcat/tomcat-7/v7.0.92/bin/apache-tomcat-7.0.92.tar.gz" target="_blank" rel="noopener">https://www-us.apache.org/dist/tomcat/tomcat-7/v7.0.92/bin/apache-tomcat-7.0.92.tar.gz</a></p><h3 id="2-解压缩文件"><a href="#2-解压缩文件" class="headerlink" title="2. 解压缩文件"></a>2. 解压缩文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-tomcat-7.0.92.tar.gz</span><br></pre></td></tr></table></figure><h3 id="3-打开8080端口并重启防火墙"><a href="#3-打开8080端口并重启防火墙" class="headerlink" title="3. 打开8080端口并重启防火墙"></a>3. 打开8080端口并重启防火墙</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=8080/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h3 id="4-配置tomcat-users-xml"><a href="#4-配置tomcat-users-xml" class="headerlink" title="4. 配置tomcat-users.xml"></a>4. 配置tomcat-users.xml</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 在最后添加用户角色用户名密码 参数意义可以在自带的文档上查看--&gt;</span><br><span class="line">&lt;role rolename="admin-gui"/&gt;</span><br><span class="line">&lt;role rolename="manager-gui"/&gt;</span><br><span class="line">&lt;role rolename="manager-jmx"/&gt;</span><br><span class="line">&lt;user username="admin" password="admin" roles="admin-gui,manager-gui,manager-jmx" /&gt;</span><br></pre></td></tr></table></figure><h3 id="5-访问Tomcat-Manager"><a href="#5-访问Tomcat-Manager" class="headerlink" title="5. 访问Tomcat Manager"></a>5. 访问Tomcat Manager</h3><p>访问地址： <a href="http://192.168.56.101:8080/" target="_blank" rel="noopener">http://192.168.56.101:8080/</a> 并登陆 admin admin<br><img src="/assets/blogImg/Tomcat%E6%8E%A7%E5%88%B6%E5%8F%B0.png" alt="Tomcat控制台"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;系统：CentOS Linux release 7.5.1804&lt;br&gt;Tomcat版本： apache-tomcat-7.0.92.tar.gz&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://www.leezy.top/tags/Linux/"/>
    
      <category term="Tomcat" scheme="https://www.leezy.top/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB安装</title>
    <link href="https://www.leezy.top/2018/11/20/MongoDB%E5%AE%89%E8%A3%85/"/>
    <id>https://www.leezy.top/2018/11/20/MongoDB安装/</id>
    <published>2018-11-20T01:08:25.000Z</published>
    <updated>2019-12-16T06:38:36.893Z</updated>
    
    <content type="html"><![CDATA[<p>安装解压缩版本的MongoDB(mongodb-win32-x86_64-2008plus-ssl-4.0.4)的简单命令。</p><a id="more"></a><h3 id="1-配置环境变量"><a href="#1-配置环境变量" class="headerlink" title="1. 配置环境变量"></a>1. 配置环境变量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 加入环境变量</span><br><span class="line">C:\Program Files\mongodb-win32-x86_64-2008plus-ssl-4.0.4\bin</span><br></pre></td></tr></table></figure><h3 id="2-创建-data-文件夹-及-log-文件夹"><a href="#2-创建-data-文件夹-及-log-文件夹" class="headerlink" title="2. 创建 data 文件夹 及 log 文件夹"></a>2. 创建 data 文件夹 及 log 文件夹</h3><p>创建 mongodb-data 和 mongodb-log 文件夹</p><h3 id="3-用管理员权限执行安装命令"><a href="#3-用管理员权限执行安装命令" class="headerlink" title="3. 用管理员权限执行安装命令"></a>3. 用管理员权限执行安装命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd C:\Program Files\mongodb-win32-x86_64-2008plus-ssl-4.0.4\bin</span><br><span class="line">mongod --dbpath "C:\Program Files\mongodb-win32-x86_64-2008plus-ssl-4.0.4\mongodb-data" --logpath "C:\Program Files\mongodb-win32-x86_64-2008plus-ssl-4.0.4\mongodb-log\MongoDB.log" --install --serviceName "mongo" --logappend --directoryperdb</span><br></pre></td></tr></table></figure><h3 id="4-测试安装结果"><a href="#4-测试安装结果" class="headerlink" title="4. 测试安装结果"></a>4. 测试安装结果</h3><p>访问 <a href="http://127.0.0.1:27017/" target="_blank" rel="noopener">http://127.0.0.1:27017/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;安装解压缩版本的MongoDB(mongodb-win32-x86_64-2008plus-ssl-4.0.4)的简单命令。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="MongoDB" scheme="https://www.leezy.top/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>TensorFlow实验记录</title>
    <link href="https://www.leezy.top/2018/03/06/TensorFlow%E5%AE%9E%E9%AA%8C%E8%AE%B0%E5%BD%95/"/>
    <id>https://www.leezy.top/2018/03/06/TensorFlow实验记录/</id>
    <published>2018-03-06T03:28:53.000Z</published>
    <updated>2019-12-16T06:44:21.778Z</updated>
    
    <content type="html"><![CDATA[<p>环境说明：<br>系统：Ubuntu Server 16.04.1 LTS 64位<br>Python版本：Python 3.5.2<br>TensorFlow版本：1.4</p><a id="more"></a><h3 id="用户切换（最好启用root否则会有Bug）"><a href="#用户切换（最好启用root否则会有Bug）" class="headerlink" title="用户切换（最好启用root否则会有Bug）"></a>用户切换（最好启用root否则会有Bug）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 输入Linux root用户密码</span><br><span class="line">sudo passwd root</span><br><span class="line"># 默认用户切换到root用户</span><br><span class="line">su root</span><br></pre></td></tr></table></figure><h3 id="安装python环境"><a href="#安装python环境" class="headerlink" title="安装python环境"></a>安装python环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 不用默认的2.7 安装python3.5</span><br><span class="line">sudo apt-get install python3.5</span><br><span class="line"># 系统环境切换成python3.5</span><br><span class="line">sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 100</span><br><span class="line">sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 150</span><br></pre></td></tr></table></figure><h3 id="安装TensorFlow"><a href="#安装TensorFlow" class="headerlink" title="安装TensorFlow"></a>安装TensorFlow</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 采用pip安装，首先安装</span><br><span class="line"># 查看系统内置的pip版本</span><br><span class="line">pip3 -V</span><br><span class="line"># 更新并安装</span><br><span class="line">sudo apt-get install python3-pip python3-dev</span><br><span class="line">sudo pip install --upgrade pip</span><br><span class="line"># 安装CPU版本的TensorFlow</span><br><span class="line">pip3 install tensorflow</span><br></pre></td></tr></table></figure><p>注意要保证pip是最新版本否则会出现以下错误：<br><img src="/assets/blogImg/pip%E6%9C%AA%E8%BE%BE%E5%88%B0%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC.png" alt="pip未达到最新版本"></p><h3 id="测试TensorFlow"><a href="#测试TensorFlow" class="headerlink" title="测试TensorFlow"></a>测试TensorFlow</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hello = tf.constant(<span class="string">'Hello, TensorFlow'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sess = tf.Session()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(sess.run(hello))</span><br></pre></td></tr></table></figure><p><img src="/assets/blogImg/%E6%B5%8B%E8%AF%95TensorFlow%E5%AE%89%E8%A3%85.png" alt="测试TensorFlow安装"></p><h3 id="查看TensorFlow版本"><a href="#查看TensorFlow版本" class="headerlink" title="查看TensorFlow版本"></a>查看TensorFlow版本</h3><p><img src="/assets/blogImg/%E6%9F%A5%E7%9C%8BTensFlow%E7%89%88%E6%9C%AC.png" alt="查看TensFlow版本"></p><hr><h3 id="备用知识点-Note"><a href="#备用知识点-Note" class="headerlink" title="备用知识点(Note)"></a>备用知识点(Note)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. vim -r filename 恢复未正常保存生成的.swap文件</span><br><span class="line">2. (Note)</span><br><span class="line">convolutional neural network 卷积神经网络</span><br><span class="line">rectified linear unit 线性修正单元 ReLU</span><br><span class="line">input layer --&gt; hidden layer(more than one) --&gt; output layer</span><br></pre></td></tr></table></figure><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">pip3 install -U scikit-learn</span><br><span class="line"></span><br><span class="line">pip3 install scipy</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 下载 MNIST 数据集（http://wiki.jikexueyuan.com/project/tensorflow-zh/tutorials/mnist_download.html）</span><br><span class="line">wget http://tensorflow-1253902462.cosgz.myqcloud.com/mnist_cnn/t10k-images-idx3-ubyte.gz</span><br><span class="line">wget http://tensorflow-1253902462.cosgz.myqcloud.com/mnist_cnn/t10k-labels-idx1-ubyte.gz</span><br><span class="line">wget http://tensorflow-1253902462.cosgz.myqcloud.com/mnist_cnn/train-images-idx3-ubyte.gz</span><br><span class="line">wget http://tensorflow-1253902462.cosgz.myqcloud.com/mnist_cnn/train-labels-idx1-ubyte.gz</span><br><span class="line"></span><br><span class="line">pip3 install \</span><br><span class="line">  -i https://pypi.tuna.tsinghua.edu.cn/simple/ \</span><br><span class="line">  https://mirrors.tuna.tsinghua.edu.cn/tensorflow/linux/cpu/tensorflow-1.7.0-cp35-cp35m-linux_x86_64.whl</span><br></pre></td></tr></table></figure><h3 id="Windows环境下-ipynb文件相关（python笔记）"><a href="#Windows环境下-ipynb文件相关（python笔记）" class="headerlink" title="Windows环境下.ipynb文件相关（python笔记）"></a>Windows环境下.ipynb文件相关（python笔记）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 安装python环境不必多说</span><br><span class="line">pip install ipython</span><br><span class="line"></span><br><span class="line">pip install &quot;ipython[notebook]&quot;</span><br><span class="line"></span><br><span class="line"># cd 到有.ipynb文件的目录下执行下列命令就会自动打开浏览器点击文件即可打开文件</span><br><span class="line">ipython notebook</span><br></pre></td></tr></table></figure><p><img src="/assets/blogImg/ipynb%E6%96%87%E4%BB%B6.png" alt="Windows10安装效果"></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;环境说明：&lt;br&gt;系统：Ubuntu Server 16.04.1 LTS 64位&lt;br&gt;Python版本：Python 3.5.2&lt;br&gt;TensorFlow版本：1.4&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://www.leezy.top/tags/Linux/"/>
    
      <category term="TensorFlow" scheme="https://www.leezy.top/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>C++标准模板库STL学习笔记</title>
    <link href="https://www.leezy.top/2018/02/27/C++%E6%A0%87%E5%87%86%E6%A8%A1%E6%9D%BF%E5%BA%93STL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://www.leezy.top/2018/02/27/C++标准模板库STL学习笔记/</id>
    <published>2018-02-27T14:35:25.000Z</published>
    <updated>2019-09-18T12:12:30.736Z</updated>
    
    <content type="html"><![CDATA[<p>面试笔试算法必备知识点！文章内容总结自《算法笔记》，时刻巩固以免忘记(lll￢ω￢)</p><a id="more"></a><h3 id="1-vectory用法："><a href="#1-vectory用法：" class="headerlink" title="1.vectory用法："></a>1.vectory用法：</h3><p>Vectory：变长数组</p><ol><li><p>定义方法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vectory&lt;<span class="keyword">typename</span>&gt; name;</span><br><span class="line"><span class="comment">// eg:</span></span><br><span class="line">vectory&lt;<span class="keyword">int</span>&gt; nums;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果typename类型也是一个STL容器，定义方式如下：</span></span><br><span class="line">vectory&lt;vectory&lt;<span class="keyword">int</span>&gt; &gt; name; <span class="comment">// &gt;&gt;之间有空格避免歧义 --》两维都可变的二维数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// vectory数组的定义方式如下：</span></span><br><span class="line">vectory&lt;<span class="keyword">typename</span>&gt; Arrayname[arraySize] <span class="comment">// 一维可变的二维数组</span></span><br><span class="line"><span class="comment">// eg:</span></span><br><span class="line">vectory&lt;<span class="keyword">int</span>&gt; nums[<span class="number">10</span>]</span><br></pre></td></tr></table></figure></li><li><p>访问方法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过下标访问：</span></span><br><span class="line">nums[<span class="number">0</span>], nums[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过迭代器访问：</span></span><br><span class="line">vectory&lt;<span class="keyword">typename</span>&gt;::iterator it;</span><br><span class="line"><span class="comment">//eg:</span></span><br><span class="line">vectory&lt;<span class="keyword">int</span>&gt;::iterator it; <span class="comment">// 得到迭代器it，通过*it进行访问vectory</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// nums[i] 等价于 *(it + i)</span></span><br></pre></td></tr></table></figure></li><li><p>常用函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1. push_back(x) 在vectory末尾添加一个元素x O(1) nums.push_back(i);</span><br><span class="line">2. pop_back() 在vectory末尾删除一个元素 O(1) nums.pop_back();</span><br><span class="line">3. size() 求得vectory元素个数 O(1) nums.size()</span><br><span class="line">4. begin() 求得vectory数组nums首地址与it指向地址一样 O(1) nums.beagin()</span><br><span class="line">5. end() 求得vectory数组nums尾元素的下一个地址 O(1) nums.end()</span><br><span class="line">6. clear() 清空vectory所有元素 O(n) nums.clear()</span><br><span class="line">7. insert(it, x) 向vectory任意迭代器it处插入一个元素x O(N) nums.insert(nums.begin() + 2， 3)</span><br><span class="line">8. erase(it) 删除迭代器it处元素 O(n) nums.erase(nums.begin() + 2)</span><br><span class="line">9. erase(first, last) 删除[first, last)内的所有元素 O(n) nums.erase(num.begin() + 1, num.end())删除除第一个元素外的其他元素</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;面试笔试算法必备知识点！文章内容总结自《算法笔记》，时刻巩固以免忘记(lll￢ω￢)&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="C++" scheme="https://www.leezy.top/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>SSM框架总结</title>
    <link href="https://www.leezy.top/2017/08/09/SSM%E6%A1%86%E6%9E%B6%E6%80%BB%E7%BB%93/"/>
    <id>https://www.leezy.top/2017/08/09/SSM框架总结/</id>
    <published>2017-08-09T12:10:41.000Z</published>
    <updated>2019-12-16T06:44:12.853Z</updated>
    
    <content type="html"><![CDATA[<p>SSM框架的一些基本知识总结。</p><a id="more"></a><h3 id="1-SSM定义"><a href="#1-SSM定义" class="headerlink" title="1.SSM定义"></a>1.SSM定义</h3><p>SSM = Spring + SpringMVC + MyBatis<br>Spring:<br>Spring是一个轻量级的控制反转（IoC）和面向切面（AOP）的容器框架。</p><p>SpringMVC命名及分层：<br>edu.xju.common.util 公共部分<br>edu.xju.controller 控制层<br>edu.xju.dao 数据层<br>edu.xju.entity 实体层<br>edu.xju.service 服务层</p><p>MyBatis:<br>比Hibernate要灵活多用于需求不断变更的项目。</p><h3 id="2-Web项目执行顺序"><a href="#2-Web项目执行顺序" class="headerlink" title="2.Web项目执行顺序"></a>2.Web项目执行顺序</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- web.xml 程序执行入口 --&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span> <span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"3.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring-*.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 如果使用如下配置，Spring Web MVC框架将加载“classpath:spring-mvc.xml”来进行初始化上下文而不是“/WEB-INF/[servlet名字]-servlet.xml”。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 传给上下文实例（由contextClass指定）的字符串，用来指定上下文的位置。这个字符串可以被分成多个字符串（使用逗号作为分隔符） 来支持多个上下文（在多上下文的情况下，如果同一个bean被定义两次，后面一个优先）。 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- load-on-startup：表示启动容器时初始化该Servlet； --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- url-pattern：表示哪些请求交给Spring Web MVC处理， “/” 是用来定义默认servlet映射的。也可以如“*.html”表示拦截所有以html为扩展名的请求。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.json<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 从main.jsp开始 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>main.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>DispatcherServlet拦截所有请求，在这里是拦截.do和.json结尾的请求。<br>该DispatcherServlet默认使用WebApplicationContext作为上下文，Spring默认配置文件为“/WEB-INF/[servlet名字]-servlet.xml”。<br><strong>ContextLoaderListener初始化的上下文和DispatcherServlet初始化的上下文关系</strong><br><img src="/assets/blogImg/%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%8A%E4%B8%8B%E6%96%87%E5%85%B3%E7%B3%BB.jpg" alt="初始化上下文关系"><br>ContextLoaderListener初始化的上下文加载的Bean是对整个应用程序共享的；<br>DispatcherServlet初始化的上下文加载的Bean是只对Spring Web MVC有效的Bean；即只加载Web相关的组件。<br><strong>DispatcherServlet的继承关系</strong><br><img src="/assets/blogImg/DispatcherServlet%E7%BB%A7%E6%89%BF%E5%85%B3%E7%B3%BB.png" alt="DispatcherServlet继承关系"></p><p><strong>DispatcherServlet initialization parameters</strong><br>![DispatcherServlet initialization parameters](/assets/blogImg/DispatcherServlet initialization parameters.png)</p><ol><li><em>HttpServletBean继承HttpServlet</em>，因此在Web容器启动时将调用它的init方法，该初始化方法的主要作用<br>将Servlet初始化参数（init-param）设置到该组件上（如contextAttribute、contextClass、namespace、contextConfigLocation），通过BeanWrapper简化设值过程，方便后续使用；提供给子类初始化扩展点，initServletBean()，该方法由FrameworkServlet覆盖。</li><li><em>FrameworkServlet继承HttpServletBean</em>，通过initServletBean()进行Web上下文初始化，该方法主要覆盖一下两件事情：<br> 初始化web上下文；<br> 提供给子类初始化扩展点；</li><li><em>DispatcherServlet继承FrameworkServlet</em>，并实现了onRefresh()方法提供一些前端控制器相关的配置；</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- spring-mvc.xml --&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 扫描这个控制包内部的Controller --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"edu.xju.controller"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jspViewResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"viewClass"</span> <span class="attr">value</span>=<span class="string">"org.springframework.web.servlet.view.JstlView"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/jsp/"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"messageConverters"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">// spring-mybatis.xml</span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"edu"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"org.apache.commons.dbcp.BasicDataSource"</span> <span class="attr">destroy-method</span>=<span class="string">"close"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mydb?charsetEncoding=utf8"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--sessionFactory代理--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--注解扫描--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"edu.xju.dao"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sqlSessionFactoryBeanName"</span> <span class="attr">value</span>=<span class="string">"sessionFactory"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--spring 事务管理--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--定义事务声明 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"txAdvice"</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"get*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"add*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"update*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"delete*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"serviceAop"</span> <span class="attr">expression</span>=<span class="string">"execution(* edu.xju.service.*Service.*(..))"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"txAdvice"</span> <span class="attr">pointcut-ref</span>=<span class="string">"serviceAop"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">// main.jsp</span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>基本的 ssm 框架<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">a&#123;</span></span><br><span class="line"><span class="undefined">font-size: 20px;</span></span><br><span class="line"><span class="undefined">display: block;</span></span><br><span class="line"><span class="undefined">margin-top: 30px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath &#125;/user/addUser.do"</span>&gt;</span>添加用户<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath &#125;/user/list.do"</span>&gt;</span>查找所有用户<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath &#125;/user/getUserA.json?id=1"</span>&gt;</span>获取某个用户JSON格式1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath &#125;/user/getUserB.json?id=2"</span>&gt;</span>获取某个用户JSON格式2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UserController.java</span></span><br><span class="line"><span class="keyword">package</span> edu.xju.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> edu.xju.common.util.JsonUtil;</span><br><span class="line"><span class="keyword">import</span> edu.xju.entity.User;</span><br><span class="line"><span class="keyword">import</span> edu.xju.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 这个是返回页面</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> model</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/list.do"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsers</span><span class="params">(Model model,HttpSession session)</span></span>&#123;</span><br><span class="line">    List&lt;User&gt; users = userService.getAll();</span><br><span class="line">        model.addAttribute(<span class="string">"list"</span>,users);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"list"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取json 的第一种方式</span></span><br><span class="line"><span class="comment">     * 返回json 格式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> model</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> session</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/getUserA.json"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getUserByIdA</span><span class="params">(Model model,HttpSession session,Integer id )</span></span>&#123;</span><br><span class="line">    User user = userService.findUserById(id);</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取第json 的第二种方式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> model</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> session</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/getUserB.json"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserByIdB</span><span class="params">(Model model,HttpServletResponse response,HttpSession session,Integer id )</span></span>&#123;</span><br><span class="line">    User user = userService.findUserById(id);</span><br><span class="line">    JsonUtil.printByJSON(response, user);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/addUser.do"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">insertUser</span><span class="params">(Model model,HttpSession session,Integer id,String name,Integer age )</span></span>&#123;</span><br><span class="line">    name = <span class="string">"测试姓名"</span>;</span><br><span class="line">    age = <span class="number">99</span>;</span><br><span class="line">    User user = <span class="keyword">new</span> User(name, age);</span><br><span class="line">    userService.addUser(user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"insertOK"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// User.java</span></span><br><span class="line"><span class="keyword">package</span> edu.xju.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">( String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UserService.java</span></span><br><span class="line"><span class="keyword">package</span> edu.xju.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> edu.xju.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span>  List&lt;User&gt; <span class="title">getAll</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findUserById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UserServiceImpl.java</span></span><br><span class="line"><span class="keyword">package</span> edu.xju.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> edu.xju.dao.UserMapper;</span><br><span class="line"><span class="keyword">import</span> edu.xju.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.getAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findUserById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> userMapper.getUserById(id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">userMapper.insertUser(user);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>MyBatis</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UserMapper.java</span></span><br><span class="line"><span class="keyword">package</span> edu.xju.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> edu.xju.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getAll</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">getUserById</span><span class="params">(@Param(<span class="string">"id"</span>)</span>Integer id)</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertUser</span><span class="params">(User user)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">// UserMapper.xml</span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"edu.xju.dao.UserMapper"</span> &gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 声明属性与查询字段之间的的对应关系 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"BaseResultMap"</span> <span class="attr">type</span>=<span class="string">"edu.xju.entity.User"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">jdbcType</span>=<span class="string">"INTEGER"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"name"</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"age"</span> <span class="attr">property</span>=<span class="string">"age"</span> <span class="attr">jdbcType</span>=<span class="string">"INTEGER"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getAll"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMap"</span>&gt;</span></span><br><span class="line">      select id,name,age from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getUserById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMap"</span>&gt;</span></span><br><span class="line">      select id,name,age from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"insertUser"</span> <span class="attr">parameterType</span>=<span class="string">"edu.xju.entity.User"</span>&gt;</span></span><br><span class="line">        insert into user(name,age) values(#&#123;name&#125;,#&#123;age&#125;)</span><br><span class="line">   <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-序列图"><a href="#3-序列图" class="headerlink" title="3.序列图"></a>3.序列图</h3><p><img src="/assets/blogImg/%E5%BA%8F%E5%88%97%E5%9B%BE.png" alt="流程序列图"></p><h3 id="4-常用注解解析："><a href="#4-常用注解解析：" class="headerlink" title="4.常用注解解析："></a>4.常用注解解析：</h3><blockquote><p>@Autowired 和 @Resource的使用场景和区别</p></blockquote><p>@Autowired 是byType自动注入，是Spring的注解。@Resource默认是byName注入，默认使用成员属性的变量名注入，是Java自带的注解。</p><blockquote><p>@Scope(“prototype”) 和 @Scope(“singleton”) 的区别</p></blockquote><p>singleton 表示Spring容器中的单例，通过spring 容器获取该bean时总是返回唯一的实例。<br>prototype 表示每次获取该bean时都会new 一个新的对象实例。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Scope</span>(<span class="string">"singleton"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonTestService</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> b = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如代码所示，如果设置为singleton，当a++和b++时，a和b都会增加。如果设置为prototype的话，则只有a会增加，b不会增加。</p><blockquote><p>static 静态变量</p></blockquote><p>静态变量整个内存中<code>只有一个副本</code>，为所有对象所共享，当且仅当类加载时才会被初始化；而非静态变量是对象所拥有的，在创建对象时被初始化，<code>存在多个副本</code>，每个对象之间拥有的副本互不影响。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SSM框架的一些基本知识总结。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="JavaWEB" scheme="https://www.leezy.top/tags/JavaWEB/"/>
    
  </entry>
  
  <entry>
    <title>数据库设计技巧</title>
    <link href="https://www.leezy.top/2017/08/09/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E6%8A%80%E5%B7%A7/"/>
    <id>https://www.leezy.top/2017/08/09/数据库设计技巧/</id>
    <published>2017-08-09T01:58:25.000Z</published>
    <updated>2019-12-16T06:43:15.614Z</updated>
    
    <content type="html"><![CDATA[<p>设计数据库的一些坑的总结。</p><a id="more"></a><h3 id="1-Int与Integer的区别"><a href="#1-Int与Integer的区别" class="headerlink" title="1.Int与Integer的区别"></a>1.Int与Integer的区别</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 学生</span></span><br><span class="line"><span class="comment"> * 在使用Hibernate设计数据表声明数据类型时，Java代码中ID一般都设置成Integer类型，因为它可以默认为null，而</span></span><br><span class="line"><span class="comment"> * 在使用性别时，一般都是使用Int类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"tb_student"</span>)</span><br><span class="line"><span class="meta">@Cache</span>(usage=CacheConcurrencyStrategy.READ_WRITE)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Id</span></span><br><span class="line"><span class="meta">@GeneratedValue</span>(strategy=GenerationType.IDENTITY)</span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="comment">// 姓名</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="comment">// 年龄</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"><span class="comment">// 性别</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> gender;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-有依赖关联表与无依赖关联表"><a href="#2-有依赖关联表与无依赖关联表" class="headerlink" title="2.有依赖关联表与无依赖关联表"></a>2.有依赖关联表与无依赖关联表</h3><p><em>一张表里只能有一个主键，或者有一种情况是one primary key included two fileds.</em><br><strong>有依赖关联表：通过在用户信息表里加入用户ID实现两张表的关联。</strong></p><p><img src="/assets/blogImg/%E6%9C%89%E4%BE%9D%E8%B5%96%E7%9A%84%E5%85%B3%E8%81%94.png" alt="有依赖关联表"><br>具体实现：<br><strong>逻辑模型</strong><br><img src="/assets/blogImg/%E9%80%BB%E8%BE%91%E6%A8%A1%E5%9E%8B.png" alt="有依赖关联表"><br><strong>物理模型</strong><br><img src="/assets/blogImg/%E7%89%A9%E7%90%86%E6%A8%A1%E5%9E%8B.png" alt="有依赖关联表"></p><hr><p><strong>无依赖关联表：通过引入第三张表来进行用户表与用户信息表的关联。</strong></p><p><img src="/assets/blogImg/%E6%97%A0%E4%BE%9D%E8%B5%96%E5%85%B3%E8%81%94.png" alt="无依赖关联表"></p><h3 id="3-Hibernate中一对一、一对多以及多对多的注解实现"><a href="#3-Hibernate中一对一、一对多以及多对多的注解实现" class="headerlink" title="3.Hibernate中一对一、一对多以及多对多的注解实现"></a>3.Hibernate中一对一、一对多以及多对多的注解实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1:1 &lt;==&gt; Person:IdCard</span></span><br><span class="line"><span class="comment">// Person.java</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"tb_person"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Id</span></span><br><span class="line"><span class="meta">@GeneratedValue</span>(strategy = GenerationType.IDENTITY)</span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 姓名</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 年龄</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 身份证</span></span><br><span class="line"><span class="meta">@OneToOne</span>(mappedBy=<span class="string">"person"</span>)  <span class="comment">//放弃维护主控权</span></span><br><span class="line"><span class="keyword">private</span> IdCard card;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//IdCard.java</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"tb_idcard"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IdCard</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Id</span></span><br><span class="line"><span class="meta">@GeneratedValue</span>(strategy = GenerationType.IDENTITY)</span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 身份证号</span></span><br><span class="line"><span class="keyword">private</span> String sno;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 所属人</span></span><br><span class="line"><span class="meta">@OneToOne</span></span><br><span class="line"><span class="meta">@JoinColumn</span>(name=<span class="string">"person_id"</span>, unique=<span class="keyword">true</span>)</span><br><span class="line"><span class="keyword">private</span> Person person;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1:n &lt;==&gt; Department:Employee</span></span><br><span class="line"><span class="comment">// Department.java</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"tb_dept"</span>)</span><br><span class="line"><span class="meta">@Cache</span>(usage=CacheConcurrencyStrategy.READ_WRITE)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Department</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Id</span></span><br><span class="line"><span class="meta">@GeneratedValue</span>(strategy = GenerationType.IDENTITY)</span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 名称</span></span><br><span class="line"><span class="meta">@Column</span>(length = <span class="number">50</span>)</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认实体类所有字段都映射, 可使用@Transient声明不做映射</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> sn;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拥有多个员工</span></span><br><span class="line"><span class="meta">@OneToMany</span>(mappedBy = <span class="string">"dept"</span>)  <span class="comment">//mappedBy：表示放弃维护主控权</span></span><br><span class="line"><span class="keyword">private</span> Set&lt;Employee&gt; emps = <span class="keyword">new</span> HashSet&lt;Employee&gt;();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Employee.java</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name=<span class="string">"tb_emp"</span>)</span><br><span class="line"><span class="meta">@Cache</span>(usage=CacheConcurrencyStrategy.READ_WRITE)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Employee</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Id</span></span><br><span class="line"><span class="meta">@GeneratedValue</span>(strategy=GenerationType.IDENTITY)</span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="comment">// 姓名</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 部门</span></span><br><span class="line"><span class="meta">@ManyToOne</span></span><br><span class="line"><span class="meta">@JoinColumn</span>(name=<span class="string">"dept_id"</span>)</span><br><span class="line"><span class="keyword">private</span> Department dept;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// n:n &lt;==&gt; Course:Student</span></span><br><span class="line"><span class="comment">// Course.java</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"tb_course"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Course</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Id</span></span><br><span class="line"><span class="meta">@GeneratedValue</span>(strategy = GenerationType.IDENTITY)</span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="comment">// 名称</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 学生</span></span><br><span class="line"><span class="meta">@ManyToMany</span></span><br><span class="line"><span class="meta">@JoinTable</span>(name=<span class="string">"tb_student_course"</span>, </span><br><span class="line">joinColumns=<span class="meta">@JoinColumn</span>(name=<span class="string">"course_id"</span>), </span><br><span class="line">inverseJoinColumns=<span class="meta">@JoinColumn</span>(name=<span class="string">"student_id"</span>))</span><br><span class="line"><span class="keyword">private</span> Set&lt;Student&gt; students = <span class="keyword">new</span> HashSet&lt;Student&gt;();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Student.java</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name=<span class="string">"tb_student"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Id</span></span><br><span class="line"><span class="meta">@GeneratedValue</span>(strategy=GenerationType.IDENTITY)</span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="comment">// 姓名</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="comment">// 课程</span></span><br><span class="line"><span class="meta">@ManyToMany</span>(mappedBy=<span class="string">"students"</span>)</span><br><span class="line"><span class="keyword">private</span> Set&lt;Course&gt; courses = <span class="keyword">new</span> HashSet&lt;Course&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;设计数据库的一些坑的总结。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="MySQL" scheme="https://www.leezy.top/tags/MySQL/"/>
    
      <category term="Hibernate" scheme="https://www.leezy.top/tags/Hibernate/"/>
    
  </entry>
  
  <entry>
    <title>面试-Java基础知识</title>
    <link href="https://www.leezy.top/2017/07/28/JAVA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E9%9D%A2%E8%AF%95/"/>
    <id>https://www.leezy.top/2017/07/28/JAVA基础知识-面试/</id>
    <published>2017-07-28T11:26:59.000Z</published>
    <updated>2019-12-21T09:40:47.902Z</updated>
    
    <content type="html"><![CDATA[<p>扎实基础！</p><a id="more"></a><p>笔试让我明白了自己的一些问题。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">byte</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">byte</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">byte</span> c = a + b;</span><br><span class="line"><span class="comment">// 报错 默认最低是Int类型</span></span><br><span class="line"><span class="keyword">byte</span> c = (<span class="keyword">byte</span>)a + b;</span><br><span class="line"><span class="keyword">int</span> c = a + b;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lzy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> b = a++;</span><br><span class="line">System.out.println(a);<span class="comment">//1</span></span><br><span class="line"><span class="keyword">int</span> c = ++a;</span><br><span class="line">System.out.println(a);<span class="comment">//2</span></span><br><span class="line">System.out.println(a++);<span class="comment">//2</span></span><br><span class="line">System.out.println(++a);<span class="comment">//4</span></span><br><span class="line">System.out.println(b);<span class="comment">//0</span></span><br><span class="line">System.out.println(c);<span class="comment">//2</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">5</span>;</span><br><span class="line"><span class="comment">// a的变化：6   7     8     9    10</span></span><br><span class="line"><span class="comment">// b的变化： 5    7     7     8     10</span></span><br><span class="line"><span class="keyword">int</span> b = a++ + ++a + a++ + a++ + ++a;</span><br><span class="line">System.out.println(b); <span class="comment">//37</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//&amp;对每一个都判断；</span></span><br><span class="line"><span class="keyword">if</span> (a==<span class="number">0</span> &amp; a++==<span class="number">1</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"&amp;"</span>);<span class="comment">//不输出</span></span><br><span class="line">&#125;</span><br><span class="line">System.out.println(a);<span class="comment">//1</span></span><br><span class="line"><span class="comment">//&amp;&amp;只要前面是false就输出false，而不继续判断后面了</span></span><br><span class="line"><span class="keyword">if</span> (a==<span class="number">0</span> &amp;&amp; a++==<span class="number">1</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"&amp;&amp;"</span>);<span class="comment">//不输出</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (a==<span class="number">1</span> &amp;&amp; a++==<span class="number">1</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"&amp;&amp;"</span>);<span class="comment">//输出</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 随机数</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 随机数产生的范围是[0, 1)</span></span><br><span class="line"><span class="keyword">double</span> num = Math.random();</span><br><span class="line"><span class="comment">// 这样子[0, 0.5) [0.5, 1)才能真正平衡</span></span><br><span class="line"><span class="keyword">if</span> (num &gt;= <span class="number">0.5</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"成都"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">"赵雷"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出指定范围的数字</span></span><br><span class="line"><span class="comment">// [26, 38]</span></span><br><span class="line"><span class="comment">// 方法一： (int)(Math.random()*(max - min) + min);</span></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">25</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">38</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>  scal = (<span class="keyword">int</span>)(Math.random()*(b - a + <span class="number">1</span>)) + a;</span><br><span class="line">System.out.println(scal);</span><br><span class="line"><span class="comment">// 方法二：</span></span><br><span class="line"><span class="keyword">int</span> scall = (<span class="keyword">int</span>)(Math.random() * <span class="number">100</span> % <span class="number">12</span>) + a;</span><br><span class="line">System.out.println(scall);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="基础知识点"><a href="#基础知识点" class="headerlink" title="基础知识点"></a>基础知识点</h2><h3 id="一：-与-equal的区别："><a href="#一：-与-equal的区别：" class="headerlink" title="一：== 与 equal的区别："></a>一：== 与 equal的区别：</h3><ol><li>== 是一个运算符。</li><li>Equals则是string对象的方法，可以.（点）出来。</li><li>因为对象变量的存储的是对象在内存中的路径，即内存地址。所以用“==”比较时，即使<br>对象的值相等，但是他们的内存地址不同(引用数据类型)，所以==的结果为false。故“==”用于比较两<br>个变量的值是否相等，而不是变量引用的对象是否相等。</li><li>equal用于比较两个对象是否相同。 </li><li>“==”比较的是值【变量(栈)内存中存放的对象的(堆)内存地址】<br>equal用于比较两个对象的值是否相同【不是比地址】 </li></ol><p>【特别注意】Object类中的equals方法和“==”是一样的，没有区别，而String类，Integer类等等一些类，是重写了equals方法，才使得equals和“==不同”，所以，当自己创建类时，自动继承了Object的equals方法，要想实现不同的等于比较，必须重写equals方法。”==”比”equal”运行速度快,因为”==”只是比较引用.</p><h3 id="二：public、protected、private、default（friendly）的区别"><a href="#二：public、protected、private、default（friendly）的区别" class="headerlink" title="二：public、protected、private、default（friendly）的区别:"></a>二：public、protected、private、default（friendly）的区别:</h3><p><img src="/assets/blogImg/public_protected_private_default.png" alt="Java中作用范围表"></p><p>public：可以被其他类访问<br>private：只能被自己访问和修改<br>protected:类内部、子类、同一个包中的类之间可以访问<br>default：作用域是包，可以不写。被认为是friendly</p><h3 id="final关键字："><a href="#final关键字：" class="headerlink" title="final关键字："></a>final关键字：</h3><p>修饰类：表示该类不能被继承，final类的所有成员方法都会被隐式的指定为final方法<br>修饰方法：变是该方法不能被子类修改，类的private方法会被隐式的指定为final方法<br>修饰变量：基本数据变量不可以被更改<br>         引用类型变量不可以再更改指向另一个对象</p><h3 id="Java线程安全与非线程安全："><a href="#Java线程安全与非线程安全：" class="headerlink" title="Java线程安全与非线程安全："></a>Java线程安全与非线程安全：</h3><p>多线程安全优点体现在多个线程操作同一个对象，非线程安全 != 不安全<br>线程安全是通过线程同步控制来实现的，也就是synchronized关键字。<br>ArrayList是非线程安全 Vector是线程安全；<br>HashMap是非线程安全 HashTable是线程安全；<br>StringBuilder是非线程安全 StringBuffer是线程安全；<br><a href="http://blog.csdn.net/YiZhiCXY/article/details/51335385" target="_blank" rel="noopener">http://blog.csdn.net/YiZhiCXY/article/details/51335385</a></p><h3 id="String、StringBuffer、StringBuilder的区别："><a href="#String、StringBuffer、StringBuilder的区别：" class="headerlink" title="String、StringBuffer、StringBuilder的区别："></a>String、StringBuffer、StringBuilder的区别：</h3><p>String： 字符串常量<br>StringBuffer: 字符串变量（线程安全） 多线程下有优势<br>StringBuilder: 字符串变量（非线程安全） 单线程下有优势</p><h3 id="Array、ArrayList、Vectory、LinkedList的区别：-推荐看源码"><a href="#Array、ArrayList、Vectory、LinkedList的区别：-推荐看源码" class="headerlink" title="Array、ArrayList、Vectory、LinkedList的区别：(推荐看源码)"></a>Array、ArrayList、Vectory、LinkedList的区别：(推荐看源码)</h3><p>ArrayList是为可变数组实现的，当更多的元素添加到ArrayList的时候，它的大小会动态增大。它的元素可以通过get/set方法直接访问，因为ArrayList本质上是一个数组。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Resizable-array implementation of the &#123;<span class="doctag">@code</span> List&#125; interface.  Implements</span></span><br><span class="line"><span class="comment"> * all optional list operations, and permits all elements, including</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> null&#125;.  In addition to implementing the &#123;<span class="doctag">@code</span> List&#125; interface,</span></span><br><span class="line"><span class="comment"> * this class provides methods to manipulate the size of the array that is</span></span><br><span class="line"><span class="comment"> * used internally to store the list.  (This class is roughly equivalent to</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> Vector&#125;, except that it is unsynchronized.)</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;The &#123;<span class="doctag">@code</span> size&#125;, &#123;<span class="doctag">@code</span> isEmpty&#125;, &#123;<span class="doctag">@code</span> get&#125;, &#123;<span class="doctag">@code</span> set&#125;,</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> iterator&#125;, and &#123;<span class="doctag">@code</span> listIterator&#125; operations run in constant</span></span><br><span class="line"><span class="comment"> * time.  The &#123;<span class="doctag">@code</span> add&#125; operation runs in &lt;i&gt;amortized constant time&lt;/i&gt;,</span></span><br><span class="line"><span class="comment"> * that is, adding n elements requires O(n) time.  All of the other operations</span></span><br><span class="line"><span class="comment"> * run in linear time (roughly speaking).  The constant factor is low compared</span></span><br><span class="line"><span class="comment"> * to that for the &#123;<span class="doctag">@code</span> LinkedList&#125; implementation.</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><p>LinkedList是为双向链表实现的,非线程安全(not )</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Doubly-linked list implementation of the &#123;<span class="doctag">@code</span> List&#125; and &#123;<span class="doctag">@code</span> Deque&#125;</span></span><br><span class="line"><span class="comment"> * interfaces.  Implements all optional list operations, and permits all</span></span><br><span class="line"><span class="comment"> * elements (including &#123;<span class="doctag">@code</span> null&#125;).</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;All of the operations perform as could be expected for a doubly-linked</span></span><br><span class="line"><span class="comment"> * list.  Operations that index into the list will traverse the list from</span></span><br><span class="line"><span class="comment"> * the beginning or the end, whichever is closer to the specified index.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;&lt;strong&gt;Note that this implementation is not synchronized.&lt;/strong&gt;</span></span><br><span class="line"><span class="comment"> * If multiple threads access a linked list concurrently, and at least</span></span><br><span class="line"><span class="comment"> * one of the threads modifies the list structurally, it &lt;i&gt;must&lt;/i&gt; be</span></span><br><span class="line"><span class="comment"> * synchronized externally.  (A structural modification is any operation</span></span><br><span class="line"><span class="comment"> * that adds or deletes one or more elements; merely setting the value of</span></span><br><span class="line"><span class="comment"> * an element is not a structural modification.)  This is typically</span></span><br><span class="line"><span class="comment"> * accomplished by synchronizing on some object that naturally</span></span><br><span class="line"><span class="comment"> * encapsulates the list.</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><p>Vector与ArrayList相似，但是它是同步的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The &#123;<span class="doctag">@code</span> Vector&#125; class implements a growable array of</span></span><br><span class="line"><span class="comment"> * objects. Like an array, it contains components that can be</span></span><br><span class="line"><span class="comment"> * accessed using an integer index. However, the size of a</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> Vector&#125; can grow or shrink as needed to accommodate</span></span><br><span class="line"><span class="comment"> * adding and removing items after the &#123;<span class="doctag">@code</span> Vector&#125; has been created.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Each vector tries to optimize storage management by maintaining a</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> capacity&#125; and a &#123;<span class="doctag">@code</span> capacityIncrement&#125;. The</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> capacity&#125; is always at least as large as the vector</span></span><br><span class="line"><span class="comment"> * size; it is usually larger because as components are added to the</span></span><br><span class="line"><span class="comment"> * vector, the vector's storage increases in chunks the size of</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> capacityIncrement&#125;. An application can increase the</span></span><br><span class="line"><span class="comment"> * capacity of a vector before inserting a large number of</span></span><br><span class="line"><span class="comment"> * components; this reduces the amount of incremental reallocation.</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><p>如果你的程序是线程安全的，ArrayList是一个比较好的选择。当更多的元素被添加的时候，Vector和ArrayList需要更多的空间。Vector每次扩容会增加一倍的空间，而ArrayList增加50%。</p><p>注意：ArrayList默认的初始空间大小相当的小，通过构造函数去初始化一个更大的空间是一个好习惯，可以避免扩容开销。<br>部分引自于：<a href="https://www.cnblogs.com/chenpi/p/5505375.html" target="_blank" rel="noopener">https://www.cnblogs.com/chenpi/p/5505375.html</a> </p><h3 id="Map、List、Set、Array的区别："><a href="#Map、List、Set、Array的区别：" class="headerlink" title="Map、List、Set、Array的区别："></a>Map、List、Set、Array的区别：</h3><p><a href="https://www.cnblogs.com/chuanheliu/p/6363948.html" target="_blank" rel="noopener">https://www.cnblogs.com/chuanheliu/p/6363948.html</a></p><h3 id="Iterator-的hasNext方法和next方法"><a href="#Iterator-的hasNext方法和next方法" class="headerlink" title="Iterator 的hasNext方法和next方法:"></a>Iterator 的hasNext方法和next方法:</h3><p>hasNext():如果仍有元素可以迭代，则返回 true。（换句话说，如果 next 返回了元素而不是抛出异常，则返回 true）。<br>next():返回迭代的下一个元素。 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns &#123;<span class="doctag">@code</span> true&#125; if the iteration has more elements.</span></span><br><span class="line"><span class="comment"> * (In other words, returns &#123;<span class="doctag">@code</span> true&#125; if &#123;<span class="doctag">@link</span> #next&#125; would</span></span><br><span class="line"><span class="comment"> * return an element rather than throwing an exception.)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if the iteration has more elements</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the next element in the iteration.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the next element in the iteration</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> NoSuchElementException if the iteration has no more elements</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">E <span class="title">next</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h3 id="JAVA多线程和并发基础面试问答"><a href="#JAVA多线程和并发基础面试问答" class="headerlink" title="JAVA多线程和并发基础面试问答:"></a>JAVA多线程和并发基础面试问答:</h3><p><a href="http://www.cnblogs.com/dolphin0520/p/3932934.html" target="_blank" rel="noopener">http://www.cnblogs.com/dolphin0520/p/3932934.html</a></p><h3 id="Oracle数据库中TRUNCATE-与-DELETE-的区别："><a href="#Oracle数据库中TRUNCATE-与-DELETE-的区别：" class="headerlink" title="Oracle数据库中TRUNCATE 与 DELETE 的区别："></a>Oracle数据库中TRUNCATE 与 DELETE 的区别：</h3><ol><li>ROLLBACK可以撤销DELETE操作但撤销不了TRUNCATE操作</li><li>TRUNCATE TABLE比DELETE的速度快；</li><li>TRUNCATE TABLE是删除表的所有行，而DELETE是删除表的一行或者多行</li><li>TRUNCATE TABLE在遇到任何一行违反约束(外键约束)时仍然删除表的所有行，但表的结构及其列、约束、索引等保持不变，DELETE则直接返回报错。</li><li>对于被外键约束的表，不能使用TRUNCATE TABLE，而应该使用不带WHERE语句的DELETE语句。</li><li>如果想保留标识计数值，要用DELETE，因为TRUNCATE TABLE会对新行标志符列搜用的计数值重置为该列的种子。</li></ol><h3 id="序列化的作用："><a href="#序列化的作用：" class="headerlink" title="序列化的作用："></a>序列化的作用：</h3><p>为了保存在内存中的各种对象的状态（序列化），并且可以把保存的对象状态再读出来（反序列化）。</p><h3 id="JAVA-中的-super和this"><a href="#JAVA-中的-super和this" class="headerlink" title="JAVA 中的 super和this"></a>JAVA 中的 super和this</h3><blockquote><p>this的用法</p></blockquote><ol><li>指向当前对象本身。</li><li>形参与成员名字重名，用this来区分<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 形参与成员名字重名，用this来区分</span></span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>super用法</p></blockquote><ol><li>指向当前对象的父类</li><li>子类中的成员变量或方法与父类同名<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestTest</span> <span class="keyword">extends</span> <span class="title">Country</span> </span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">value</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        name = <span class="string">"Shanghai"</span>;</span><br><span class="line">        <span class="keyword">super</span>.value();</span><br><span class="line">        System.out.println(<span class="keyword">super</span>.name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TestTest tt = <span class="keyword">new</span> TestTest();</span><br><span class="line">        tt.value();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Country</span> </span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">value</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        name = <span class="string">"China"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;扎实基础！&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Java" scheme="https://www.leezy.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Npm模块学习</title>
    <link href="https://www.leezy.top/2017/07/27/Npm%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A0/"/>
    <id>https://www.leezy.top/2017/07/27/Npm模块学习/</id>
    <published>2017-07-27T11:33:30.000Z</published>
    <updated>2019-12-16T07:51:56.688Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
      <category term="Npm" scheme="https://www.leezy.top/tags/Npm/"/>
    
  </entry>
  
  <entry>
    <title>随笔</title>
    <link href="https://www.leezy.top/2017/07/27/%E9%9A%8F%E7%AC%94/"/>
    <id>https://www.leezy.top/2017/07/27/随笔/</id>
    <published>2017-07-27T11:33:30.000Z</published>
    <updated>2019-09-18T12:12:30.746Z</updated>
    
    <content type="html"><![CDATA[<p>今年7月中旬，我来到了成都，见识到了成都的美。</p><a id="more"></a><p><img src="/assets/blogImg/Work_Palce_Chengdu.jpg" alt="成都大数据中心"></p><h1 id="成都"><a href="#成都" class="headerlink" title="成都"></a>成都</h1><hr><p>让我掉下眼泪的 不止昨夜的酒</p><p>让我依依不舍的 不止你的温柔</p><p>余路还要走多久 你攥着我的手</p><p>让我感到为难的 是挣扎的自由</p><p>分别总是在九月 回忆是思念的愁</p><p>深秋嫩绿的垂柳 亲吻着我额头</p><p>在那座阴雨的小城里 我从未忘记你</p><p>成都 带不走的 只有你</p><p>和我在成都的街头走一走</p><p>直到所有的灯都熄灭了也不停留</p><p>你会挽着我的衣袖 我会把手揣进裤兜</p><p>走到玉林路的尽头 坐在(走过)小酒馆的门口</p><p>分别总是在九月 回忆是思念的愁</p><p>深秋嫩绿的垂柳 亲吻着我额头</p><p>在那座阴雨的小城里 我从未忘记你</p><p>成都 带不走的 只有你</p><p>和我在成都的街头走一走</p><p>直到所有的灯都熄灭了也不停留</p><p>你会挽着我的衣袖 我会把手揣进裤兜</p><p>走到玉林路的尽头 坐在(走过)小酒馆的门口</p><p>和我在成都的街头走一走</p><p>直到所有的灯都熄灭了也不停留</p><p>和我在成都的街头走一走</p><p>直到所有的灯都熄灭了也不停留</p><p>你会挽着我的衣袖 我会把手揣进裤兜</p><p>走到玉林路的尽头 坐在(走过)小酒馆的门口</p><p>和我在成都的街头走一走</p><p>直到所有的灯都熄灭了也不停留</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今年7月中旬，我来到了成都，见识到了成都的美。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://www.leezy.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
